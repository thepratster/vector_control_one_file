// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data1 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data1] 32 $depth 1 
// $pipe  in_data2 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data2] 32 $depth 1 
// $pipe  in_data3 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data3] 32 $depth 1 
// $pipe  in_data4 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data4] 32 $depth 1 
// $pipe  in_data5 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data5] 32 $depth 1 
// $pipe  out_data1 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data1] 32 $depth 1 
// $pipe  out_data2 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data2] 32 $depth 1 
// $pipe  out_data3 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data3] 32 $depth 1 
// $pipe  out_data4 : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data4] 32 $depth 1 
$module [fdiv32] 
{
  $in a:$float<11,52>
  // can point into  foreign( $void )
  b:$float<11,52>
  // can point into  foreign( $void )
  $out ret_val__:$float<11,52>
  // can point into  foreign( $void )
  // pipe-declarations for block %fdiv32
  //  file prog.aa, line 93
  // pipe-declarations for block %fdiv32%body
  //  file prog.aa, line 98
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 109
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 118
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 146
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 153
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 161
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_232] // Branch Block  file prog.aa, line 98
    {
      $P [branch_block_stmt_232__entry__]
      branch_block_stmt_232__entry__ <-| ($entry)
      $P [branch_block_stmt_232__exit__]
      branch_block_stmt_232__exit__ |-> ($exit)
      $P [assign_stmt_236_to_assign_stmt_259__entry__] 
      $P [assign_stmt_236_to_assign_stmt_259__exit__] 
      $P [if_stmt_260__entry__] 
      $P [if_stmt_260__exit__] 
      $P [merge_stmt_266__entry__] 
      $P [merge_stmt_266__exit__] 
      $P [assign_stmt_272_to_assign_stmt_295__entry__] 
      $P [assign_stmt_272_to_assign_stmt_295__exit__] 
      $P [bb_1_bb_2]
      $P [merge_stmt_297__exit__] 
      $P [assign_stmt_311_to_assign_stmt_423__entry__] 
      $P [assign_stmt_311_to_assign_stmt_423__exit__] 
      $P [if_stmt_424__entry__] 
      $P [if_stmt_424__exit__] 
      $P [merge_stmt_430__entry__] 
      $P [merge_stmt_430__exit__] 
      $P [assign_stmt_435_to_assign_stmt_445__entry__] 
      $P [assign_stmt_435_to_assign_stmt_445__exit__] 
      $P [bb_3_bb_4]
      $P [merge_stmt_447__exit__] 
      $P [assign_stmt_460_to_assign_stmt_475__entry__] 
      $P [assign_stmt_460_to_assign_stmt_475__exit__] 
      $P [return__]
      $P [merge_stmt_477__exit__] 
      ::[assign_stmt_236_to_assign_stmt_259] 
      {
        // 		tmp17 := ($bitcast ($uint<64>) a )
        //  file prog.aa, line 101
        // Source expression
        // ($bitcast ($uint<64>) a )
        $T[type_cast_235_sample_start_] 
        $T[type_cast_235_sample_completed_] 
        $T[type_cast_235_update_start_] 
        $T[type_cast_235_update_completed_] 
        // a
        $T[R_a_234_sample_start_] 
        $T[R_a_234_sample_completed_] 
        $T[R_a_234_update_start_] 
        $T[R_a_234_update_completed_] 
        // reference to interface object
        R_a_234_sample_start_ <-& ($entry)
        R_a_234_sample_completed_ <-& (R_a_234_sample_start_)
        R_a_234_update_start_ <-& (R_a_234_sample_completed_)
        R_a_234_update_completed_ <-& (R_a_234_update_start_)
        type_cast_235_sample_start_ <-& (R_a_234_update_completed_)
        ;;[type_cast_235_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_235_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_235_sample_start_ &-> (type_cast_235_Sample)
        type_cast_235_sample_completed_ <-& (type_cast_235_Sample)
        type_cast_235_sample_completed_ &-> ($null)
        type_cast_235_update_start_ &-> (type_cast_235_Update)
        type_cast_235_update_completed_ <-& (type_cast_235_Update)
        // Target expression
        // (as target) tmp17
        // tmp17
        // implicit reference
        // 		tmp15 := ($bitcast ($uint<64>) b )
        //  file prog.aa, line 102
        // Source expression
        // ($bitcast ($uint<64>) b )
        $T[type_cast_239_sample_start_] 
        $T[type_cast_239_sample_completed_] 
        $T[type_cast_239_update_start_] 
        $T[type_cast_239_update_completed_] 
        // b
        $T[R_b_238_sample_start_] 
        $T[R_b_238_sample_completed_] 
        $T[R_b_238_update_start_] 
        $T[R_b_238_update_completed_] 
        // reference to interface object
        R_b_238_sample_start_ <-& ($entry)
        R_b_238_sample_completed_ <-& (R_b_238_sample_start_)
        R_b_238_update_start_ <-& (R_b_238_sample_completed_)
        R_b_238_update_completed_ <-& (R_b_238_update_start_)
        type_cast_239_sample_start_ <-& (R_b_238_update_completed_)
        ;;[type_cast_239_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_239_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_239_sample_start_ &-> (type_cast_239_Sample)
        type_cast_239_sample_completed_ <-& (type_cast_239_Sample)
        type_cast_239_sample_completed_ &-> ($null)
        type_cast_239_update_start_ &-> (type_cast_239_Update)
        type_cast_239_update_completed_ <-& (type_cast_239_Update)
        // Target expression
        // (as target) tmp15
        // tmp15
        // implicit reference
        // 		iNsTr_0 := (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 103
        // Source expression
        // (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_245_sample_start_] 
        $T[AND_u64_u64_245_sample_completed_] 
        $T[AND_u64_u64_245_update_start_] 
        $T[AND_u64_u64_245_update_completed_] 
        // tmp17
        $T[R_tmp17_242_sample_start_] 
        $T[R_tmp17_242_sample_completed_] 
        $T[R_tmp17_242_update_start_] 
        $T[R_tmp17_242_update_completed_] 
        // implicit reference
        R_tmp17_242_sample_start_ <-& (type_cast_235_update_completed_)
        R_tmp17_242_sample_completed_ <-& (R_tmp17_242_sample_start_)
        R_tmp17_242_update_start_ <-& (R_tmp17_242_sample_completed_)
        R_tmp17_242_update_completed_ <-& (R_tmp17_242_update_start_)
        AND_u64_u64_245_sample_start_ <-& (R_tmp17_242_update_completed_)
        ;;[AND_u64_u64_245_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_245_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_245_sample_start_ &-> (AND_u64_u64_245_Sample)
        AND_u64_u64_245_sample_completed_ <-& (AND_u64_u64_245_Sample)
        AND_u64_u64_245_sample_completed_ &-> ($null)
        AND_u64_u64_245_update_start_ &-> (AND_u64_u64_245_Update)
        AND_u64_u64_245_update_completed_ <-& (AND_u64_u64_245_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 104
        // Source expression
        // (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_251_sample_start_] 
        $T[AND_u64_u64_251_sample_completed_] 
        $T[AND_u64_u64_251_update_start_] 
        $T[AND_u64_u64_251_update_completed_] 
        // tmp15
        $T[R_tmp15_248_sample_start_] 
        $T[R_tmp15_248_sample_completed_] 
        $T[R_tmp15_248_update_start_] 
        $T[R_tmp15_248_update_completed_] 
        // implicit reference
        R_tmp15_248_sample_start_ <-& (type_cast_239_update_completed_)
        R_tmp15_248_sample_completed_ <-& (R_tmp15_248_sample_start_)
        R_tmp15_248_update_start_ <-& (R_tmp15_248_sample_completed_)
        R_tmp15_248_update_completed_ <-& (R_tmp15_248_update_start_)
        AND_u64_u64_251_sample_start_ <-& (R_tmp15_248_update_completed_)
        ;;[AND_u64_u64_251_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_251_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_251_sample_start_ &-> (AND_u64_u64_251_Sample)
        AND_u64_u64_251_sample_completed_ <-& (AND_u64_u64_251_Sample)
        AND_u64_u64_251_sample_completed_ &-> ($null)
        AND_u64_u64_251_update_start_ &-> (AND_u64_u64_251_Update)
        AND_u64_u64_251_update_completed_ <-& (AND_u64_u64_251_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 106
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_257_sample_start_] 
        $T[EQ_u64_u1_257_sample_completed_] 
        $T[EQ_u64_u1_257_update_start_] 
        $T[EQ_u64_u1_257_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_254_sample_start_] 
        $T[R_iNsTr_0_254_sample_completed_] 
        $T[R_iNsTr_0_254_update_start_] 
        $T[R_iNsTr_0_254_update_completed_] 
        // implicit reference
        R_iNsTr_0_254_sample_start_ <-& (AND_u64_u64_245_update_completed_)
        R_iNsTr_0_254_sample_completed_ <-& (R_iNsTr_0_254_sample_start_)
        R_iNsTr_0_254_update_start_ <-& (R_iNsTr_0_254_sample_completed_)
        R_iNsTr_0_254_update_completed_ <-& (R_iNsTr_0_254_update_start_)
        EQ_u64_u1_257_sample_start_ <-& (R_iNsTr_0_254_update_completed_)
        ;;[EQ_u64_u1_257_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_257_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_257_sample_start_ &-> (EQ_u64_u1_257_Sample)
        EQ_u64_u1_257_sample_completed_ <-& (EQ_u64_u1_257_Sample)
        EQ_u64_u1_257_sample_completed_ &-> ($null)
        EQ_u64_u1_257_update_start_ &-> (EQ_u64_u1_257_Update)
        EQ_u64_u1_257_update_completed_ <-& (EQ_u64_u1_257_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_236_to_assign_stmt_259__entry__ |-> (assign_stmt_236_to_assign_stmt_259)
      assign_stmt_236_to_assign_stmt_259__exit__ <-| (assign_stmt_236_to_assign_stmt_259)
      // if-statement  
      //  file prog.aa, line 107
      ;;[if_stmt_260_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_260__entry__ |-> (if_stmt_260_dead_link)
      if_stmt_260__exit__ <-| (if_stmt_260_dead_link)
      ;;[if_stmt_260_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_260__entry__ |-> (if_stmt_260_eval_test)
      $P [R_iNsTr_2_261_place]
      R_iNsTr_2_261_place <-| (if_stmt_260_eval_test)
      ;;[if_stmt_260_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_260_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_2_261_place |-> (if_stmt_260_if_link if_stmt_260_else_link)
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (if_stmt_260_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_260_else_link)
      ::[assign_stmt_272_to_assign_stmt_295] 
      {
        // 		iNsTr_25 := (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 111
        // Source expression
        // (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_271_sample_start_] 
        $T[AND_u64_u64_271_sample_completed_] 
        $T[AND_u64_u64_271_update_start_] 
        $T[AND_u64_u64_271_update_completed_] 
        // tmp15
        $T[R_tmp15_268_sample_start_] 
        $T[R_tmp15_268_sample_completed_] 
        $T[R_tmp15_268_update_start_] 
        $T[R_tmp15_268_update_completed_] 
        // implicit reference
        R_tmp15_268_sample_start_ <-& ($entry)
        R_tmp15_268_sample_completed_ <-& (R_tmp15_268_sample_start_)
        R_tmp15_268_update_start_ <-& (R_tmp15_268_sample_completed_)
        R_tmp15_268_update_completed_ <-& (R_tmp15_268_update_start_)
        AND_u64_u64_271_sample_start_ <-& (R_tmp15_268_update_completed_)
        ;;[AND_u64_u64_271_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_271_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_271_sample_start_ &-> (AND_u64_u64_271_Sample)
        AND_u64_u64_271_sample_completed_ <-& (AND_u64_u64_271_Sample)
        AND_u64_u64_271_sample_completed_ &-> ($null)
        AND_u64_u64_271_update_start_ &-> (AND_u64_u64_271_Update)
        AND_u64_u64_271_update_completed_ <-& (AND_u64_u64_271_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		tmp17x_xmask := (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 112
        // Source expression
        // (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_277_sample_start_] 
        $T[AND_u64_u64_277_sample_completed_] 
        $T[AND_u64_u64_277_update_start_] 
        $T[AND_u64_u64_277_update_completed_] 
        // tmp17
        $T[R_tmp17_274_sample_start_] 
        $T[R_tmp17_274_sample_completed_] 
        $T[R_tmp17_274_update_start_] 
        $T[R_tmp17_274_update_completed_] 
        // implicit reference
        R_tmp17_274_sample_start_ <-& ($entry)
        R_tmp17_274_sample_completed_ <-& (R_tmp17_274_sample_start_)
        R_tmp17_274_update_start_ <-& (R_tmp17_274_sample_completed_)
        R_tmp17_274_update_completed_ <-& (R_tmp17_274_update_start_)
        AND_u64_u64_277_sample_start_ <-& (R_tmp17_274_update_completed_)
        ;;[AND_u64_u64_277_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_277_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_277_sample_start_ &-> (AND_u64_u64_277_Sample)
        AND_u64_u64_277_sample_completed_ <-& (AND_u64_u64_277_Sample)
        AND_u64_u64_277_sample_completed_ &-> ($null)
        AND_u64_u64_277_update_start_ &-> (AND_u64_u64_277_Update)
        AND_u64_u64_277_update_completed_ <-& (AND_u64_u64_277_Update)
        // Target expression
        // (as target) tmp17x_xmask
        // tmp17x_xmask
        // implicit reference
        // 		iNsTr_26 := (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 113
        // Source expression
        // (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[ADD_u64_u64_283_sample_start_] 
        $T[ADD_u64_u64_283_sample_completed_] 
        $T[ADD_u64_u64_283_update_start_] 
        $T[ADD_u64_u64_283_update_completed_] 
        // tmp17x_xmask
        $T[R_tmp17x_xmask_280_sample_start_] 
        $T[R_tmp17x_xmask_280_sample_completed_] 
        $T[R_tmp17x_xmask_280_update_start_] 
        $T[R_tmp17x_xmask_280_update_completed_] 
        // implicit reference
        R_tmp17x_xmask_280_sample_start_ <-& (AND_u64_u64_277_update_completed_)
        R_tmp17x_xmask_280_sample_completed_ <-& (R_tmp17x_xmask_280_sample_start_)
        R_tmp17x_xmask_280_update_start_ <-& (R_tmp17x_xmask_280_sample_completed_)
        R_tmp17x_xmask_280_update_completed_ <-& (R_tmp17x_xmask_280_update_start_)
        ADD_u64_u64_283_sample_start_ <-& (R_tmp17x_xmask_280_update_completed_)
        ;;[ADD_u64_u64_283_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_283_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_283_sample_start_ &-> (ADD_u64_u64_283_Sample)
        ADD_u64_u64_283_sample_completed_ <-& (ADD_u64_u64_283_Sample)
        ADD_u64_u64_283_sample_completed_ &-> ($null)
        ADD_u64_u64_283_update_start_ &-> (ADD_u64_u64_283_Update)
        ADD_u64_u64_283_update_completed_ <-& (ADD_u64_u64_283_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		phitmp := (iNsTr_26 - iNsTr_25)
        //  file prog.aa, line 114
        // Source expression
        // (iNsTr_26 - iNsTr_25)
        $T[SUB_u64_u64_288_sample_start_] 
        $T[SUB_u64_u64_288_sample_completed_] 
        $T[SUB_u64_u64_288_update_start_] 
        $T[SUB_u64_u64_288_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_286_sample_start_] 
        $T[R_iNsTr_26_286_sample_completed_] 
        $T[R_iNsTr_26_286_update_start_] 
        $T[R_iNsTr_26_286_update_completed_] 
        // implicit reference
        R_iNsTr_26_286_sample_start_ <-& (ADD_u64_u64_283_update_completed_)
        R_iNsTr_26_286_sample_completed_ <-& (R_iNsTr_26_286_sample_start_)
        R_iNsTr_26_286_update_start_ <-& (R_iNsTr_26_286_sample_completed_)
        R_iNsTr_26_286_update_completed_ <-& (R_iNsTr_26_286_update_start_)
        // iNsTr_25
        $T[R_iNsTr_25_287_sample_start_] 
        $T[R_iNsTr_25_287_sample_completed_] 
        $T[R_iNsTr_25_287_update_start_] 
        $T[R_iNsTr_25_287_update_completed_] 
        // implicit reference
        R_iNsTr_25_287_sample_start_ <-& (AND_u64_u64_271_update_completed_)
        R_iNsTr_25_287_sample_completed_ <-& (R_iNsTr_25_287_sample_start_)
        R_iNsTr_25_287_update_start_ <-& (R_iNsTr_25_287_sample_completed_)
        R_iNsTr_25_287_update_completed_ <-& (R_iNsTr_25_287_update_start_)
        SUB_u64_u64_288_sample_start_ <-& (R_iNsTr_26_286_update_completed_)
        SUB_u64_u64_288_sample_start_ <-& (R_iNsTr_25_287_update_completed_)
        ;;[SUB_u64_u64_288_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_288_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_288_sample_start_ &-> (SUB_u64_u64_288_Sample)
        SUB_u64_u64_288_sample_completed_ <-& (SUB_u64_u64_288_Sample)
        SUB_u64_u64_288_sample_completed_ &-> ($null)
        SUB_u64_u64_288_update_start_ &-> (SUB_u64_u64_288_Update)
        SUB_u64_u64_288_update_completed_ <-& (SUB_u64_u64_288_Update)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // 		phitmp20 := (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 115
        // Source expression
        // (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_294_sample_start_] 
        $T[AND_u64_u64_294_sample_completed_] 
        $T[AND_u64_u64_294_update_start_] 
        $T[AND_u64_u64_294_update_completed_] 
        // phitmp
        $T[R_phitmp_291_sample_start_] 
        $T[R_phitmp_291_sample_completed_] 
        $T[R_phitmp_291_update_start_] 
        $T[R_phitmp_291_update_completed_] 
        // implicit reference
        R_phitmp_291_sample_start_ <-& (SUB_u64_u64_288_update_completed_)
        R_phitmp_291_sample_completed_ <-& (R_phitmp_291_sample_start_)
        R_phitmp_291_update_start_ <-& (R_phitmp_291_sample_completed_)
        R_phitmp_291_update_completed_ <-& (R_phitmp_291_update_start_)
        AND_u64_u64_294_sample_start_ <-& (R_phitmp_291_update_completed_)
        ;;[AND_u64_u64_294_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_294_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_294_sample_start_ &-> (AND_u64_u64_294_Sample)
        AND_u64_u64_294_sample_completed_ <-& (AND_u64_u64_294_Sample)
        AND_u64_u64_294_sample_completed_ &-> ($null)
        AND_u64_u64_294_update_start_ &-> (AND_u64_u64_294_Update)
        AND_u64_u64_294_update_completed_ <-& (AND_u64_u64_294_Update)
        // Target expression
        // (as target) phitmp20
        // phitmp20
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_272_to_assign_stmt_295__entry__ |-> (assign_stmt_272_to_assign_stmt_295)
      assign_stmt_272_to_assign_stmt_295__exit__ <-| (assign_stmt_272_to_assign_stmt_295)
      ::[assign_stmt_311_to_assign_stmt_423] 
      {
        // 		iNsTr_5 := (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 121
        // Source expression
        // (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_310_sample_start_] 
        $T[AND_u64_u64_310_sample_completed_] 
        $T[AND_u64_u64_310_update_start_] 
        $T[AND_u64_u64_310_update_completed_] 
        // tmp17
        $T[R_tmp17_307_sample_start_] 
        $T[R_tmp17_307_sample_completed_] 
        $T[R_tmp17_307_update_start_] 
        $T[R_tmp17_307_update_completed_] 
        // implicit reference
        R_tmp17_307_sample_start_ <-& ($entry)
        R_tmp17_307_sample_completed_ <-& (R_tmp17_307_sample_start_)
        R_tmp17_307_update_start_ <-& (R_tmp17_307_sample_completed_)
        R_tmp17_307_update_completed_ <-& (R_tmp17_307_update_start_)
        AND_u64_u64_310_sample_start_ <-& (R_tmp17_307_update_completed_)
        ;;[AND_u64_u64_310_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_310_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_310_sample_start_ &-> (AND_u64_u64_310_Sample)
        AND_u64_u64_310_sample_completed_ <-& (AND_u64_u64_310_Sample)
        AND_u64_u64_310_sample_completed_ &-> ($null)
        AND_u64_u64_310_update_start_ &-> (AND_u64_u64_310_Update)
        AND_u64_u64_310_update_completed_ <-& (AND_u64_u64_310_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 122
        // Source expression
        // (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[OR_u64_u64_316_sample_start_] 
        $T[OR_u64_u64_316_sample_completed_] 
        $T[OR_u64_u64_316_update_start_] 
        $T[OR_u64_u64_316_update_completed_] 
        // tmp15
        $T[R_tmp15_313_sample_start_] 
        $T[R_tmp15_313_sample_completed_] 
        $T[R_tmp15_313_update_start_] 
        $T[R_tmp15_313_update_completed_] 
        // implicit reference
        R_tmp15_313_sample_start_ <-& ($entry)
        R_tmp15_313_sample_completed_ <-& (R_tmp15_313_sample_start_)
        R_tmp15_313_update_start_ <-& (R_tmp15_313_sample_completed_)
        R_tmp15_313_update_completed_ <-& (R_tmp15_313_update_start_)
        OR_u64_u64_316_sample_start_ <-& (R_tmp15_313_update_completed_)
        ;;[OR_u64_u64_316_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_316_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_316_sample_start_ &-> (OR_u64_u64_316_Sample)
        OR_u64_u64_316_sample_completed_ <-& (OR_u64_u64_316_Sample)
        OR_u64_u64_316_sample_completed_ &-> ($null)
        OR_u64_u64_316_update_start_ &-> (OR_u64_u64_316_Update)
        OR_u64_u64_316_update_completed_ <-& (OR_u64_u64_316_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_4 | iNsTr_5)
        //  file prog.aa, line 123
        // Source expression
        // (iNsTr_4 | iNsTr_5)
        $T[OR_u64_u64_321_sample_start_] 
        $T[OR_u64_u64_321_sample_completed_] 
        $T[OR_u64_u64_321_update_start_] 
        $T[OR_u64_u64_321_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_319_sample_start_] 
        $T[R_iNsTr_4_319_sample_completed_] 
        $T[R_iNsTr_4_319_update_start_] 
        $T[R_iNsTr_4_319_update_completed_] 
        // implicit reference
        R_iNsTr_4_319_sample_start_ <-& ($entry)
        R_iNsTr_4_319_sample_completed_ <-& (R_iNsTr_4_319_sample_start_)
        R_iNsTr_4_319_update_start_ <-& (R_iNsTr_4_319_sample_completed_)
        R_iNsTr_4_319_update_completed_ <-& (R_iNsTr_4_319_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_320_sample_start_] 
        $T[R_iNsTr_5_320_sample_completed_] 
        $T[R_iNsTr_5_320_update_start_] 
        $T[R_iNsTr_5_320_update_completed_] 
        // implicit reference
        R_iNsTr_5_320_sample_start_ <-& (AND_u64_u64_310_update_completed_)
        R_iNsTr_5_320_sample_completed_ <-& (R_iNsTr_5_320_sample_start_)
        R_iNsTr_5_320_update_start_ <-& (R_iNsTr_5_320_sample_completed_)
        R_iNsTr_5_320_update_completed_ <-& (R_iNsTr_5_320_update_start_)
        OR_u64_u64_321_sample_start_ <-& (R_iNsTr_4_319_update_completed_)
        OR_u64_u64_321_sample_start_ <-& (R_iNsTr_5_320_update_completed_)
        ;;[OR_u64_u64_321_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_321_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_321_sample_start_ &-> (OR_u64_u64_321_Sample)
        OR_u64_u64_321_sample_completed_ <-& (OR_u64_u64_321_Sample)
        OR_u64_u64_321_sample_completed_ &-> ($null)
        OR_u64_u64_321_update_start_ &-> (OR_u64_u64_321_Update)
        OR_u64_u64_321_update_completed_ <-& (OR_u64_u64_321_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 124
        // Source expression
        // (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_327_sample_start_] 
        $T[AND_u64_u64_327_sample_completed_] 
        $T[AND_u64_u64_327_update_start_] 
        $T[AND_u64_u64_327_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_324_sample_start_] 
        $T[R_iNsTr_6_324_sample_completed_] 
        $T[R_iNsTr_6_324_update_start_] 
        $T[R_iNsTr_6_324_update_completed_] 
        // implicit reference
        R_iNsTr_6_324_sample_start_ <-& (OR_u64_u64_316_update_completed_)
        R_iNsTr_6_324_sample_completed_ <-& (R_iNsTr_6_324_sample_start_)
        R_iNsTr_6_324_update_start_ <-& (R_iNsTr_6_324_sample_completed_)
        R_iNsTr_6_324_update_completed_ <-& (R_iNsTr_6_324_update_start_)
        AND_u64_u64_327_sample_start_ <-& (R_iNsTr_6_324_update_completed_)
        ;;[AND_u64_u64_327_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_327_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_327_sample_start_ &-> (AND_u64_u64_327_Sample)
        AND_u64_u64_327_sample_completed_ <-& (AND_u64_u64_327_Sample)
        AND_u64_u64_327_sample_completed_ &-> ($null)
        AND_u64_u64_327_update_start_ &-> (AND_u64_u64_327_Update)
        AND_u64_u64_327_update_completed_ <-& (AND_u64_u64_327_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		tmp13 := ($bitcast ($float<11,52>) iNsTr_7 )
        //  file prog.aa, line 125
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_7 )
        $T[type_cast_331_sample_start_] 
        $T[type_cast_331_sample_completed_] 
        $T[type_cast_331_update_start_] 
        $T[type_cast_331_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_330_sample_start_] 
        $T[R_iNsTr_7_330_sample_completed_] 
        $T[R_iNsTr_7_330_update_start_] 
        $T[R_iNsTr_7_330_update_completed_] 
        // implicit reference
        R_iNsTr_7_330_sample_start_ <-& (OR_u64_u64_321_update_completed_)
        R_iNsTr_7_330_sample_completed_ <-& (R_iNsTr_7_330_sample_start_)
        R_iNsTr_7_330_update_start_ <-& (R_iNsTr_7_330_sample_completed_)
        R_iNsTr_7_330_update_completed_ <-& (R_iNsTr_7_330_update_start_)
        type_cast_331_sample_start_ <-& (R_iNsTr_7_330_update_completed_)
        ;;[type_cast_331_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_331_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_331_sample_start_ &-> (type_cast_331_Sample)
        type_cast_331_sample_completed_ <-& (type_cast_331_Sample)
        type_cast_331_sample_completed_ &-> ($null)
        type_cast_331_update_start_ &-> (type_cast_331_Update)
        type_cast_331_update_completed_ <-& (type_cast_331_Update)
        // Target expression
        // (as target) tmp13
        // tmp13
        // implicit reference
        // 		tmp11 := ($bitcast ($float<11,52>) iNsTr_8 )
        //  file prog.aa, line 126
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_8 )
        $T[type_cast_335_sample_start_] 
        $T[type_cast_335_sample_completed_] 
        $T[type_cast_335_update_start_] 
        $T[type_cast_335_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_334_sample_start_] 
        $T[R_iNsTr_8_334_sample_completed_] 
        $T[R_iNsTr_8_334_update_start_] 
        $T[R_iNsTr_8_334_update_completed_] 
        // implicit reference
        R_iNsTr_8_334_sample_start_ <-& (AND_u64_u64_327_update_completed_)
        R_iNsTr_8_334_sample_completed_ <-& (R_iNsTr_8_334_sample_start_)
        R_iNsTr_8_334_update_start_ <-& (R_iNsTr_8_334_sample_completed_)
        R_iNsTr_8_334_update_completed_ <-& (R_iNsTr_8_334_update_start_)
        type_cast_335_sample_start_ <-& (R_iNsTr_8_334_update_completed_)
        ;;[type_cast_335_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_335_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_335_sample_start_ &-> (type_cast_335_Sample)
        type_cast_335_sample_completed_ <-& (type_cast_335_Sample)
        type_cast_335_sample_completed_ &-> ($null)
        type_cast_335_update_start_ &-> (type_cast_335_Update)
        type_cast_335_update_completed_ <-& (type_cast_335_Update)
        // Target expression
        // (as target) tmp11
        // tmp11
        // implicit reference
        // 		iNsTr_9 := (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        //  file prog.aa, line 127
        // Source expression
        // (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        $T[MUL_f64_f64_341_sample_start_] 
        $T[MUL_f64_f64_341_sample_completed_] 
        $T[MUL_f64_f64_341_update_start_] 
        $T[MUL_f64_f64_341_update_completed_] 
        // tmp11
        $T[R_tmp11_338_sample_start_] 
        $T[R_tmp11_338_sample_completed_] 
        $T[R_tmp11_338_update_start_] 
        $T[R_tmp11_338_update_completed_] 
        // implicit reference
        R_tmp11_338_sample_start_ <-& (type_cast_335_update_completed_)
        R_tmp11_338_sample_completed_ <-& (R_tmp11_338_sample_start_)
        R_tmp11_338_update_start_ <-& (R_tmp11_338_sample_completed_)
        R_tmp11_338_update_completed_ <-& (R_tmp11_338_update_start_)
        MUL_f64_f64_341_sample_start_ <-& (R_tmp11_338_update_completed_)
        ;;[MUL_f64_f64_341_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_341_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_341_sample_start_ &-> (MUL_f64_f64_341_Sample)
        MUL_f64_f64_341_sample_completed_ <-& (MUL_f64_f64_341_Sample)
        MUL_f64_f64_341_sample_completed_ &-> ($null)
        MUL_f64_f64_341_update_start_ &-> (MUL_f64_f64_341_Update)
        MUL_f64_f64_341_update_completed_ <-& (MUL_f64_f64_341_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
        //  file prog.aa, line 128
        // Source expression
        // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
        $T[SUB_f64_f64_347_sample_start_] 
        $T[SUB_f64_f64_347_sample_completed_] 
        $T[SUB_f64_f64_347_update_start_] 
        $T[SUB_f64_f64_347_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_346_sample_start_] 
        $T[R_iNsTr_9_346_sample_completed_] 
        $T[R_iNsTr_9_346_update_start_] 
        $T[R_iNsTr_9_346_update_completed_] 
        // implicit reference
        R_iNsTr_9_346_sample_start_ <-& (MUL_f64_f64_341_update_completed_)
        R_iNsTr_9_346_sample_completed_ <-& (R_iNsTr_9_346_sample_start_)
        R_iNsTr_9_346_update_start_ <-& (R_iNsTr_9_346_sample_completed_)
        R_iNsTr_9_346_update_completed_ <-& (R_iNsTr_9_346_update_start_)
        SUB_f64_f64_347_sample_start_ <-& (R_iNsTr_9_346_update_completed_)
        ;;[SUB_f64_f64_347_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_347_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_347_sample_start_ &-> (SUB_f64_f64_347_Sample)
        SUB_f64_f64_347_sample_completed_ <-& (SUB_f64_f64_347_Sample)
        SUB_f64_f64_347_sample_completed_ &-> ($null)
        SUB_f64_f64_347_update_start_ &-> (SUB_f64_f64_347_Update)
        SUB_f64_f64_347_update_completed_ <-& (SUB_f64_f64_347_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (tmp11 * iNsTr_10)
        //  file prog.aa, line 129
        // Source expression
        // (tmp11 * iNsTr_10)
        $T[MUL_f64_f64_352_sample_start_] 
        $T[MUL_f64_f64_352_sample_completed_] 
        $T[MUL_f64_f64_352_update_start_] 
        $T[MUL_f64_f64_352_update_completed_] 
        // tmp11
        $T[R_tmp11_350_sample_start_] 
        $T[R_tmp11_350_sample_completed_] 
        $T[R_tmp11_350_update_start_] 
        $T[R_tmp11_350_update_completed_] 
        // implicit reference
        R_tmp11_350_sample_start_ <-& (type_cast_335_update_completed_)
        R_tmp11_350_sample_completed_ <-& (R_tmp11_350_sample_start_)
        R_tmp11_350_update_start_ <-& (R_tmp11_350_sample_completed_)
        R_tmp11_350_update_completed_ <-& (R_tmp11_350_update_start_)
        // iNsTr_10
        $T[R_iNsTr_10_351_sample_start_] 
        $T[R_iNsTr_10_351_sample_completed_] 
        $T[R_iNsTr_10_351_update_start_] 
        $T[R_iNsTr_10_351_update_completed_] 
        // implicit reference
        R_iNsTr_10_351_sample_start_ <-& (SUB_f64_f64_347_update_completed_)
        R_iNsTr_10_351_sample_completed_ <-& (R_iNsTr_10_351_sample_start_)
        R_iNsTr_10_351_update_start_ <-& (R_iNsTr_10_351_sample_completed_)
        R_iNsTr_10_351_update_completed_ <-& (R_iNsTr_10_351_update_start_)
        MUL_f64_f64_352_sample_start_ <-& (R_tmp11_350_update_completed_)
        MUL_f64_f64_352_sample_start_ <-& (R_iNsTr_10_351_update_completed_)
        ;;[MUL_f64_f64_352_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_352_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_352_sample_start_ &-> (MUL_f64_f64_352_Sample)
        MUL_f64_f64_352_sample_completed_ <-& (MUL_f64_f64_352_Sample)
        MUL_f64_f64_352_sample_completed_ &-> ($null)
        MUL_f64_f64_352_update_start_ &-> (MUL_f64_f64_352_Update)
        MUL_f64_f64_352_update_completed_ <-& (MUL_f64_f64_352_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
        //  file prog.aa, line 130
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
        $T[SUB_f64_f64_358_sample_start_] 
        $T[SUB_f64_f64_358_sample_completed_] 
        $T[SUB_f64_f64_358_update_start_] 
        $T[SUB_f64_f64_358_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_357_sample_start_] 
        $T[R_iNsTr_11_357_sample_completed_] 
        $T[R_iNsTr_11_357_update_start_] 
        $T[R_iNsTr_11_357_update_completed_] 
        // implicit reference
        R_iNsTr_11_357_sample_start_ <-& (MUL_f64_f64_352_update_completed_)
        R_iNsTr_11_357_sample_completed_ <-& (R_iNsTr_11_357_sample_start_)
        R_iNsTr_11_357_update_start_ <-& (R_iNsTr_11_357_sample_completed_)
        R_iNsTr_11_357_update_completed_ <-& (R_iNsTr_11_357_update_start_)
        SUB_f64_f64_358_sample_start_ <-& (R_iNsTr_11_357_update_completed_)
        ;;[SUB_f64_f64_358_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_358_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_358_sample_start_ &-> (SUB_f64_f64_358_Sample)
        SUB_f64_f64_358_sample_completed_ <-& (SUB_f64_f64_358_Sample)
        SUB_f64_f64_358_sample_completed_ &-> ($null)
        SUB_f64_f64_358_update_start_ &-> (SUB_f64_f64_358_Update)
        SUB_f64_f64_358_update_completed_ <-& (SUB_f64_f64_358_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_10 * iNsTr_12)
        //  file prog.aa, line 131
        // Source expression
        // (iNsTr_10 * iNsTr_12)
        $T[MUL_f64_f64_363_sample_start_] 
        $T[MUL_f64_f64_363_sample_completed_] 
        $T[MUL_f64_f64_363_update_start_] 
        $T[MUL_f64_f64_363_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_361_sample_start_] 
        $T[R_iNsTr_10_361_sample_completed_] 
        $T[R_iNsTr_10_361_update_start_] 
        $T[R_iNsTr_10_361_update_completed_] 
        // implicit reference
        R_iNsTr_10_361_sample_start_ <-& (SUB_f64_f64_347_update_completed_)
        R_iNsTr_10_361_sample_completed_ <-& (R_iNsTr_10_361_sample_start_)
        R_iNsTr_10_361_update_start_ <-& (R_iNsTr_10_361_sample_completed_)
        R_iNsTr_10_361_update_completed_ <-& (R_iNsTr_10_361_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_362_sample_start_] 
        $T[R_iNsTr_12_362_sample_completed_] 
        $T[R_iNsTr_12_362_update_start_] 
        $T[R_iNsTr_12_362_update_completed_] 
        // implicit reference
        R_iNsTr_12_362_sample_start_ <-& (SUB_f64_f64_358_update_completed_)
        R_iNsTr_12_362_sample_completed_ <-& (R_iNsTr_12_362_sample_start_)
        R_iNsTr_12_362_update_start_ <-& (R_iNsTr_12_362_sample_completed_)
        R_iNsTr_12_362_update_completed_ <-& (R_iNsTr_12_362_update_start_)
        MUL_f64_f64_363_sample_start_ <-& (R_iNsTr_10_361_update_completed_)
        MUL_f64_f64_363_sample_start_ <-& (R_iNsTr_12_362_update_completed_)
        ;;[MUL_f64_f64_363_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_363_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_363_sample_start_ &-> (MUL_f64_f64_363_Sample)
        MUL_f64_f64_363_sample_completed_ <-& (MUL_f64_f64_363_Sample)
        MUL_f64_f64_363_sample_completed_ &-> ($null)
        MUL_f64_f64_363_update_start_ &-> (MUL_f64_f64_363_Update)
        MUL_f64_f64_363_update_completed_ <-& (MUL_f64_f64_363_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (tmp11 * iNsTr_13)
        //  file prog.aa, line 132
        // Source expression
        // (tmp11 * iNsTr_13)
        $T[MUL_f64_f64_368_sample_start_] 
        $T[MUL_f64_f64_368_sample_completed_] 
        $T[MUL_f64_f64_368_update_start_] 
        $T[MUL_f64_f64_368_update_completed_] 
        // tmp11
        $T[R_tmp11_366_sample_start_] 
        $T[R_tmp11_366_sample_completed_] 
        $T[R_tmp11_366_update_start_] 
        $T[R_tmp11_366_update_completed_] 
        // implicit reference
        R_tmp11_366_sample_start_ <-& (type_cast_335_update_completed_)
        R_tmp11_366_sample_completed_ <-& (R_tmp11_366_sample_start_)
        R_tmp11_366_update_start_ <-& (R_tmp11_366_sample_completed_)
        R_tmp11_366_update_completed_ <-& (R_tmp11_366_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_367_sample_start_] 
        $T[R_iNsTr_13_367_sample_completed_] 
        $T[R_iNsTr_13_367_update_start_] 
        $T[R_iNsTr_13_367_update_completed_] 
        // implicit reference
        R_iNsTr_13_367_sample_start_ <-& (MUL_f64_f64_363_update_completed_)
        R_iNsTr_13_367_sample_completed_ <-& (R_iNsTr_13_367_sample_start_)
        R_iNsTr_13_367_update_start_ <-& (R_iNsTr_13_367_sample_completed_)
        R_iNsTr_13_367_update_completed_ <-& (R_iNsTr_13_367_update_start_)
        MUL_f64_f64_368_sample_start_ <-& (R_tmp11_366_update_completed_)
        MUL_f64_f64_368_sample_start_ <-& (R_iNsTr_13_367_update_completed_)
        ;;[MUL_f64_f64_368_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_368_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_368_sample_start_ &-> (MUL_f64_f64_368_Sample)
        MUL_f64_f64_368_sample_completed_ <-& (MUL_f64_f64_368_Sample)
        MUL_f64_f64_368_sample_completed_ &-> ($null)
        MUL_f64_f64_368_update_start_ &-> (MUL_f64_f64_368_Update)
        MUL_f64_f64_368_update_completed_ <-& (MUL_f64_f64_368_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
        //  file prog.aa, line 133
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
        $T[SUB_f64_f64_374_sample_start_] 
        $T[SUB_f64_f64_374_sample_completed_] 
        $T[SUB_f64_f64_374_update_start_] 
        $T[SUB_f64_f64_374_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_373_sample_start_] 
        $T[R_iNsTr_14_373_sample_completed_] 
        $T[R_iNsTr_14_373_update_start_] 
        $T[R_iNsTr_14_373_update_completed_] 
        // implicit reference
        R_iNsTr_14_373_sample_start_ <-& (MUL_f64_f64_368_update_completed_)
        R_iNsTr_14_373_sample_completed_ <-& (R_iNsTr_14_373_sample_start_)
        R_iNsTr_14_373_update_start_ <-& (R_iNsTr_14_373_sample_completed_)
        R_iNsTr_14_373_update_completed_ <-& (R_iNsTr_14_373_update_start_)
        SUB_f64_f64_374_sample_start_ <-& (R_iNsTr_14_373_update_completed_)
        ;;[SUB_f64_f64_374_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_374_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_374_sample_start_ &-> (SUB_f64_f64_374_Sample)
        SUB_f64_f64_374_sample_completed_ <-& (SUB_f64_f64_374_Sample)
        SUB_f64_f64_374_sample_completed_ &-> ($null)
        SUB_f64_f64_374_update_start_ &-> (SUB_f64_f64_374_Update)
        SUB_f64_f64_374_update_completed_ <-& (SUB_f64_f64_374_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
        //  file prog.aa, line 134
        // Source expression
        // (iNsTr_13 * iNsTr_15)
        $T[MUL_f64_f64_379_sample_start_] 
        $T[MUL_f64_f64_379_sample_completed_] 
        $T[MUL_f64_f64_379_update_start_] 
        $T[MUL_f64_f64_379_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_377_sample_start_] 
        $T[R_iNsTr_13_377_sample_completed_] 
        $T[R_iNsTr_13_377_update_start_] 
        $T[R_iNsTr_13_377_update_completed_] 
        // implicit reference
        R_iNsTr_13_377_sample_start_ <-& (MUL_f64_f64_363_update_completed_)
        R_iNsTr_13_377_sample_completed_ <-& (R_iNsTr_13_377_sample_start_)
        R_iNsTr_13_377_update_start_ <-& (R_iNsTr_13_377_sample_completed_)
        R_iNsTr_13_377_update_completed_ <-& (R_iNsTr_13_377_update_start_)
        // iNsTr_15
        $T[R_iNsTr_15_378_sample_start_] 
        $T[R_iNsTr_15_378_sample_completed_] 
        $T[R_iNsTr_15_378_update_start_] 
        $T[R_iNsTr_15_378_update_completed_] 
        // implicit reference
        R_iNsTr_15_378_sample_start_ <-& (SUB_f64_f64_374_update_completed_)
        R_iNsTr_15_378_sample_completed_ <-& (R_iNsTr_15_378_sample_start_)
        R_iNsTr_15_378_update_start_ <-& (R_iNsTr_15_378_sample_completed_)
        R_iNsTr_15_378_update_completed_ <-& (R_iNsTr_15_378_update_start_)
        MUL_f64_f64_379_sample_start_ <-& (R_iNsTr_13_377_update_completed_)
        MUL_f64_f64_379_sample_start_ <-& (R_iNsTr_15_378_update_completed_)
        ;;[MUL_f64_f64_379_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_379_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_379_sample_start_ &-> (MUL_f64_f64_379_Sample)
        MUL_f64_f64_379_sample_completed_ <-& (MUL_f64_f64_379_Sample)
        MUL_f64_f64_379_sample_completed_ &-> ($null)
        MUL_f64_f64_379_update_start_ &-> (MUL_f64_f64_379_Update)
        MUL_f64_f64_379_update_completed_ <-& (MUL_f64_f64_379_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (tmp11 * iNsTr_16)
        //  file prog.aa, line 135
        // Source expression
        // (tmp11 * iNsTr_16)
        $T[MUL_f64_f64_384_sample_start_] 
        $T[MUL_f64_f64_384_sample_completed_] 
        $T[MUL_f64_f64_384_update_start_] 
        $T[MUL_f64_f64_384_update_completed_] 
        // tmp11
        $T[R_tmp11_382_sample_start_] 
        $T[R_tmp11_382_sample_completed_] 
        $T[R_tmp11_382_update_start_] 
        $T[R_tmp11_382_update_completed_] 
        // implicit reference
        R_tmp11_382_sample_start_ <-& (type_cast_335_update_completed_)
        R_tmp11_382_sample_completed_ <-& (R_tmp11_382_sample_start_)
        R_tmp11_382_update_start_ <-& (R_tmp11_382_sample_completed_)
        R_tmp11_382_update_completed_ <-& (R_tmp11_382_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_383_sample_start_] 
        $T[R_iNsTr_16_383_sample_completed_] 
        $T[R_iNsTr_16_383_update_start_] 
        $T[R_iNsTr_16_383_update_completed_] 
        // implicit reference
        R_iNsTr_16_383_sample_start_ <-& (MUL_f64_f64_379_update_completed_)
        R_iNsTr_16_383_sample_completed_ <-& (R_iNsTr_16_383_sample_start_)
        R_iNsTr_16_383_update_start_ <-& (R_iNsTr_16_383_sample_completed_)
        R_iNsTr_16_383_update_completed_ <-& (R_iNsTr_16_383_update_start_)
        MUL_f64_f64_384_sample_start_ <-& (R_tmp11_382_update_completed_)
        MUL_f64_f64_384_sample_start_ <-& (R_iNsTr_16_383_update_completed_)
        ;;[MUL_f64_f64_384_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_384_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_384_sample_start_ &-> (MUL_f64_f64_384_Sample)
        MUL_f64_f64_384_sample_completed_ <-& (MUL_f64_f64_384_Sample)
        MUL_f64_f64_384_sample_completed_ &-> ($null)
        MUL_f64_f64_384_update_start_ &-> (MUL_f64_f64_384_Update)
        MUL_f64_f64_384_update_completed_ <-& (MUL_f64_f64_384_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
        //  file prog.aa, line 136
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
        $T[SUB_f64_f64_390_sample_start_] 
        $T[SUB_f64_f64_390_sample_completed_] 
        $T[SUB_f64_f64_390_update_start_] 
        $T[SUB_f64_f64_390_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_389_sample_start_] 
        $T[R_iNsTr_17_389_sample_completed_] 
        $T[R_iNsTr_17_389_update_start_] 
        $T[R_iNsTr_17_389_update_completed_] 
        // implicit reference
        R_iNsTr_17_389_sample_start_ <-& (MUL_f64_f64_384_update_completed_)
        R_iNsTr_17_389_sample_completed_ <-& (R_iNsTr_17_389_sample_start_)
        R_iNsTr_17_389_update_start_ <-& (R_iNsTr_17_389_sample_completed_)
        R_iNsTr_17_389_update_completed_ <-& (R_iNsTr_17_389_update_start_)
        SUB_f64_f64_390_sample_start_ <-& (R_iNsTr_17_389_update_completed_)
        ;;[SUB_f64_f64_390_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_390_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_390_sample_start_ &-> (SUB_f64_f64_390_Sample)
        SUB_f64_f64_390_sample_completed_ <-& (SUB_f64_f64_390_Sample)
        SUB_f64_f64_390_sample_completed_ &-> ($null)
        SUB_f64_f64_390_update_start_ &-> (SUB_f64_f64_390_Update)
        SUB_f64_f64_390_update_completed_ <-& (SUB_f64_f64_390_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
        //  file prog.aa, line 137
        // Source expression
        // (iNsTr_16 * iNsTr_18)
        $T[MUL_f64_f64_395_sample_start_] 
        $T[MUL_f64_f64_395_sample_completed_] 
        $T[MUL_f64_f64_395_update_start_] 
        $T[MUL_f64_f64_395_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_393_sample_start_] 
        $T[R_iNsTr_16_393_sample_completed_] 
        $T[R_iNsTr_16_393_update_start_] 
        $T[R_iNsTr_16_393_update_completed_] 
        // implicit reference
        R_iNsTr_16_393_sample_start_ <-& (MUL_f64_f64_379_update_completed_)
        R_iNsTr_16_393_sample_completed_ <-& (R_iNsTr_16_393_sample_start_)
        R_iNsTr_16_393_update_start_ <-& (R_iNsTr_16_393_sample_completed_)
        R_iNsTr_16_393_update_completed_ <-& (R_iNsTr_16_393_update_start_)
        // iNsTr_18
        $T[R_iNsTr_18_394_sample_start_] 
        $T[R_iNsTr_18_394_sample_completed_] 
        $T[R_iNsTr_18_394_update_start_] 
        $T[R_iNsTr_18_394_update_completed_] 
        // implicit reference
        R_iNsTr_18_394_sample_start_ <-& (SUB_f64_f64_390_update_completed_)
        R_iNsTr_18_394_sample_completed_ <-& (R_iNsTr_18_394_sample_start_)
        R_iNsTr_18_394_update_start_ <-& (R_iNsTr_18_394_sample_completed_)
        R_iNsTr_18_394_update_completed_ <-& (R_iNsTr_18_394_update_start_)
        MUL_f64_f64_395_sample_start_ <-& (R_iNsTr_16_393_update_completed_)
        MUL_f64_f64_395_sample_start_ <-& (R_iNsTr_18_394_update_completed_)
        ;;[MUL_f64_f64_395_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_395_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_395_sample_start_ &-> (MUL_f64_f64_395_Sample)
        MUL_f64_f64_395_sample_completed_ <-& (MUL_f64_f64_395_Sample)
        MUL_f64_f64_395_sample_completed_ &-> ($null)
        MUL_f64_f64_395_update_start_ &-> (MUL_f64_f64_395_Update)
        MUL_f64_f64_395_update_completed_ <-& (MUL_f64_f64_395_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (tmp11 * iNsTr_19)
        //  file prog.aa, line 138
        // Source expression
        // (tmp11 * iNsTr_19)
        $T[MUL_f64_f64_400_sample_start_] 
        $T[MUL_f64_f64_400_sample_completed_] 
        $T[MUL_f64_f64_400_update_start_] 
        $T[MUL_f64_f64_400_update_completed_] 
        // tmp11
        $T[R_tmp11_398_sample_start_] 
        $T[R_tmp11_398_sample_completed_] 
        $T[R_tmp11_398_update_start_] 
        $T[R_tmp11_398_update_completed_] 
        // implicit reference
        R_tmp11_398_sample_start_ <-& (type_cast_335_update_completed_)
        R_tmp11_398_sample_completed_ <-& (R_tmp11_398_sample_start_)
        R_tmp11_398_update_start_ <-& (R_tmp11_398_sample_completed_)
        R_tmp11_398_update_completed_ <-& (R_tmp11_398_update_start_)
        // iNsTr_19
        $T[R_iNsTr_19_399_sample_start_] 
        $T[R_iNsTr_19_399_sample_completed_] 
        $T[R_iNsTr_19_399_update_start_] 
        $T[R_iNsTr_19_399_update_completed_] 
        // implicit reference
        R_iNsTr_19_399_sample_start_ <-& (MUL_f64_f64_395_update_completed_)
        R_iNsTr_19_399_sample_completed_ <-& (R_iNsTr_19_399_sample_start_)
        R_iNsTr_19_399_update_start_ <-& (R_iNsTr_19_399_sample_completed_)
        R_iNsTr_19_399_update_completed_ <-& (R_iNsTr_19_399_update_start_)
        MUL_f64_f64_400_sample_start_ <-& (R_tmp11_398_update_completed_)
        MUL_f64_f64_400_sample_start_ <-& (R_iNsTr_19_399_update_completed_)
        ;;[MUL_f64_f64_400_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_400_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_400_sample_start_ &-> (MUL_f64_f64_400_Sample)
        MUL_f64_f64_400_sample_completed_ <-& (MUL_f64_f64_400_Sample)
        MUL_f64_f64_400_sample_completed_ &-> ($null)
        MUL_f64_f64_400_update_start_ &-> (MUL_f64_f64_400_Update)
        MUL_f64_f64_400_update_completed_ <-& (MUL_f64_f64_400_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
        //  file prog.aa, line 139
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
        $T[SUB_f64_f64_406_sample_start_] 
        $T[SUB_f64_f64_406_sample_completed_] 
        $T[SUB_f64_f64_406_update_start_] 
        $T[SUB_f64_f64_406_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_405_sample_start_] 
        $T[R_iNsTr_20_405_sample_completed_] 
        $T[R_iNsTr_20_405_update_start_] 
        $T[R_iNsTr_20_405_update_completed_] 
        // implicit reference
        R_iNsTr_20_405_sample_start_ <-& (MUL_f64_f64_400_update_completed_)
        R_iNsTr_20_405_sample_completed_ <-& (R_iNsTr_20_405_sample_start_)
        R_iNsTr_20_405_update_start_ <-& (R_iNsTr_20_405_sample_completed_)
        R_iNsTr_20_405_update_completed_ <-& (R_iNsTr_20_405_update_start_)
        SUB_f64_f64_406_sample_start_ <-& (R_iNsTr_20_405_update_completed_)
        ;;[SUB_f64_f64_406_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_406_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_406_sample_start_ &-> (SUB_f64_f64_406_Sample)
        SUB_f64_f64_406_sample_completed_ <-& (SUB_f64_f64_406_Sample)
        SUB_f64_f64_406_sample_completed_ &-> ($null)
        SUB_f64_f64_406_update_start_ &-> (SUB_f64_f64_406_Update)
        SUB_f64_f64_406_update_completed_ <-& (SUB_f64_f64_406_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
        //  file prog.aa, line 140
        // Source expression
        // (iNsTr_19 * iNsTr_21)
        $T[MUL_f64_f64_411_sample_start_] 
        $T[MUL_f64_f64_411_sample_completed_] 
        $T[MUL_f64_f64_411_update_start_] 
        $T[MUL_f64_f64_411_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_409_sample_start_] 
        $T[R_iNsTr_19_409_sample_completed_] 
        $T[R_iNsTr_19_409_update_start_] 
        $T[R_iNsTr_19_409_update_completed_] 
        // implicit reference
        R_iNsTr_19_409_sample_start_ <-& (MUL_f64_f64_395_update_completed_)
        R_iNsTr_19_409_sample_completed_ <-& (R_iNsTr_19_409_sample_start_)
        R_iNsTr_19_409_update_start_ <-& (R_iNsTr_19_409_sample_completed_)
        R_iNsTr_19_409_update_completed_ <-& (R_iNsTr_19_409_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_410_sample_start_] 
        $T[R_iNsTr_21_410_sample_completed_] 
        $T[R_iNsTr_21_410_update_start_] 
        $T[R_iNsTr_21_410_update_completed_] 
        // implicit reference
        R_iNsTr_21_410_sample_start_ <-& (SUB_f64_f64_406_update_completed_)
        R_iNsTr_21_410_sample_completed_ <-& (R_iNsTr_21_410_sample_start_)
        R_iNsTr_21_410_update_start_ <-& (R_iNsTr_21_410_sample_completed_)
        R_iNsTr_21_410_update_completed_ <-& (R_iNsTr_21_410_update_start_)
        MUL_f64_f64_411_sample_start_ <-& (R_iNsTr_19_409_update_completed_)
        MUL_f64_f64_411_sample_start_ <-& (R_iNsTr_21_410_update_completed_)
        ;;[MUL_f64_f64_411_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_411_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_411_sample_start_ &-> (MUL_f64_f64_411_Sample)
        MUL_f64_f64_411_sample_completed_ <-& (MUL_f64_f64_411_Sample)
        MUL_f64_f64_411_sample_completed_ &-> ($null)
        MUL_f64_f64_411_update_start_ &-> (MUL_f64_f64_411_Update)
        MUL_f64_f64_411_update_completed_ <-& (MUL_f64_f64_411_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 142
        // Source expression
        // (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_417_sample_start_] 
        $T[EQ_u64_u1_417_sample_completed_] 
        $T[EQ_u64_u1_417_update_start_] 
        $T[EQ_u64_u1_417_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_414_sample_start_] 
        $T[R_iNsTr_1_414_sample_completed_] 
        $T[R_iNsTr_1_414_update_start_] 
        $T[R_iNsTr_1_414_update_completed_] 
        // implicit reference
        R_iNsTr_1_414_sample_start_ <-& ($entry)
        R_iNsTr_1_414_sample_completed_ <-& (R_iNsTr_1_414_sample_start_)
        R_iNsTr_1_414_update_start_ <-& (R_iNsTr_1_414_sample_completed_)
        R_iNsTr_1_414_update_completed_ <-& (R_iNsTr_1_414_update_start_)
        EQ_u64_u1_417_sample_start_ <-& (R_iNsTr_1_414_update_completed_)
        ;;[EQ_u64_u1_417_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_417_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_417_sample_start_ &-> (EQ_u64_u1_417_Sample)
        EQ_u64_u1_417_sample_completed_ <-& (EQ_u64_u1_417_Sample)
        EQ_u64_u1_417_sample_completed_ &-> ($null)
        EQ_u64_u1_417_update_start_ &-> (EQ_u64_u1_417_Update)
        EQ_u64_u1_417_update_completed_ <-& (EQ_u64_u1_417_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		orx_xcond := (iNsTr_2 | iNsTr_23)
        //  file prog.aa, line 143
        // Source expression
        // (iNsTr_2 | iNsTr_23)
        $T[OR_u1_u1_422_sample_start_] 
        $T[OR_u1_u1_422_sample_completed_] 
        $T[OR_u1_u1_422_update_start_] 
        $T[OR_u1_u1_422_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_420_sample_start_] 
        $T[R_iNsTr_2_420_sample_completed_] 
        $T[R_iNsTr_2_420_update_start_] 
        $T[R_iNsTr_2_420_update_completed_] 
        // implicit reference
        R_iNsTr_2_420_sample_start_ <-& ($entry)
        R_iNsTr_2_420_sample_completed_ <-& (R_iNsTr_2_420_sample_start_)
        R_iNsTr_2_420_update_start_ <-& (R_iNsTr_2_420_sample_completed_)
        R_iNsTr_2_420_update_completed_ <-& (R_iNsTr_2_420_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_421_sample_start_] 
        $T[R_iNsTr_23_421_sample_completed_] 
        $T[R_iNsTr_23_421_update_start_] 
        $T[R_iNsTr_23_421_update_completed_] 
        // implicit reference
        R_iNsTr_23_421_sample_start_ <-& (EQ_u64_u1_417_update_completed_)
        R_iNsTr_23_421_sample_completed_ <-& (R_iNsTr_23_421_sample_start_)
        R_iNsTr_23_421_update_start_ <-& (R_iNsTr_23_421_sample_completed_)
        R_iNsTr_23_421_update_completed_ <-& (R_iNsTr_23_421_update_start_)
        OR_u1_u1_422_sample_start_ <-& (R_iNsTr_2_420_update_completed_)
        OR_u1_u1_422_sample_start_ <-& (R_iNsTr_23_421_update_completed_)
        ;;[OR_u1_u1_422_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_422_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_422_sample_start_ &-> (OR_u1_u1_422_Sample)
        OR_u1_u1_422_sample_completed_ <-& (OR_u1_u1_422_Sample)
        OR_u1_u1_422_sample_completed_ &-> ($null)
        OR_u1_u1_422_update_start_ &-> (OR_u1_u1_422_Update)
        OR_u1_u1_422_update_completed_ <-& (OR_u1_u1_422_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_311_to_assign_stmt_423__entry__ |-> (assign_stmt_311_to_assign_stmt_423)
      assign_stmt_311_to_assign_stmt_423__exit__ <-| (assign_stmt_311_to_assign_stmt_423)
      // if-statement  
      //  file prog.aa, line 144
      ;;[if_stmt_424_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_424__entry__ |-> (if_stmt_424_dead_link)
      if_stmt_424__exit__ <-| (if_stmt_424_dead_link)
      ;;[if_stmt_424_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_424__entry__ |-> (if_stmt_424_eval_test)
      $P [R_orx_xcond_425_place]
      R_orx_xcond_425_place <-| (if_stmt_424_eval_test)
      ;;[if_stmt_424_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_424_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_425_place |-> (if_stmt_424_if_link if_stmt_424_else_link)
      $P [bb_2_bb_4]
      bb_2_bb_4 <-| (if_stmt_424_if_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_424_else_link)
      ::[assign_stmt_435_to_assign_stmt_445] 
      {
        // 		iNsTr_33 := (tmp13 * iNsTr_22)
        //  file prog.aa, line 148
        // Source expression
        // (tmp13 * iNsTr_22)
        $T[MUL_f64_f64_434_sample_start_] 
        $T[MUL_f64_f64_434_sample_completed_] 
        $T[MUL_f64_f64_434_update_start_] 
        $T[MUL_f64_f64_434_update_completed_] 
        // tmp13
        $T[R_tmp13_432_sample_start_] 
        $T[R_tmp13_432_sample_completed_] 
        $T[R_tmp13_432_update_start_] 
        $T[R_tmp13_432_update_completed_] 
        // implicit reference
        R_tmp13_432_sample_start_ <-& ($entry)
        R_tmp13_432_sample_completed_ <-& (R_tmp13_432_sample_start_)
        R_tmp13_432_update_start_ <-& (R_tmp13_432_sample_completed_)
        R_tmp13_432_update_completed_ <-& (R_tmp13_432_update_start_)
        // iNsTr_22
        $T[R_iNsTr_22_433_sample_start_] 
        $T[R_iNsTr_22_433_sample_completed_] 
        $T[R_iNsTr_22_433_update_start_] 
        $T[R_iNsTr_22_433_update_completed_] 
        // implicit reference
        R_iNsTr_22_433_sample_start_ <-& ($entry)
        R_iNsTr_22_433_sample_completed_ <-& (R_iNsTr_22_433_sample_start_)
        R_iNsTr_22_433_update_start_ <-& (R_iNsTr_22_433_sample_completed_)
        R_iNsTr_22_433_update_completed_ <-& (R_iNsTr_22_433_update_start_)
        MUL_f64_f64_434_sample_start_ <-& (R_tmp13_432_update_completed_)
        MUL_f64_f64_434_sample_start_ <-& (R_iNsTr_22_433_update_completed_)
        ;;[MUL_f64_f64_434_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_434_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_434_sample_start_ &-> (MUL_f64_f64_434_Sample)
        MUL_f64_f64_434_sample_completed_ <-& (MUL_f64_f64_434_Sample)
        MUL_f64_f64_434_sample_completed_ &-> ($null)
        MUL_f64_f64_434_update_start_ &-> (MUL_f64_f64_434_Update)
        MUL_f64_f64_434_update_completed_ <-& (MUL_f64_f64_434_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		phitmp19 := ($bitcast ($uint<64>) iNsTr_33 )
        //  file prog.aa, line 149
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_33 )
        $T[type_cast_438_sample_start_] 
        $T[type_cast_438_sample_completed_] 
        $T[type_cast_438_update_start_] 
        $T[type_cast_438_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_437_sample_start_] 
        $T[R_iNsTr_33_437_sample_completed_] 
        $T[R_iNsTr_33_437_update_start_] 
        $T[R_iNsTr_33_437_update_completed_] 
        // implicit reference
        R_iNsTr_33_437_sample_start_ <-& (MUL_f64_f64_434_update_completed_)
        R_iNsTr_33_437_sample_completed_ <-& (R_iNsTr_33_437_sample_start_)
        R_iNsTr_33_437_update_start_ <-& (R_iNsTr_33_437_sample_completed_)
        R_iNsTr_33_437_update_completed_ <-& (R_iNsTr_33_437_update_start_)
        type_cast_438_sample_start_ <-& (R_iNsTr_33_437_update_completed_)
        ;;[type_cast_438_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_438_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_438_sample_start_ &-> (type_cast_438_Sample)
        type_cast_438_sample_completed_ <-& (type_cast_438_Sample)
        type_cast_438_sample_completed_ &-> ($null)
        type_cast_438_update_start_ &-> (type_cast_438_Update)
        type_cast_438_update_completed_ <-& (type_cast_438_Update)
        // Target expression
        // (as target) phitmp19
        // phitmp19
        // implicit reference
        // 		phitmp21 := (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 150
        // Source expression
        // (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_444_sample_start_] 
        $T[AND_u64_u64_444_sample_completed_] 
        $T[AND_u64_u64_444_update_start_] 
        $T[AND_u64_u64_444_update_completed_] 
        // phitmp19
        $T[R_phitmp19_441_sample_start_] 
        $T[R_phitmp19_441_sample_completed_] 
        $T[R_phitmp19_441_update_start_] 
        $T[R_phitmp19_441_update_completed_] 
        // implicit reference
        R_phitmp19_441_sample_start_ <-& (type_cast_438_update_completed_)
        R_phitmp19_441_sample_completed_ <-& (R_phitmp19_441_sample_start_)
        R_phitmp19_441_update_start_ <-& (R_phitmp19_441_sample_completed_)
        R_phitmp19_441_update_completed_ <-& (R_phitmp19_441_update_start_)
        AND_u64_u64_444_sample_start_ <-& (R_phitmp19_441_update_completed_)
        ;;[AND_u64_u64_444_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_444_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_444_sample_start_ &-> (AND_u64_u64_444_Sample)
        AND_u64_u64_444_sample_completed_ <-& (AND_u64_u64_444_Sample)
        AND_u64_u64_444_sample_completed_ &-> ($null)
        AND_u64_u64_444_update_start_ &-> (AND_u64_u64_444_Update)
        AND_u64_u64_444_update_completed_ <-& (AND_u64_u64_444_Update)
        // Target expression
        // (as target) phitmp21
        // phitmp21
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_435_to_assign_stmt_445__entry__ |-> (assign_stmt_435_to_assign_stmt_445)
      assign_stmt_435_to_assign_stmt_445__exit__ <-| (assign_stmt_435_to_assign_stmt_445)
      ::[assign_stmt_460_to_assign_stmt_475] 
      {
        // 		iNsTr_29 := (tmp15 ^ tmp17)
        //  file prog.aa, line 156
        // Source expression
        // (tmp15 ^ tmp17)
        $T[XOR_u64_u64_459_sample_start_] 
        $T[XOR_u64_u64_459_sample_completed_] 
        $T[XOR_u64_u64_459_update_start_] 
        $T[XOR_u64_u64_459_update_completed_] 
        // tmp15
        $T[R_tmp15_457_sample_start_] 
        $T[R_tmp15_457_sample_completed_] 
        $T[R_tmp15_457_update_start_] 
        $T[R_tmp15_457_update_completed_] 
        // implicit reference
        R_tmp15_457_sample_start_ <-& ($entry)
        R_tmp15_457_sample_completed_ <-& (R_tmp15_457_sample_start_)
        R_tmp15_457_update_start_ <-& (R_tmp15_457_sample_completed_)
        R_tmp15_457_update_completed_ <-& (R_tmp15_457_update_start_)
        // tmp17
        $T[R_tmp17_458_sample_start_] 
        $T[R_tmp17_458_sample_completed_] 
        $T[R_tmp17_458_update_start_] 
        $T[R_tmp17_458_update_completed_] 
        // implicit reference
        R_tmp17_458_sample_start_ <-& ($entry)
        R_tmp17_458_sample_completed_ <-& (R_tmp17_458_sample_start_)
        R_tmp17_458_update_start_ <-& (R_tmp17_458_sample_completed_)
        R_tmp17_458_update_completed_ <-& (R_tmp17_458_update_start_)
        XOR_u64_u64_459_sample_start_ <-& (R_tmp15_457_update_completed_)
        XOR_u64_u64_459_sample_start_ <-& (R_tmp17_458_update_completed_)
        ;;[XOR_u64_u64_459_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_459_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_459_sample_start_ &-> (XOR_u64_u64_459_Sample)
        XOR_u64_u64_459_sample_completed_ <-& (XOR_u64_u64_459_Sample)
        XOR_u64_u64_459_sample_completed_ &-> ($null)
        XOR_u64_u64_459_update_start_ &-> (XOR_u64_u64_459_Update)
        XOR_u64_u64_459_update_completed_ <-& (XOR_u64_u64_459_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 157
        // Source expression
        // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_465_sample_start_] 
        $T[AND_u64_u64_465_sample_completed_] 
        $T[AND_u64_u64_465_update_start_] 
        $T[AND_u64_u64_465_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_462_sample_start_] 
        $T[R_iNsTr_29_462_sample_completed_] 
        $T[R_iNsTr_29_462_update_start_] 
        $T[R_iNsTr_29_462_update_completed_] 
        // implicit reference
        R_iNsTr_29_462_sample_start_ <-& (XOR_u64_u64_459_update_completed_)
        R_iNsTr_29_462_sample_completed_ <-& (R_iNsTr_29_462_sample_start_)
        R_iNsTr_29_462_update_start_ <-& (R_iNsTr_29_462_sample_completed_)
        R_iNsTr_29_462_update_completed_ <-& (R_iNsTr_29_462_update_start_)
        AND_u64_u64_465_sample_start_ <-& (R_iNsTr_29_462_update_completed_)
        ;;[AND_u64_u64_465_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_465_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_465_sample_start_ &-> (AND_u64_u64_465_Sample)
        AND_u64_u64_465_sample_completed_ <-& (AND_u64_u64_465_Sample)
        AND_u64_u64_465_sample_completed_ &-> ($null)
        AND_u64_u64_465_update_start_ &-> (AND_u64_u64_465_Update)
        AND_u64_u64_465_update_completed_ <-& (AND_u64_u64_465_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
        //  file prog.aa, line 158
        // Source expression
        // (iNsTr_28 | iNsTr_30)
        $T[OR_u64_u64_470_sample_start_] 
        $T[OR_u64_u64_470_sample_completed_] 
        $T[OR_u64_u64_470_update_start_] 
        $T[OR_u64_u64_470_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_468_sample_start_] 
        $T[R_iNsTr_28_468_sample_completed_] 
        $T[R_iNsTr_28_468_update_start_] 
        $T[R_iNsTr_28_468_update_completed_] 
        // implicit reference
        R_iNsTr_28_468_sample_start_ <-& ($entry)
        R_iNsTr_28_468_sample_completed_ <-& (R_iNsTr_28_468_sample_start_)
        R_iNsTr_28_468_update_start_ <-& (R_iNsTr_28_468_sample_completed_)
        R_iNsTr_28_468_update_completed_ <-& (R_iNsTr_28_468_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_469_sample_start_] 
        $T[R_iNsTr_30_469_sample_completed_] 
        $T[R_iNsTr_30_469_update_start_] 
        $T[R_iNsTr_30_469_update_completed_] 
        // implicit reference
        R_iNsTr_30_469_sample_start_ <-& (AND_u64_u64_465_update_completed_)
        R_iNsTr_30_469_sample_completed_ <-& (R_iNsTr_30_469_sample_start_)
        R_iNsTr_30_469_update_start_ <-& (R_iNsTr_30_469_sample_completed_)
        R_iNsTr_30_469_update_completed_ <-& (R_iNsTr_30_469_update_start_)
        OR_u64_u64_470_sample_start_ <-& (R_iNsTr_28_468_update_completed_)
        OR_u64_u64_470_sample_start_ <-& (R_iNsTr_30_469_update_completed_)
        ;;[OR_u64_u64_470_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_470_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_470_sample_start_ &-> (OR_u64_u64_470_Sample)
        OR_u64_u64_470_sample_completed_ <-& (OR_u64_u64_470_Sample)
        OR_u64_u64_470_sample_completed_ &-> ($null)
        OR_u64_u64_470_update_start_ &-> (OR_u64_u64_470_Update)
        OR_u64_u64_470_update_completed_ <-& (OR_u64_u64_470_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		ret_val__ := ($bitcast ($float<11,52>) iNsTr_31 )
        //  file prog.aa, line 159
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_31 )
        $T[type_cast_474_sample_start_] 
        $T[type_cast_474_sample_completed_] 
        $T[type_cast_474_update_start_] 
        $T[type_cast_474_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_473_sample_start_] 
        $T[R_iNsTr_31_473_sample_completed_] 
        $T[R_iNsTr_31_473_update_start_] 
        $T[R_iNsTr_31_473_update_completed_] 
        // implicit reference
        R_iNsTr_31_473_sample_start_ <-& (OR_u64_u64_470_update_completed_)
        R_iNsTr_31_473_sample_completed_ <-& (R_iNsTr_31_473_sample_start_)
        R_iNsTr_31_473_update_start_ <-& (R_iNsTr_31_473_sample_completed_)
        R_iNsTr_31_473_update_completed_ <-& (R_iNsTr_31_473_update_start_)
        type_cast_474_sample_start_ <-& (R_iNsTr_31_473_update_completed_)
        ;;[type_cast_474_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_474_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_474_sample_start_ &-> (type_cast_474_Sample)
        type_cast_474_sample_completed_ <-& (type_cast_474_Sample)
        type_cast_474_sample_completed_ &-> ($null)
        type_cast_474_update_start_ &-> (type_cast_474_Update)
        type_cast_474_update_completed_ <-& (type_cast_474_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_460_to_assign_stmt_475__entry__ |-> (assign_stmt_460_to_assign_stmt_475)
      assign_stmt_460_to_assign_stmt_475__exit__ <-| (assign_stmt_460_to_assign_stmt_475)
      // control-path for merge  
      //  file prog.aa, line 109
      ;;[merge_stmt_266_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_266__entry__ |-> (merge_stmt_266_dead_link)
      merge_stmt_266__exit__ <-| (merge_stmt_266_dead_link)
      //---------------------   merge statement  file prog.aa, line 109  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_266_PhiReqMerge] 
      merge_stmt_266_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_266_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_266_PhiReqMerge |-> (merge_stmt_266_PhiAck)
      merge_stmt_266__exit__  <-| (merge_stmt_266_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 109  --------------------------
      // control-path for merge  
      //  file prog.aa, line 118
      //---------------------   merge statement  file prog.aa, line 118  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        ;;[phi_stmt_298] 
        {
          ||[phi_stmt_298_sources] 
          {
            // sources for 			$phi iNsTr_4 := 			  ($cast ($uint<64>) phitmp20 ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20 )
            ;;[type_cast_301] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_298_req] 
        }
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      ||[bb_1_bb_2_PhiReq] 
      {
        ;;[phi_stmt_298] 
        {
          ||[phi_stmt_298_sources] 
          {
            // sources for 			$phi iNsTr_4 := 			  ($cast ($uint<64>) phitmp20 ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20 )
            ;;[type_cast_301] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_298_req] 
        }
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_297_PhiReqMerge] 
      merge_stmt_297_PhiReqMerge <-| ( bb_0_bb_2_PhiReq  bb_1_bb_2_PhiReq )
      ||[merge_stmt_297_PhiAck] 
      {
        $T [phi_stmt_298_ack] 
      }
      merge_stmt_297_PhiReqMerge |-> (merge_stmt_297_PhiAck)
      merge_stmt_297__exit__  <-| (merge_stmt_297_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 118  --------------------------
      // control-path for merge  
      //  file prog.aa, line 146
      ;;[merge_stmt_430_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_430__entry__ |-> (merge_stmt_430_dead_link)
      merge_stmt_430__exit__ <-| (merge_stmt_430_dead_link)
      //---------------------   merge statement  file prog.aa, line 146  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_430_PhiReqMerge] 
      merge_stmt_430_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_430_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_430_PhiReqMerge |-> (merge_stmt_430_PhiAck)
      merge_stmt_430__exit__  <-| (merge_stmt_430_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 146  --------------------------
      // control-path for merge  
      //  file prog.aa, line 153
      //---------------------   merge statement  file prog.aa, line 153  --------------------------
      ||[bb_2_bb_4_PhiReq] 
      {
        ;;[phi_stmt_448] 
        {
          ||[phi_stmt_448_sources] 
          {
            // sources for 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21 ) $on bb_3_bb_4			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_bb_4 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21 )
            ;;[type_cast_451] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_448_req] 
        }
      }
      bb_2_bb_4 |-> (bb_2_bb_4_PhiReq)
      ||[bb_3_bb_4_PhiReq] 
      {
        ;;[phi_stmt_448] 
        {
          ||[phi_stmt_448_sources] 
          {
            // sources for 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21 ) $on bb_3_bb_4			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_bb_4 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21 )
            ;;[type_cast_451] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_448_req] 
        }
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_447_PhiReqMerge] 
      merge_stmt_447_PhiReqMerge <-| ( bb_2_bb_4_PhiReq  bb_3_bb_4_PhiReq )
      ||[merge_stmt_447_PhiAck] 
      {
        $T [phi_stmt_448_ack] 
      }
      merge_stmt_447_PhiReqMerge |-> (merge_stmt_447_PhiAck)
      merge_stmt_447__exit__  <-| (merge_stmt_447_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 153  --------------------------
      // control-path for merge  
      //  file prog.aa, line 161
      //---------------------   merge statement  file prog.aa, line 161  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_477_PhiReqMerge] 
      merge_stmt_477_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_477_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_477_PhiReqMerge |-> (merge_stmt_477_PhiAck)
      merge_stmt_477__exit__  <-| (merge_stmt_477_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 161  --------------------------
      assign_stmt_236_to_assign_stmt_259__entry__ <-| (branch_block_stmt_232__entry__)
      if_stmt_260__entry__ <-| (assign_stmt_236_to_assign_stmt_259__exit__)
      merge_stmt_266__entry__ <-| (if_stmt_260__exit__)
      assign_stmt_272_to_assign_stmt_295__entry__ <-| (merge_stmt_266__exit__)
      bb_1_bb_2 <-| (assign_stmt_272_to_assign_stmt_295__exit__)
      assign_stmt_311_to_assign_stmt_423__entry__ <-| (merge_stmt_297__exit__)
      if_stmt_424__entry__ <-| (assign_stmt_311_to_assign_stmt_423__exit__)
      merge_stmt_430__entry__ <-| (if_stmt_424__exit__)
      assign_stmt_435_to_assign_stmt_445__entry__ <-| (merge_stmt_430__exit__)
      bb_3_bb_4 <-| (assign_stmt_435_to_assign_stmt_445__exit__)
      assign_stmt_460_to_assign_stmt_475__entry__ <-| (merge_stmt_447__exit__)
      return__ <-| (assign_stmt_460_to_assign_stmt_475__exit__)
      merge_stmt_477__exit__ |-> (branch_block_stmt_232__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 109
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 118
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 146
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 153
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 161
    // constant-object-declarations for block %fdiv32%body
    //  file prog.aa, line 98
    // constant-object-declarations for block %fdiv32
    //  file prog.aa, line 93
    // constant-declarations for block %fdiv32%body
    //  file prog.aa, line 98
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_244_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_250_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_256_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 107
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 109
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_270_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_276_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_282_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_293_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 118
    // constant-declarations for phi:  			$phi iNsTr_4 := 			  ($cast ($uint<64>) phitmp20 ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 119
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_304_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_309_wire_constant] : $int<64> := _b0000000000001111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_315_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_326_wire_constant] : $int<64> := _b0011111111101111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f1.882353e+00 )
    $constant $W[type_cast_340_wire_constant] : $float<11,52> := _b0011111111111110000111100001111000101101111010000111000010010111// 1.882353e+00
    // ($bitcast ($float<11,52>) _f2.823529e+00 )
    $constant $W[type_cast_345_wire_constant] : $float<11,52> := _b0100000000000110100101101001011001011111010100100111010111101111// 2.823529e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_356_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_372_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_388_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_404_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_416_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 144
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 146
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_443_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 153
    // constant-declarations for phi:  			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21 ) $on bb_3_bb_4			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_bb_4 // type of target is $uint<64>
    //  file prog.aa, line 154
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_454_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_464_wire_constant] : $int<64> := _b1000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 161
    // block %fdiv32%body
    //  file prog.aa, line 98
    // 		tmp17 := ($bitcast ($uint<64>) a )
    //  file prog.aa, line 101
    // tmp17
    $W[tmp17_236] : $int<64>
    // 		tmp15 := ($bitcast ($uint<64>) b )
    //  file prog.aa, line 102
    // tmp15
    $W[tmp15_240] : $int<64>
    // 		iNsTr_0 := (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 103
    // iNsTr_0
    $W[iNsTr_0_246] : $int<64>
    // 		iNsTr_1 := (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 104
    // iNsTr_1
    $W[iNsTr_1_252] : $int<64>
    // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 106
    // iNsTr_2
    $W[iNsTr_2_259] : $int<1>
    // if statement  
    //  file prog.aa, line 107
    // 		iNsTr_25 := (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 111
    // iNsTr_25
    $W[iNsTr_25_272] : $int<64>
    // 		tmp17x_xmask := (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 112
    // tmp17x_xmask
    $W[tmp17x_xmask_278] : $int<64>
    // 		iNsTr_26 := (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 113
    // iNsTr_26
    $W[iNsTr_26_284] : $int<64>
    // 		phitmp := (iNsTr_26 - iNsTr_25)
    //  file prog.aa, line 114
    // phitmp
    $W[phitmp_289] : $int<64>
    // 		phitmp20 := (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 115
    // phitmp20
    $W[phitmp20_295] : $int<64>
    // merge-statement  
    //  file prog.aa, line 118
    // 			$phi iNsTr_4 := 			  ($cast ($uint<64>) phitmp20 ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 119
    // ($cast ($uint<64>) phitmp20 )
    $intermediate $W[type_cast_301_wire] : $int<64>
    // iNsTr_4
    $W[iNsTr_4_298] : $int<64>
    // 		iNsTr_5 := (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 121
    // iNsTr_5
    $W[iNsTr_5_311] : $int<64>
    // 		iNsTr_6 := (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 122
    // iNsTr_6
    $W[iNsTr_6_317] : $int<64>
    // 		iNsTr_7 := (iNsTr_4 | iNsTr_5)
    //  file prog.aa, line 123
    // iNsTr_7
    $W[iNsTr_7_322] : $int<64>
    // 		iNsTr_8 := (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 124
    // iNsTr_8
    $W[iNsTr_8_328] : $int<64>
    // 		tmp13 := ($bitcast ($float<11,52>) iNsTr_7 )
    //  file prog.aa, line 125
    // tmp13
    $W[tmp13_332] : $float<11,52>
    // 		tmp11 := ($bitcast ($float<11,52>) iNsTr_8 )
    //  file prog.aa, line 126
    // tmp11
    $W[tmp11_336] : $float<11,52>
    // 		iNsTr_9 := (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 127
    // iNsTr_9
    $W[iNsTr_9_342] : $float<11,52>
    // 		iNsTr_10 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
    //  file prog.aa, line 128
    // iNsTr_10
    $W[iNsTr_10_348] : $float<11,52>
    // 		iNsTr_11 := (tmp11 * iNsTr_10)
    //  file prog.aa, line 129
    // iNsTr_11
    $W[iNsTr_11_353] : $float<11,52>
    // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
    //  file prog.aa, line 130
    // iNsTr_12
    $W[iNsTr_12_359] : $float<11,52>
    // 		iNsTr_13 := (iNsTr_10 * iNsTr_12)
    //  file prog.aa, line 131
    // iNsTr_13
    $W[iNsTr_13_364] : $float<11,52>
    // 		iNsTr_14 := (tmp11 * iNsTr_13)
    //  file prog.aa, line 132
    // iNsTr_14
    $W[iNsTr_14_369] : $float<11,52>
    // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    //  file prog.aa, line 133
    // iNsTr_15
    $W[iNsTr_15_375] : $float<11,52>
    // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
    //  file prog.aa, line 134
    // iNsTr_16
    $W[iNsTr_16_380] : $float<11,52>
    // 		iNsTr_17 := (tmp11 * iNsTr_16)
    //  file prog.aa, line 135
    // iNsTr_17
    $W[iNsTr_17_385] : $float<11,52>
    // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    //  file prog.aa, line 136
    // iNsTr_18
    $W[iNsTr_18_391] : $float<11,52>
    // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
    //  file prog.aa, line 137
    // iNsTr_19
    $W[iNsTr_19_396] : $float<11,52>
    // 		iNsTr_20 := (tmp11 * iNsTr_19)
    //  file prog.aa, line 138
    // iNsTr_20
    $W[iNsTr_20_401] : $float<11,52>
    // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    //  file prog.aa, line 139
    // iNsTr_21
    $W[iNsTr_21_407] : $float<11,52>
    // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
    //  file prog.aa, line 140
    // iNsTr_22
    $W[iNsTr_22_412] : $float<11,52>
    // 		iNsTr_23 := (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 142
    // iNsTr_23
    $W[iNsTr_23_418] : $int<1>
    // 		orx_xcond := (iNsTr_2 | iNsTr_23)
    //  file prog.aa, line 143
    // orx_xcond
    $W[orx_xcond_423] : $int<1>
    // if statement  
    //  file prog.aa, line 144
    // 		iNsTr_33 := (tmp13 * iNsTr_22)
    //  file prog.aa, line 148
    // iNsTr_33
    $W[iNsTr_33_435] : $float<11,52>
    // 		phitmp19 := ($bitcast ($uint<64>) iNsTr_33 )
    //  file prog.aa, line 149
    // phitmp19
    $W[phitmp19_439] : $int<64>
    // 		phitmp21 := (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 150
    // phitmp21
    $W[phitmp21_445] : $int<64>
    // merge-statement  
    //  file prog.aa, line 153
    // 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21 ) $on bb_3_bb_4			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_bb_4 // type of target is $uint<64>
    //  file prog.aa, line 154
    // ($cast ($uint<64>) phitmp21 )
    $intermediate $W[type_cast_451_wire] : $int<64>
    // iNsTr_28
    $W[iNsTr_28_448] : $int<64>
    // 		iNsTr_29 := (tmp15 ^ tmp17)
    //  file prog.aa, line 156
    // iNsTr_29
    $W[iNsTr_29_460] : $int<64>
    // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 157
    // iNsTr_30
    $W[iNsTr_30_466] : $int<64>
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
    //  file prog.aa, line 158
    // iNsTr_31
    $W[iNsTr_31_471] : $int<64>
    // 		ret_val__ := ($bitcast ($float<11,52>) iNsTr_31 )
    //  file prog.aa, line 159
    // ret_val__
    // datapath-instances for block %fdiv32%body
    //  file prog.aa, line 98
    // 		tmp17 := ($bitcast ($uint<64>) a )
    //  file prog.aa, line 101
    // ($bitcast ($uint<64>) a )
    # := [type_cast_235_inst] (a) (tmp17_236) 
    $delay type_cast_235_inst 1
    // 		tmp15 := ($bitcast ($uint<64>) b )
    //  file prog.aa, line 102
    // ($bitcast ($uint<64>) b )
    # := [type_cast_239_inst] (b) (tmp15_240) 
    $delay type_cast_239_inst 1
    // 		iNsTr_0 := (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 103
    // (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_245_inst] (tmp17_236 type_cast_244_wire_constant) (iNsTr_0_246) 
    $delay AND_u64_u64_245_inst 1
    // 		iNsTr_1 := (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 104
    // (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_251_inst] (tmp15_240 type_cast_250_wire_constant) (iNsTr_1_252) 
    $delay AND_u64_u64_251_inst 1
    // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 106
    // (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_257_inst] (iNsTr_0_246 type_cast_256_wire_constant) (iNsTr_2_259) 
    $delay EQ_u64_u1_257_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 107
    ==0? [if_stmt_260_branch] (iNsTr_2_259)
    // 		iNsTr_25 := (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 111
    // (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_271_inst] (tmp15_240 type_cast_270_wire_constant) (iNsTr_25_272) 
    $delay AND_u64_u64_271_inst 1
    // 		tmp17x_xmask := (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 112
    // (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_277_inst] (tmp17_236 type_cast_276_wire_constant) (tmp17x_xmask_278) 
    $delay AND_u64_u64_277_inst 1
    // 		iNsTr_26 := (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 113
    // (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    +[ADD_u64_u64_283_inst] (tmp17x_xmask_278 type_cast_282_wire_constant) (iNsTr_26_284) 
    $delay ADD_u64_u64_283_inst 1
    // 		phitmp := (iNsTr_26 - iNsTr_25)
    //  file prog.aa, line 114
    // (iNsTr_26 - iNsTr_25)
    -[SUB_u64_u64_288_inst] (iNsTr_26_284 iNsTr_25_272) (phitmp_289) 
    $delay SUB_u64_u64_288_inst 1
    // 		phitmp20 := (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 115
    // (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_294_inst] (phitmp_289 type_cast_293_wire_constant) (phitmp20_295) 
    $delay AND_u64_u64_294_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 118
    // 			$phi iNsTr_4 := 			  ($cast ($uint<64>) phitmp20 ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 119
    // ($cast ($uint<64>) phitmp20 )
    # := [type_cast_301_inst] (phitmp20_295) (type_cast_301_wire) 
    $delay type_cast_301_inst 1
    $phi [phi_stmt_298] (type_cast_301_wire type_cast_304_wire_constant) ( iNsTr_4_298 )
    // 		iNsTr_5 := (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 121
    // (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_310_inst] (tmp17_236 type_cast_309_wire_constant) (iNsTr_5_311) 
    $delay AND_u64_u64_310_inst 1
    // 		iNsTr_6 := (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 122
    // (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    |[OR_u64_u64_316_inst] (tmp15_240 type_cast_315_wire_constant) (iNsTr_6_317) 
    $delay OR_u64_u64_316_inst 1
    // 		iNsTr_7 := (iNsTr_4 | iNsTr_5)
    //  file prog.aa, line 123
    // (iNsTr_4 | iNsTr_5)
    |[OR_u64_u64_321_inst] (iNsTr_4_298 iNsTr_5_311) (iNsTr_7_322) 
    $delay OR_u64_u64_321_inst 1
    // 		iNsTr_8 := (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 124
    // (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_327_inst] (iNsTr_6_317 type_cast_326_wire_constant) (iNsTr_8_328) 
    $delay AND_u64_u64_327_inst 1
    // 		tmp13 := ($bitcast ($float<11,52>) iNsTr_7 )
    //  file prog.aa, line 125
    // ($bitcast ($float<11,52>) iNsTr_7 )
    # := [type_cast_331_inst] (iNsTr_7_322) (tmp13_332) 
    $delay type_cast_331_inst 1
    // 		tmp11 := ($bitcast ($float<11,52>) iNsTr_8 )
    //  file prog.aa, line 126
    // ($bitcast ($float<11,52>) iNsTr_8 )
    # := [type_cast_335_inst] (iNsTr_8_328) (tmp11_336) 
    $delay type_cast_335_inst 1
    // 		iNsTr_9 := (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 127
    // (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    *[MUL_f64_f64_341_inst] (tmp11_336 type_cast_340_wire_constant) (iNsTr_9_342) 
    $delay MUL_f64_f64_341_inst 24
    // 		iNsTr_10 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
    //  file prog.aa, line 128
    // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
    -[SUB_f64_f64_347_inst] (type_cast_345_wire_constant iNsTr_9_342) (iNsTr_10_348) 
    $delay SUB_f64_f64_347_inst 24
    // 		iNsTr_11 := (tmp11 * iNsTr_10)
    //  file prog.aa, line 129
    // (tmp11 * iNsTr_10)
    *[MUL_f64_f64_352_inst] (tmp11_336 iNsTr_10_348) (iNsTr_11_353) 
    $delay MUL_f64_f64_352_inst 24
    // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
    //  file prog.aa, line 130
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
    -[SUB_f64_f64_358_inst] (type_cast_356_wire_constant iNsTr_11_353) (iNsTr_12_359) 
    $delay SUB_f64_f64_358_inst 24
    // 		iNsTr_13 := (iNsTr_10 * iNsTr_12)
    //  file prog.aa, line 131
    // (iNsTr_10 * iNsTr_12)
    *[MUL_f64_f64_363_inst] (iNsTr_10_348 iNsTr_12_359) (iNsTr_13_364) 
    $delay MUL_f64_f64_363_inst 24
    // 		iNsTr_14 := (tmp11 * iNsTr_13)
    //  file prog.aa, line 132
    // (tmp11 * iNsTr_13)
    *[MUL_f64_f64_368_inst] (tmp11_336 iNsTr_13_364) (iNsTr_14_369) 
    $delay MUL_f64_f64_368_inst 24
    // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    //  file prog.aa, line 133
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    -[SUB_f64_f64_374_inst] (type_cast_372_wire_constant iNsTr_14_369) (iNsTr_15_375) 
    $delay SUB_f64_f64_374_inst 24
    // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
    //  file prog.aa, line 134
    // (iNsTr_13 * iNsTr_15)
    *[MUL_f64_f64_379_inst] (iNsTr_13_364 iNsTr_15_375) (iNsTr_16_380) 
    $delay MUL_f64_f64_379_inst 24
    // 		iNsTr_17 := (tmp11 * iNsTr_16)
    //  file prog.aa, line 135
    // (tmp11 * iNsTr_16)
    *[MUL_f64_f64_384_inst] (tmp11_336 iNsTr_16_380) (iNsTr_17_385) 
    $delay MUL_f64_f64_384_inst 24
    // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    //  file prog.aa, line 136
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    -[SUB_f64_f64_390_inst] (type_cast_388_wire_constant iNsTr_17_385) (iNsTr_18_391) 
    $delay SUB_f64_f64_390_inst 24
    // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
    //  file prog.aa, line 137
    // (iNsTr_16 * iNsTr_18)
    *[MUL_f64_f64_395_inst] (iNsTr_16_380 iNsTr_18_391) (iNsTr_19_396) 
    $delay MUL_f64_f64_395_inst 24
    // 		iNsTr_20 := (tmp11 * iNsTr_19)
    //  file prog.aa, line 138
    // (tmp11 * iNsTr_19)
    *[MUL_f64_f64_400_inst] (tmp11_336 iNsTr_19_396) (iNsTr_20_401) 
    $delay MUL_f64_f64_400_inst 24
    // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    //  file prog.aa, line 139
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    -[SUB_f64_f64_406_inst] (type_cast_404_wire_constant iNsTr_20_401) (iNsTr_21_407) 
    $delay SUB_f64_f64_406_inst 24
    // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
    //  file prog.aa, line 140
    // (iNsTr_19 * iNsTr_21)
    *[MUL_f64_f64_411_inst] (iNsTr_19_396 iNsTr_21_407) (iNsTr_22_412) 
    $delay MUL_f64_f64_411_inst 24
    // 		iNsTr_23 := (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 142
    // (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_417_inst] (iNsTr_1_252 type_cast_416_wire_constant) (iNsTr_23_418) 
    $delay EQ_u64_u1_417_inst 1
    // 		orx_xcond := (iNsTr_2 | iNsTr_23)
    //  file prog.aa, line 143
    // (iNsTr_2 | iNsTr_23)
    |[OR_u1_u1_422_inst] (iNsTr_2_259 iNsTr_23_418) (orx_xcond_423) 
    $delay OR_u1_u1_422_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 144
    ==0? [if_stmt_424_branch] (orx_xcond_423)
    // 		iNsTr_33 := (tmp13 * iNsTr_22)
    //  file prog.aa, line 148
    // (tmp13 * iNsTr_22)
    *[MUL_f64_f64_434_inst] (tmp13_332 iNsTr_22_412) (iNsTr_33_435) 
    $delay MUL_f64_f64_434_inst 24
    // 		phitmp19 := ($bitcast ($uint<64>) iNsTr_33 )
    //  file prog.aa, line 149
    // ($bitcast ($uint<64>) iNsTr_33 )
    # := [type_cast_438_inst] (iNsTr_33_435) (phitmp19_439) 
    $delay type_cast_438_inst 1
    // 		phitmp21 := (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 150
    // (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_444_inst] (phitmp19_439 type_cast_443_wire_constant) (phitmp21_445) 
    $delay AND_u64_u64_444_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 153
    // 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21 ) $on bb_3_bb_4			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_bb_4 // type of target is $uint<64>
    //  file prog.aa, line 154
    // ($cast ($uint<64>) phitmp21 )
    # := [type_cast_451_inst] (phitmp21_445) (type_cast_451_wire) 
    $delay type_cast_451_inst 1
    $phi [phi_stmt_448] (type_cast_451_wire type_cast_454_wire_constant) ( iNsTr_28_448 )
    // 		iNsTr_29 := (tmp15 ^ tmp17)
    //  file prog.aa, line 156
    // (tmp15 ^ tmp17)
    ^[XOR_u64_u64_459_inst] (tmp15_240 tmp17_236) (iNsTr_29_460) 
    $delay XOR_u64_u64_459_inst 1
    // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 157
    // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_465_inst] (iNsTr_29_460 type_cast_464_wire_constant) (iNsTr_30_466) 
    $delay AND_u64_u64_465_inst 1
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
    //  file prog.aa, line 158
    // (iNsTr_28 | iNsTr_30)
    |[OR_u64_u64_470_inst] (iNsTr_28_448 iNsTr_30_466) (iNsTr_31_471) 
    $delay OR_u64_u64_470_inst 1
    // 		ret_val__ := ($bitcast ($float<11,52>) iNsTr_31 )
    //  file prog.aa, line 159
    // ($bitcast ($float<11,52>) iNsTr_31 )
    # := [type_cast_474_inst] (iNsTr_31_471) (ret_val__) 
    $delay type_cast_474_inst 1
  }
  // end data-path
  // 		tmp17 := ($bitcast ($uint<64>) a )
  //  file prog.aa, line 101
  // ($bitcast ($uint<64>) a )
  type_cast_235_inst <=> (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_235_Sample/rr branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_235_Update/cr) (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_235_Sample/ra branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_235_Update/ca)
  // 		tmp15 := ($bitcast ($uint<64>) b )
  //  file prog.aa, line 102
  // ($bitcast ($uint<64>) b )
  type_cast_239_inst <=> (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_239_Sample/rr branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_239_Update/cr) (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_239_Sample/ra branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/type_cast_239_Update/ca)
  // 		iNsTr_0 := (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 103
  // (tmp17 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_245_inst <=> (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_245_Sample/rr branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_245_Update/cr) (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_245_Sample/ra branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_245_Update/ca)
  // 		iNsTr_1 := (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 104
  // (tmp15 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_251_inst <=> (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_251_Sample/rr branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_251_Update/cr) (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_251_Sample/ra branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/AND_u64_u64_251_Update/ca)
  // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 106
  // (iNsTr_0 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_257_inst <=> (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/EQ_u64_u1_257_Sample/rr branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/EQ_u64_u1_257_Update/cr) (branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/EQ_u64_u1_257_Sample/ra branch_block_stmt_232/assign_stmt_236_to_assign_stmt_259/EQ_u64_u1_257_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 107
  if_stmt_260_branch <=> (branch_block_stmt_232/if_stmt_260_eval_test/branch_req) (branch_block_stmt_232/if_stmt_260_else_link/else_choice_transition branch_block_stmt_232/if_stmt_260_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 109
  // 		iNsTr_25 := (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 111
  // (tmp15 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_271_inst <=> (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_271_Sample/rr branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_271_Update/cr) (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_271_Sample/ra branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_271_Update/ca)
  // 		tmp17x_xmask := (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 112
  // (tmp17 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_277_inst <=> (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_277_Sample/rr branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_277_Update/cr) (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_277_Sample/ra branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_277_Update/ca)
  // 		iNsTr_26 := (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 113
  // (tmp17x_xmask + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  ADD_u64_u64_283_inst <=> (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/ADD_u64_u64_283_Sample/rr branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/ADD_u64_u64_283_Update/cr) (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/ADD_u64_u64_283_Sample/ra branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/ADD_u64_u64_283_Update/ca)
  // 		phitmp := (iNsTr_26 - iNsTr_25)
  //  file prog.aa, line 114
  // (iNsTr_26 - iNsTr_25)
  SUB_u64_u64_288_inst <=> (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/SUB_u64_u64_288_Sample/rr branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/SUB_u64_u64_288_Update/cr) (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/SUB_u64_u64_288_Sample/ra branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/SUB_u64_u64_288_Update/ca)
  // 		phitmp20 := (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 115
  // (phitmp & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_294_inst <=> (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_294_Sample/rr branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_294_Update/cr) (branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_294_Sample/ra branch_block_stmt_232/assign_stmt_272_to_assign_stmt_295/AND_u64_u64_294_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 118
  // ($cast ($uint<64>) phitmp20 )
  type_cast_301_inst <=> (branch_block_stmt_232/bb_1_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_sources/type_cast_301/SplitProtocol/Sample/rr branch_block_stmt_232/bb_1_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_sources/type_cast_301/SplitProtocol/Update/cr) (branch_block_stmt_232/bb_1_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_sources/type_cast_301/SplitProtocol/Sample/ra branch_block_stmt_232/bb_1_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_sources/type_cast_301/SplitProtocol/Update/ca)
  phi_stmt_298 <=> (branch_block_stmt_232/bb_1_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_req branch_block_stmt_232/bb_0_bb_2_PhiReq/phi_stmt_298/phi_stmt_298_req) (branch_block_stmt_232/merge_stmt_297_PhiAck/phi_stmt_298_ack)
  // 		iNsTr_5 := (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 121
  // (tmp17 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_310_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_310_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_310_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_310_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_310_Update/ca)
  // 		iNsTr_6 := (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 122
  // (tmp15 | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  OR_u64_u64_316_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_316_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_316_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_316_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_316_Update/ca)
  // 		iNsTr_7 := (iNsTr_4 | iNsTr_5)
  //  file prog.aa, line 123
  // (iNsTr_4 | iNsTr_5)
  OR_u64_u64_321_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_321_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_321_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_321_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u64_u64_321_Update/ca)
  // 		iNsTr_8 := (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 124
  // (iNsTr_6 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_327_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_327_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_327_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_327_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/AND_u64_u64_327_Update/ca)
  // 		tmp13 := ($bitcast ($float<11,52>) iNsTr_7 )
  //  file prog.aa, line 125
  // ($bitcast ($float<11,52>) iNsTr_7 )
  type_cast_331_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_331_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_331_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_331_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_331_Update/ca)
  // 		tmp11 := ($bitcast ($float<11,52>) iNsTr_8 )
  //  file prog.aa, line 126
  // ($bitcast ($float<11,52>) iNsTr_8 )
  type_cast_335_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_335_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_335_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_335_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/type_cast_335_Update/ca)
  // 		iNsTr_9 := (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  //  file prog.aa, line 127
  // (tmp11 * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  MUL_f64_f64_341_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_341_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_341_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_341_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_341_Update/ca)
  // 		iNsTr_10 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
  //  file prog.aa, line 128
  // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_9)
  SUB_f64_f64_347_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_347_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_347_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_347_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_347_Update/ca)
  // 		iNsTr_11 := (tmp11 * iNsTr_10)
  //  file prog.aa, line 129
  // (tmp11 * iNsTr_10)
  MUL_f64_f64_352_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_352_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_352_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_352_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_352_Update/ca)
  // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
  //  file prog.aa, line 130
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_11)
  SUB_f64_f64_358_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_358_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_358_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_358_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_358_Update/ca)
  // 		iNsTr_13 := (iNsTr_10 * iNsTr_12)
  //  file prog.aa, line 131
  // (iNsTr_10 * iNsTr_12)
  MUL_f64_f64_363_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_363_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_363_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_363_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_363_Update/ca)
  // 		iNsTr_14 := (tmp11 * iNsTr_13)
  //  file prog.aa, line 132
  // (tmp11 * iNsTr_13)
  MUL_f64_f64_368_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_368_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_368_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_368_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_368_Update/ca)
  // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
  //  file prog.aa, line 133
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
  SUB_f64_f64_374_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_374_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_374_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_374_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_374_Update/ca)
  // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
  //  file prog.aa, line 134
  // (iNsTr_13 * iNsTr_15)
  MUL_f64_f64_379_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_379_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_379_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_379_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_379_Update/ca)
  // 		iNsTr_17 := (tmp11 * iNsTr_16)
  //  file prog.aa, line 135
  // (tmp11 * iNsTr_16)
  MUL_f64_f64_384_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_384_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_384_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_384_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_384_Update/ca)
  // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
  //  file prog.aa, line 136
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
  SUB_f64_f64_390_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_390_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_390_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_390_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_390_Update/ca)
  // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
  //  file prog.aa, line 137
  // (iNsTr_16 * iNsTr_18)
  MUL_f64_f64_395_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_395_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_395_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_395_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_395_Update/ca)
  // 		iNsTr_20 := (tmp11 * iNsTr_19)
  //  file prog.aa, line 138
  // (tmp11 * iNsTr_19)
  MUL_f64_f64_400_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_400_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_400_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_400_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_400_Update/ca)
  // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
  //  file prog.aa, line 139
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
  SUB_f64_f64_406_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_406_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_406_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_406_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/SUB_f64_f64_406_Update/ca)
  // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
  //  file prog.aa, line 140
  // (iNsTr_19 * iNsTr_21)
  MUL_f64_f64_411_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_411_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_411_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_411_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/MUL_f64_f64_411_Update/ca)
  // 		iNsTr_23 := (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 142
  // (iNsTr_1 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_417_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/EQ_u64_u1_417_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/EQ_u64_u1_417_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/EQ_u64_u1_417_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/EQ_u64_u1_417_Update/ca)
  // 		orx_xcond := (iNsTr_2 | iNsTr_23)
  //  file prog.aa, line 143
  // (iNsTr_2 | iNsTr_23)
  OR_u1_u1_422_inst <=> (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u1_u1_422_Sample/rr branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u1_u1_422_Update/cr) (branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u1_u1_422_Sample/ra branch_block_stmt_232/assign_stmt_311_to_assign_stmt_423/OR_u1_u1_422_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 144
  if_stmt_424_branch <=> (branch_block_stmt_232/if_stmt_424_eval_test/branch_req) (branch_block_stmt_232/if_stmt_424_else_link/else_choice_transition branch_block_stmt_232/if_stmt_424_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 146
  // 		iNsTr_33 := (tmp13 * iNsTr_22)
  //  file prog.aa, line 148
  // (tmp13 * iNsTr_22)
  MUL_f64_f64_434_inst <=> (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/MUL_f64_f64_434_Sample/rr branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/MUL_f64_f64_434_Update/cr) (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/MUL_f64_f64_434_Sample/ra branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/MUL_f64_f64_434_Update/ca)
  // 		phitmp19 := ($bitcast ($uint<64>) iNsTr_33 )
  //  file prog.aa, line 149
  // ($bitcast ($uint<64>) iNsTr_33 )
  type_cast_438_inst <=> (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/type_cast_438_Sample/rr branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/type_cast_438_Update/cr) (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/type_cast_438_Sample/ra branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/type_cast_438_Update/ca)
  // 		phitmp21 := (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 150
  // (phitmp19 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_444_inst <=> (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/AND_u64_u64_444_Sample/rr branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/AND_u64_u64_444_Update/cr) (branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/AND_u64_u64_444_Sample/ra branch_block_stmt_232/assign_stmt_435_to_assign_stmt_445/AND_u64_u64_444_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 153
  // ($cast ($uint<64>) phitmp21 )
  type_cast_451_inst <=> (branch_block_stmt_232/bb_3_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_sources/type_cast_451/SplitProtocol/Sample/rr branch_block_stmt_232/bb_3_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_sources/type_cast_451/SplitProtocol/Update/cr) (branch_block_stmt_232/bb_3_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_sources/type_cast_451/SplitProtocol/Sample/ra branch_block_stmt_232/bb_3_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_sources/type_cast_451/SplitProtocol/Update/ca)
  phi_stmt_448 <=> (branch_block_stmt_232/bb_3_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_req branch_block_stmt_232/bb_2_bb_4_PhiReq/phi_stmt_448/phi_stmt_448_req) (branch_block_stmt_232/merge_stmt_447_PhiAck/phi_stmt_448_ack)
  // 		iNsTr_29 := (tmp15 ^ tmp17)
  //  file prog.aa, line 156
  // (tmp15 ^ tmp17)
  XOR_u64_u64_459_inst <=> (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/XOR_u64_u64_459_Sample/rr branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/XOR_u64_u64_459_Update/cr) (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/XOR_u64_u64_459_Sample/ra branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/XOR_u64_u64_459_Update/ca)
  // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 157
  // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_465_inst <=> (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/AND_u64_u64_465_Sample/rr branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/AND_u64_u64_465_Update/cr) (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/AND_u64_u64_465_Sample/ra branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/AND_u64_u64_465_Update/ca)
  // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
  //  file prog.aa, line 158
  // (iNsTr_28 | iNsTr_30)
  OR_u64_u64_470_inst <=> (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/OR_u64_u64_470_Sample/rr branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/OR_u64_u64_470_Update/cr) (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/OR_u64_u64_470_Sample/ra branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/OR_u64_u64_470_Update/ca)
  // 		ret_val__ := ($bitcast ($float<11,52>) iNsTr_31 )
  //  file prog.aa, line 159
  // ($bitcast ($float<11,52>) iNsTr_31 )
  type_cast_474_inst <=> (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/type_cast_474_Sample/rr branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/type_cast_474_Update/cr) (branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/type_cast_474_Sample/ra branch_block_stmt_232/assign_stmt_460_to_assign_stmt_475/type_cast_474_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 161
}
$module [fpadd32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32f
  //  file prog.aa, line 177
  // pipe-declarations for block %fpadd32f%body
  //  file prog.aa, line 182
  // pipe-declarations for block %fpadd32f%body%
  //  file prog.aa, line 187
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_498] // Branch Block  file prog.aa, line 182
    {
      $P [branch_block_stmt_498__entry__]
      branch_block_stmt_498__entry__ <-| ($entry)
      $P [branch_block_stmt_498__exit__]
      branch_block_stmt_498__exit__ |-> ($exit)
      $P [assign_stmt_503__entry__] 
      $P [assign_stmt_503__exit__] 
      $P [return__]
      $P [merge_stmt_505__exit__] 
      ::[assign_stmt_503] 
      {
        // 		ret_val__ := (x + y)
        //  file prog.aa, line 185
        // Source expression
        // (x + y)
        $T[ADD_f32_f32_502_sample_start_] 
        $T[ADD_f32_f32_502_sample_completed_] 
        $T[ADD_f32_f32_502_update_start_] 
        $T[ADD_f32_f32_502_update_completed_] 
        // x
        $T[R_x_500_sample_start_] 
        $T[R_x_500_sample_completed_] 
        $T[R_x_500_update_start_] 
        $T[R_x_500_update_completed_] 
        // reference to interface object
        R_x_500_sample_start_ <-& ($entry)
        R_x_500_sample_completed_ <-& (R_x_500_sample_start_)
        R_x_500_update_start_ <-& (R_x_500_sample_completed_)
        R_x_500_update_completed_ <-& (R_x_500_update_start_)
        // y
        $T[R_y_501_sample_start_] 
        $T[R_y_501_sample_completed_] 
        $T[R_y_501_update_start_] 
        $T[R_y_501_update_completed_] 
        // reference to interface object
        R_y_501_sample_start_ <-& ($entry)
        R_y_501_sample_completed_ <-& (R_y_501_sample_start_)
        R_y_501_update_start_ <-& (R_y_501_sample_completed_)
        R_y_501_update_completed_ <-& (R_y_501_update_start_)
        ADD_f32_f32_502_sample_start_ <-& (R_x_500_update_completed_)
        ADD_f32_f32_502_sample_start_ <-& (R_y_501_update_completed_)
        ;;[ADD_f32_f32_502_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_502_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_502_sample_start_ &-> (ADD_f32_f32_502_Sample)
        ADD_f32_f32_502_sample_completed_ <-& (ADD_f32_f32_502_Sample)
        ADD_f32_f32_502_sample_completed_ &-> ($null)
        ADD_f32_f32_502_update_start_ &-> (ADD_f32_f32_502_Update)
        ADD_f32_f32_502_update_completed_ <-& (ADD_f32_f32_502_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_503__entry__ |-> (assign_stmt_503)
      assign_stmt_503__exit__ <-| (assign_stmt_503)
      // control-path for merge  
      //  file prog.aa, line 187
      //---------------------   merge statement  file prog.aa, line 187  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_505_PhiReqMerge] 
      merge_stmt_505_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_505_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_505_PhiReqMerge |-> (merge_stmt_505_PhiAck)
      merge_stmt_505__exit__  <-| (merge_stmt_505_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 187  --------------------------
      assign_stmt_503__entry__ <-| (branch_block_stmt_498__entry__)
      return__ <-| (assign_stmt_503__exit__)
      merge_stmt_505__exit__ |-> (branch_block_stmt_498__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32f%body%
    //  file prog.aa, line 187
    // constant-object-declarations for block %fpadd32f%body
    //  file prog.aa, line 182
    // constant-object-declarations for block %fpadd32f
    //  file prog.aa, line 177
    // constant-declarations for block %fpadd32f%body
    //  file prog.aa, line 182
    // constant-declarations for block %fpadd32f%body%
    //  file prog.aa, line 187
    // block %fpadd32f%body
    //  file prog.aa, line 182
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 185
    // ret_val__
    // datapath-instances for block %fpadd32f%body
    //  file prog.aa, line 182
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 185
    // (x + y)
    +[ADD_f32_f32_502_inst] (x y) (ret_val__) 
    $delay ADD_f32_f32_502_inst 24
  }
  // end data-path
  // 		ret_val__ := (x + y)
  //  file prog.aa, line 185
  // (x + y)
  ADD_f32_f32_502_inst <=> (branch_block_stmt_498/assign_stmt_503/ADD_f32_f32_502_Sample/rr branch_block_stmt_498/assign_stmt_503/ADD_f32_f32_502_Update/cr) (branch_block_stmt_498/assign_stmt_503/ADD_f32_f32_502_Sample/ra branch_block_stmt_498/assign_stmt_503/ADD_f32_f32_502_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 187
}
$module [fpadd32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32fi
  //  file prog.aa, line 203
  // pipe-declarations for block %fpadd32fi%body
  //  file prog.aa, line 208
  // pipe-declarations for block %fpadd32fi%body%
  //  file prog.aa, line 213
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_527] // Branch Block  file prog.aa, line 208
    {
      $P [branch_block_stmt_527__entry__]
      branch_block_stmt_527__entry__ <-| ($entry)
      $P [branch_block_stmt_527__exit__]
      branch_block_stmt_527__exit__ |-> ($exit)
      $P [assign_stmt_532__entry__] 
      $P [assign_stmt_532__exit__] 
      $P [return__]
      $P [merge_stmt_534__exit__] 
      ::[assign_stmt_532] 
      {
        // 		ret_val__ := (y + x)
        //  file prog.aa, line 211
        // Source expression
        // (y + x)
        $T[ADD_u32_u32_531_sample_start_] 
        $T[ADD_u32_u32_531_sample_completed_] 
        $T[ADD_u32_u32_531_update_start_] 
        $T[ADD_u32_u32_531_update_completed_] 
        // y
        $T[R_y_529_sample_start_] 
        $T[R_y_529_sample_completed_] 
        $T[R_y_529_update_start_] 
        $T[R_y_529_update_completed_] 
        // reference to interface object
        R_y_529_sample_start_ <-& ($entry)
        R_y_529_sample_completed_ <-& (R_y_529_sample_start_)
        R_y_529_update_start_ <-& (R_y_529_sample_completed_)
        R_y_529_update_completed_ <-& (R_y_529_update_start_)
        // x
        $T[R_x_530_sample_start_] 
        $T[R_x_530_sample_completed_] 
        $T[R_x_530_update_start_] 
        $T[R_x_530_update_completed_] 
        // reference to interface object
        R_x_530_sample_start_ <-& ($entry)
        R_x_530_sample_completed_ <-& (R_x_530_sample_start_)
        R_x_530_update_start_ <-& (R_x_530_sample_completed_)
        R_x_530_update_completed_ <-& (R_x_530_update_start_)
        ADD_u32_u32_531_sample_start_ <-& (R_y_529_update_completed_)
        ADD_u32_u32_531_sample_start_ <-& (R_x_530_update_completed_)
        ;;[ADD_u32_u32_531_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_531_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_531_sample_start_ &-> (ADD_u32_u32_531_Sample)
        ADD_u32_u32_531_sample_completed_ <-& (ADD_u32_u32_531_Sample)
        ADD_u32_u32_531_sample_completed_ &-> ($null)
        ADD_u32_u32_531_update_start_ &-> (ADD_u32_u32_531_Update)
        ADD_u32_u32_531_update_completed_ <-& (ADD_u32_u32_531_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_532__entry__ |-> (assign_stmt_532)
      assign_stmt_532__exit__ <-| (assign_stmt_532)
      // control-path for merge  
      //  file prog.aa, line 213
      //---------------------   merge statement  file prog.aa, line 213  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_534_PhiReqMerge] 
      merge_stmt_534_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_534_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_534_PhiReqMerge |-> (merge_stmt_534_PhiAck)
      merge_stmt_534__exit__  <-| (merge_stmt_534_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 213  --------------------------
      assign_stmt_532__entry__ <-| (branch_block_stmt_527__entry__)
      return__ <-| (assign_stmt_532__exit__)
      merge_stmt_534__exit__ |-> (branch_block_stmt_527__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 213
    // constant-object-declarations for block %fpadd32fi%body
    //  file prog.aa, line 208
    // constant-object-declarations for block %fpadd32fi
    //  file prog.aa, line 203
    // constant-declarations for block %fpadd32fi%body
    //  file prog.aa, line 208
    // constant-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 213
    // block %fpadd32fi%body
    //  file prog.aa, line 208
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 211
    // ret_val__
    // datapath-instances for block %fpadd32fi%body
    //  file prog.aa, line 208
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 211
    // (y + x)
    +[ADD_u32_u32_531_inst] (y x) (ret_val__) 
    $delay ADD_u32_u32_531_inst 1
  }
  // end data-path
  // 		ret_val__ := (y + x)
  //  file prog.aa, line 211
  // (y + x)
  ADD_u32_u32_531_inst <=> (branch_block_stmt_527/assign_stmt_532/ADD_u32_u32_531_Sample/rr branch_block_stmt_527/assign_stmt_532/ADD_u32_u32_531_Update/cr) (branch_block_stmt_527/assign_stmt_532/ADD_u32_u32_531_Sample/ra branch_block_stmt_527/assign_stmt_532/ADD_u32_u32_531_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 213
}
$module [fpmul32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpmul32f
  //  file prog.aa, line 164
  // pipe-declarations for block %fpmul32f%body
  //  file prog.aa, line 169
  // pipe-declarations for block %fpmul32f%body%
  //  file prog.aa, line 174
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_484] // Branch Block  file prog.aa, line 169
    {
      $P [branch_block_stmt_484__entry__]
      branch_block_stmt_484__entry__ <-| ($entry)
      $P [branch_block_stmt_484__exit__]
      branch_block_stmt_484__exit__ |-> ($exit)
      $P [assign_stmt_489__entry__] 
      $P [assign_stmt_489__exit__] 
      $P [return__]
      $P [merge_stmt_491__exit__] 
      ::[assign_stmt_489] 
      {
        // 		ret_val__ := (x * y)
        //  file prog.aa, line 172
        // Source expression
        // (x * y)
        $T[MUL_f32_f32_488_sample_start_] 
        $T[MUL_f32_f32_488_sample_completed_] 
        $T[MUL_f32_f32_488_update_start_] 
        $T[MUL_f32_f32_488_update_completed_] 
        // x
        $T[R_x_486_sample_start_] 
        $T[R_x_486_sample_completed_] 
        $T[R_x_486_update_start_] 
        $T[R_x_486_update_completed_] 
        // reference to interface object
        R_x_486_sample_start_ <-& ($entry)
        R_x_486_sample_completed_ <-& (R_x_486_sample_start_)
        R_x_486_update_start_ <-& (R_x_486_sample_completed_)
        R_x_486_update_completed_ <-& (R_x_486_update_start_)
        // y
        $T[R_y_487_sample_start_] 
        $T[R_y_487_sample_completed_] 
        $T[R_y_487_update_start_] 
        $T[R_y_487_update_completed_] 
        // reference to interface object
        R_y_487_sample_start_ <-& ($entry)
        R_y_487_sample_completed_ <-& (R_y_487_sample_start_)
        R_y_487_update_start_ <-& (R_y_487_sample_completed_)
        R_y_487_update_completed_ <-& (R_y_487_update_start_)
        MUL_f32_f32_488_sample_start_ <-& (R_x_486_update_completed_)
        MUL_f32_f32_488_sample_start_ <-& (R_y_487_update_completed_)
        ;;[MUL_f32_f32_488_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_488_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_488_sample_start_ &-> (MUL_f32_f32_488_Sample)
        MUL_f32_f32_488_sample_completed_ <-& (MUL_f32_f32_488_Sample)
        MUL_f32_f32_488_sample_completed_ &-> ($null)
        MUL_f32_f32_488_update_start_ &-> (MUL_f32_f32_488_Update)
        MUL_f32_f32_488_update_completed_ <-& (MUL_f32_f32_488_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_489__entry__ |-> (assign_stmt_489)
      assign_stmt_489__exit__ <-| (assign_stmt_489)
      // control-path for merge  
      //  file prog.aa, line 174
      //---------------------   merge statement  file prog.aa, line 174  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_491_PhiReqMerge] 
      merge_stmt_491_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_491_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_491_PhiReqMerge |-> (merge_stmt_491_PhiAck)
      merge_stmt_491__exit__  <-| (merge_stmt_491_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 174  --------------------------
      assign_stmt_489__entry__ <-| (branch_block_stmt_484__entry__)
      return__ <-| (assign_stmt_489__exit__)
      merge_stmt_491__exit__ |-> (branch_block_stmt_484__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpmul32f%body%
    //  file prog.aa, line 174
    // constant-object-declarations for block %fpmul32f%body
    //  file prog.aa, line 169
    // constant-object-declarations for block %fpmul32f
    //  file prog.aa, line 164
    // constant-declarations for block %fpmul32f%body
    //  file prog.aa, line 169
    // constant-declarations for block %fpmul32f%body%
    //  file prog.aa, line 174
    // block %fpmul32f%body
    //  file prog.aa, line 169
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 172
    // ret_val__
    // datapath-instances for block %fpmul32f%body
    //  file prog.aa, line 169
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 172
    // (x * y)
    *[MUL_f32_f32_488_inst] (x y) (ret_val__) 
    $delay MUL_f32_f32_488_inst 24
  }
  // end data-path
  // 		ret_val__ := (x * y)
  //  file prog.aa, line 172
  // (x * y)
  MUL_f32_f32_488_inst <=> (branch_block_stmt_484/assign_stmt_489/MUL_f32_f32_488_Sample/rr branch_block_stmt_484/assign_stmt_489/MUL_f32_f32_488_Update/cr) (branch_block_stmt_484/assign_stmt_489/MUL_f32_f32_488_Sample/ra branch_block_stmt_484/assign_stmt_489/MUL_f32_f32_488_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 174
}
$module [fpsub32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32f
  //  file prog.aa, line 190
  // pipe-declarations for block %fpsub32f%body
  //  file prog.aa, line 195
  // pipe-declarations for block %fpsub32f%body%
  //  file prog.aa, line 200
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_512] // Branch Block  file prog.aa, line 195
    {
      $P [branch_block_stmt_512__entry__]
      branch_block_stmt_512__entry__ <-| ($entry)
      $P [branch_block_stmt_512__exit__]
      branch_block_stmt_512__exit__ |-> ($exit)
      $P [assign_stmt_517__entry__] 
      $P [assign_stmt_517__exit__] 
      $P [return__]
      $P [merge_stmt_519__exit__] 
      ::[assign_stmt_517] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 198
        // Source expression
        // (x - y)
        $T[SUB_f32_f32_516_sample_start_] 
        $T[SUB_f32_f32_516_sample_completed_] 
        $T[SUB_f32_f32_516_update_start_] 
        $T[SUB_f32_f32_516_update_completed_] 
        // x
        $T[R_x_514_sample_start_] 
        $T[R_x_514_sample_completed_] 
        $T[R_x_514_update_start_] 
        $T[R_x_514_update_completed_] 
        // reference to interface object
        R_x_514_sample_start_ <-& ($entry)
        R_x_514_sample_completed_ <-& (R_x_514_sample_start_)
        R_x_514_update_start_ <-& (R_x_514_sample_completed_)
        R_x_514_update_completed_ <-& (R_x_514_update_start_)
        // y
        $T[R_y_515_sample_start_] 
        $T[R_y_515_sample_completed_] 
        $T[R_y_515_update_start_] 
        $T[R_y_515_update_completed_] 
        // reference to interface object
        R_y_515_sample_start_ <-& ($entry)
        R_y_515_sample_completed_ <-& (R_y_515_sample_start_)
        R_y_515_update_start_ <-& (R_y_515_sample_completed_)
        R_y_515_update_completed_ <-& (R_y_515_update_start_)
        SUB_f32_f32_516_sample_start_ <-& (R_x_514_update_completed_)
        SUB_f32_f32_516_sample_start_ <-& (R_y_515_update_completed_)
        ;;[SUB_f32_f32_516_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_516_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_516_sample_start_ &-> (SUB_f32_f32_516_Sample)
        SUB_f32_f32_516_sample_completed_ <-& (SUB_f32_f32_516_Sample)
        SUB_f32_f32_516_sample_completed_ &-> ($null)
        SUB_f32_f32_516_update_start_ &-> (SUB_f32_f32_516_Update)
        SUB_f32_f32_516_update_completed_ <-& (SUB_f32_f32_516_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_517__entry__ |-> (assign_stmt_517)
      assign_stmt_517__exit__ <-| (assign_stmt_517)
      // control-path for merge  
      //  file prog.aa, line 200
      //---------------------   merge statement  file prog.aa, line 200  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_519_PhiReqMerge] 
      merge_stmt_519_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_519_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_519_PhiReqMerge |-> (merge_stmt_519_PhiAck)
      merge_stmt_519__exit__  <-| (merge_stmt_519_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 200  --------------------------
      assign_stmt_517__entry__ <-| (branch_block_stmt_512__entry__)
      return__ <-| (assign_stmt_517__exit__)
      merge_stmt_519__exit__ |-> (branch_block_stmt_512__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32f%body%
    //  file prog.aa, line 200
    // constant-object-declarations for block %fpsub32f%body
    //  file prog.aa, line 195
    // constant-object-declarations for block %fpsub32f
    //  file prog.aa, line 190
    // constant-declarations for block %fpsub32f%body
    //  file prog.aa, line 195
    // constant-declarations for block %fpsub32f%body%
    //  file prog.aa, line 200
    // block %fpsub32f%body
    //  file prog.aa, line 195
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 198
    // ret_val__
    // datapath-instances for block %fpsub32f%body
    //  file prog.aa, line 195
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 198
    // (x - y)
    -[SUB_f32_f32_516_inst] (x y) (ret_val__) 
    $delay SUB_f32_f32_516_inst 24
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 198
  // (x - y)
  SUB_f32_f32_516_inst <=> (branch_block_stmt_512/assign_stmt_517/SUB_f32_f32_516_Sample/rr branch_block_stmt_512/assign_stmt_517/SUB_f32_f32_516_Update/cr) (branch_block_stmt_512/assign_stmt_517/SUB_f32_f32_516_Sample/ra branch_block_stmt_512/assign_stmt_517/SUB_f32_f32_516_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 200
}
$module [fpsub32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32fi
  //  file prog.aa, line 216
  // pipe-declarations for block %fpsub32fi%body
  //  file prog.aa, line 221
  // pipe-declarations for block %fpsub32fi%body%
  //  file prog.aa, line 226
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_541] // Branch Block  file prog.aa, line 221
    {
      $P [branch_block_stmt_541__entry__]
      branch_block_stmt_541__entry__ <-| ($entry)
      $P [branch_block_stmt_541__exit__]
      branch_block_stmt_541__exit__ |-> ($exit)
      $P [assign_stmt_546__entry__] 
      $P [assign_stmt_546__exit__] 
      $P [return__]
      $P [merge_stmt_548__exit__] 
      ::[assign_stmt_546] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 224
        // Source expression
        // (x - y)
        $T[SUB_u32_u32_545_sample_start_] 
        $T[SUB_u32_u32_545_sample_completed_] 
        $T[SUB_u32_u32_545_update_start_] 
        $T[SUB_u32_u32_545_update_completed_] 
        // x
        $T[R_x_543_sample_start_] 
        $T[R_x_543_sample_completed_] 
        $T[R_x_543_update_start_] 
        $T[R_x_543_update_completed_] 
        // reference to interface object
        R_x_543_sample_start_ <-& ($entry)
        R_x_543_sample_completed_ <-& (R_x_543_sample_start_)
        R_x_543_update_start_ <-& (R_x_543_sample_completed_)
        R_x_543_update_completed_ <-& (R_x_543_update_start_)
        // y
        $T[R_y_544_sample_start_] 
        $T[R_y_544_sample_completed_] 
        $T[R_y_544_update_start_] 
        $T[R_y_544_update_completed_] 
        // reference to interface object
        R_y_544_sample_start_ <-& ($entry)
        R_y_544_sample_completed_ <-& (R_y_544_sample_start_)
        R_y_544_update_start_ <-& (R_y_544_sample_completed_)
        R_y_544_update_completed_ <-& (R_y_544_update_start_)
        SUB_u32_u32_545_sample_start_ <-& (R_x_543_update_completed_)
        SUB_u32_u32_545_sample_start_ <-& (R_y_544_update_completed_)
        ;;[SUB_u32_u32_545_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_545_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_545_sample_start_ &-> (SUB_u32_u32_545_Sample)
        SUB_u32_u32_545_sample_completed_ <-& (SUB_u32_u32_545_Sample)
        SUB_u32_u32_545_sample_completed_ &-> ($null)
        SUB_u32_u32_545_update_start_ &-> (SUB_u32_u32_545_Update)
        SUB_u32_u32_545_update_completed_ <-& (SUB_u32_u32_545_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_546__entry__ |-> (assign_stmt_546)
      assign_stmt_546__exit__ <-| (assign_stmt_546)
      // control-path for merge  
      //  file prog.aa, line 226
      //---------------------   merge statement  file prog.aa, line 226  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_548_PhiReqMerge] 
      merge_stmt_548_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_548_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_548_PhiReqMerge |-> (merge_stmt_548_PhiAck)
      merge_stmt_548__exit__  <-| (merge_stmt_548_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 226  --------------------------
      assign_stmt_546__entry__ <-| (branch_block_stmt_541__entry__)
      return__ <-| (assign_stmt_546__exit__)
      merge_stmt_548__exit__ |-> (branch_block_stmt_541__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 226
    // constant-object-declarations for block %fpsub32fi%body
    //  file prog.aa, line 221
    // constant-object-declarations for block %fpsub32fi
    //  file prog.aa, line 216
    // constant-declarations for block %fpsub32fi%body
    //  file prog.aa, line 221
    // constant-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 226
    // block %fpsub32fi%body
    //  file prog.aa, line 221
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 224
    // ret_val__
    // datapath-instances for block %fpsub32fi%body
    //  file prog.aa, line 221
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 224
    // (x - y)
    -[SUB_u32_u32_545_inst] (x y) (ret_val__) 
    $delay SUB_u32_u32_545_inst 1
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 224
  // (x - y)
  SUB_u32_u32_545_inst <=> (branch_block_stmt_541/assign_stmt_546/SUB_u32_u32_545_Sample/rr branch_block_stmt_541/assign_stmt_546/SUB_u32_u32_545_Update/cr) (branch_block_stmt_541/assign_stmt_546/SUB_u32_u32_545_Sample/ra branch_block_stmt_541/assign_stmt_546/SUB_u32_u32_545_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 226
}
$module [getBit64] 
{
  $in reg:$int<64>
  // can point into  foreign( $void )
  pos:$int<8>
  // can point into  foreign( $void )
  $out ret_val__:$int<8>
  // can point into  foreign( $void )
  // pipe-declarations for block %getBit64
  //  file prog.aa, line 31
  // pipe-declarations for block %getBit64%body
  //  file prog.aa, line 36
  // pipe-declarations for block %getBit64%body%
  //  file prog.aa, line 46
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_67] // Branch Block  file prog.aa, line 36
    {
      $P [branch_block_stmt_67__entry__]
      branch_block_stmt_67__entry__ <-| ($entry)
      $P [branch_block_stmt_67__exit__]
      branch_block_stmt_67__exit__ |-> ($exit)
      $P [assign_stmt_71_to_assign_stmt_98__entry__] 
      $P [assign_stmt_71_to_assign_stmt_98__exit__] 
      $P [return__]
      $P [merge_stmt_100__exit__] 
      ::[assign_stmt_71_to_assign_stmt_98] 
      {
        // 		iNsTr_0 := ($cast ($uint<64>) pos )
        //  file prog.aa, line 39
        // Source expression
        // ($cast ($uint<64>) pos )
        $T[type_cast_70_sample_start_] 
        $T[type_cast_70_sample_completed_] 
        $T[type_cast_70_update_start_] 
        $T[type_cast_70_update_completed_] 
        // pos
        $T[R_pos_69_sample_start_] 
        $T[R_pos_69_sample_completed_] 
        $T[R_pos_69_update_start_] 
        $T[R_pos_69_update_completed_] 
        // reference to interface object
        R_pos_69_sample_start_ <-& ($entry)
        R_pos_69_sample_completed_ <-& (R_pos_69_sample_start_)
        R_pos_69_update_start_ <-& (R_pos_69_sample_completed_)
        R_pos_69_update_completed_ <-& (R_pos_69_update_start_)
        type_cast_70_sample_start_ <-& (R_pos_69_update_completed_)
        ;;[type_cast_70_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_70_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_70_sample_start_ &-> (type_cast_70_Sample)
        type_cast_70_sample_completed_ <-& (type_cast_70_Sample)
        type_cast_70_sample_completed_ &-> ($null)
        type_cast_70_update_start_ &-> (type_cast_70_Update)
        type_cast_70_update_completed_ <-& (type_cast_70_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        //  file prog.aa, line 40
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        $T[SUB_u64_u64_76_sample_start_] 
        $T[SUB_u64_u64_76_sample_completed_] 
        $T[SUB_u64_u64_76_update_start_] 
        $T[SUB_u64_u64_76_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_75_sample_start_] 
        $T[R_iNsTr_0_75_sample_completed_] 
        $T[R_iNsTr_0_75_update_start_] 
        $T[R_iNsTr_0_75_update_completed_] 
        // implicit reference
        R_iNsTr_0_75_sample_start_ <-& (type_cast_70_update_completed_)
        R_iNsTr_0_75_sample_completed_ <-& (R_iNsTr_0_75_sample_start_)
        R_iNsTr_0_75_update_start_ <-& (R_iNsTr_0_75_sample_completed_)
        R_iNsTr_0_75_update_completed_ <-& (R_iNsTr_0_75_update_start_)
        SUB_u64_u64_76_sample_start_ <-& (R_iNsTr_0_75_update_completed_)
        ;;[SUB_u64_u64_76_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_76_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_76_sample_start_ &-> (SUB_u64_u64_76_Sample)
        SUB_u64_u64_76_sample_completed_ <-& (SUB_u64_u64_76_Sample)
        SUB_u64_u64_76_sample_completed_ &-> ($null)
        SUB_u64_u64_76_update_start_ &-> (SUB_u64_u64_76_Update)
        SUB_u64_u64_76_update_completed_ <-& (SUB_u64_u64_76_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        //  file prog.aa, line 41
        // Source expression
        // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        $T[AND_u64_u64_82_sample_start_] 
        $T[AND_u64_u64_82_sample_completed_] 
        $T[AND_u64_u64_82_update_start_] 
        $T[AND_u64_u64_82_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_79_sample_start_] 
        $T[R_iNsTr_1_79_sample_completed_] 
        $T[R_iNsTr_1_79_update_start_] 
        $T[R_iNsTr_1_79_update_completed_] 
        // implicit reference
        R_iNsTr_1_79_sample_start_ <-& (SUB_u64_u64_76_update_completed_)
        R_iNsTr_1_79_sample_completed_ <-& (R_iNsTr_1_79_sample_start_)
        R_iNsTr_1_79_update_start_ <-& (R_iNsTr_1_79_sample_completed_)
        R_iNsTr_1_79_update_completed_ <-& (R_iNsTr_1_79_update_start_)
        AND_u64_u64_82_sample_start_ <-& (R_iNsTr_1_79_update_completed_)
        ;;[AND_u64_u64_82_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_82_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_82_sample_start_ &-> (AND_u64_u64_82_Sample)
        AND_u64_u64_82_sample_completed_ <-& (AND_u64_u64_82_Sample)
        AND_u64_u64_82_sample_completed_ &-> ($null)
        AND_u64_u64_82_update_start_ &-> (AND_u64_u64_82_Update)
        AND_u64_u64_82_update_completed_ <-& (AND_u64_u64_82_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (reg << iNsTr_2)
        //  file prog.aa, line 42
        // Source expression
        // (reg << iNsTr_2)
        $T[SHL_u64_u64_87_sample_start_] 
        $T[SHL_u64_u64_87_sample_completed_] 
        $T[SHL_u64_u64_87_update_start_] 
        $T[SHL_u64_u64_87_update_completed_] 
        // reg
        $T[R_reg_85_sample_start_] 
        $T[R_reg_85_sample_completed_] 
        $T[R_reg_85_update_start_] 
        $T[R_reg_85_update_completed_] 
        // reference to interface object
        R_reg_85_sample_start_ <-& ($entry)
        R_reg_85_sample_completed_ <-& (R_reg_85_sample_start_)
        R_reg_85_update_start_ <-& (R_reg_85_sample_completed_)
        R_reg_85_update_completed_ <-& (R_reg_85_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_86_sample_start_] 
        $T[R_iNsTr_2_86_sample_completed_] 
        $T[R_iNsTr_2_86_update_start_] 
        $T[R_iNsTr_2_86_update_completed_] 
        // implicit reference
        R_iNsTr_2_86_sample_start_ <-& (AND_u64_u64_82_update_completed_)
        R_iNsTr_2_86_sample_completed_ <-& (R_iNsTr_2_86_sample_start_)
        R_iNsTr_2_86_update_start_ <-& (R_iNsTr_2_86_sample_completed_)
        R_iNsTr_2_86_update_completed_ <-& (R_iNsTr_2_86_update_start_)
        SHL_u64_u64_87_sample_start_ <-& (R_reg_85_update_completed_)
        SHL_u64_u64_87_sample_start_ <-& (R_iNsTr_2_86_update_completed_)
        ;;[SHL_u64_u64_87_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_87_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_87_sample_start_ &-> (SHL_u64_u64_87_Sample)
        SHL_u64_u64_87_sample_completed_ <-& (SHL_u64_u64_87_Sample)
        SHL_u64_u64_87_sample_completed_ &-> ($null)
        SHL_u64_u64_87_update_start_ &-> (SHL_u64_u64_87_Update)
        SHL_u64_u64_87_update_completed_ <-& (SHL_u64_u64_87_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
        //  file prog.aa, line 43
        // Source expression
        // (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
        $T[LSHR_u64_u64_93_sample_start_] 
        $T[LSHR_u64_u64_93_sample_completed_] 
        $T[LSHR_u64_u64_93_update_start_] 
        $T[LSHR_u64_u64_93_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_90_sample_start_] 
        $T[R_iNsTr_3_90_sample_completed_] 
        $T[R_iNsTr_3_90_update_start_] 
        $T[R_iNsTr_3_90_update_completed_] 
        // implicit reference
        R_iNsTr_3_90_sample_start_ <-& (SHL_u64_u64_87_update_completed_)
        R_iNsTr_3_90_sample_completed_ <-& (R_iNsTr_3_90_sample_start_)
        R_iNsTr_3_90_update_start_ <-& (R_iNsTr_3_90_sample_completed_)
        R_iNsTr_3_90_update_completed_ <-& (R_iNsTr_3_90_update_start_)
        LSHR_u64_u64_93_sample_start_ <-& (R_iNsTr_3_90_update_completed_)
        ;;[LSHR_u64_u64_93_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_93_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_93_sample_start_ &-> (LSHR_u64_u64_93_Sample)
        LSHR_u64_u64_93_sample_completed_ <-& (LSHR_u64_u64_93_Sample)
        LSHR_u64_u64_93_sample_completed_ &-> ($null)
        LSHR_u64_u64_93_update_start_ &-> (LSHR_u64_u64_93_Update)
        LSHR_u64_u64_93_update_completed_ <-& (LSHR_u64_u64_93_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		ret_val__ := ($cast ($uint<8>) iNsTr_4 )
        //  file prog.aa, line 44
        // Source expression
        // ($cast ($uint<8>) iNsTr_4 )
        $T[type_cast_97_sample_start_] 
        $T[type_cast_97_sample_completed_] 
        $T[type_cast_97_update_start_] 
        $T[type_cast_97_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_96_sample_start_] 
        $T[R_iNsTr_4_96_sample_completed_] 
        $T[R_iNsTr_4_96_update_start_] 
        $T[R_iNsTr_4_96_update_completed_] 
        // implicit reference
        R_iNsTr_4_96_sample_start_ <-& (LSHR_u64_u64_93_update_completed_)
        R_iNsTr_4_96_sample_completed_ <-& (R_iNsTr_4_96_sample_start_)
        R_iNsTr_4_96_update_start_ <-& (R_iNsTr_4_96_sample_completed_)
        R_iNsTr_4_96_update_completed_ <-& (R_iNsTr_4_96_update_start_)
        type_cast_97_sample_start_ <-& (R_iNsTr_4_96_update_completed_)
        ;;[type_cast_97_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_97_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_97_sample_start_ &-> (type_cast_97_Sample)
        type_cast_97_sample_completed_ <-& (type_cast_97_Sample)
        type_cast_97_sample_completed_ &-> ($null)
        type_cast_97_update_start_ &-> (type_cast_97_Update)
        type_cast_97_update_completed_ <-& (type_cast_97_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_71_to_assign_stmt_98__entry__ |-> (assign_stmt_71_to_assign_stmt_98)
      assign_stmt_71_to_assign_stmt_98__exit__ <-| (assign_stmt_71_to_assign_stmt_98)
      // control-path for merge  
      //  file prog.aa, line 46
      //---------------------   merge statement  file prog.aa, line 46  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_100_PhiReqMerge] 
      merge_stmt_100_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_100_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_100_PhiReqMerge |-> (merge_stmt_100_PhiAck)
      merge_stmt_100__exit__  <-| (merge_stmt_100_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 46  --------------------------
      assign_stmt_71_to_assign_stmt_98__entry__ <-| (branch_block_stmt_67__entry__)
      return__ <-| (assign_stmt_71_to_assign_stmt_98__exit__)
      merge_stmt_100__exit__ |-> (branch_block_stmt_67__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getBit64%body%
    //  file prog.aa, line 46
    // constant-object-declarations for block %getBit64%body
    //  file prog.aa, line 36
    // constant-object-declarations for block %getBit64
    //  file prog.aa, line 31
    // constant-declarations for block %getBit64%body
    //  file prog.aa, line 36
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  )
    $constant $W[type_cast_74_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111111// 63
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  )
    $constant $W[type_cast_81_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  )
    $constant $W[type_cast_92_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111111// 63
    // constant-declarations for block %getBit64%body%
    //  file prog.aa, line 46
    // block %getBit64%body
    //  file prog.aa, line 36
    // 		iNsTr_0 := ($cast ($uint<64>) pos )
    //  file prog.aa, line 39
    // iNsTr_0
    $W[iNsTr_0_71] : $int<64>
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 40
    // iNsTr_1
    $W[iNsTr_1_77] : $int<64>
    // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 41
    // iNsTr_2
    $W[iNsTr_2_83] : $int<64>
    // 		iNsTr_3 := (reg << iNsTr_2)
    //  file prog.aa, line 42
    // iNsTr_3
    $W[iNsTr_3_88] : $int<64>
    // 		iNsTr_4 := (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
    //  file prog.aa, line 43
    // iNsTr_4
    $W[iNsTr_4_94] : $int<64>
    // 		ret_val__ := ($cast ($uint<8>) iNsTr_4 )
    //  file prog.aa, line 44
    // ret_val__
    // datapath-instances for block %getBit64%body
    //  file prog.aa, line 36
    // 		iNsTr_0 := ($cast ($uint<64>) pos )
    //  file prog.aa, line 39
    // ($cast ($uint<64>) pos )
    # := [type_cast_70_inst] (pos) (iNsTr_0_71) 
    $delay type_cast_70_inst 1
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 40
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    -[SUB_u64_u64_76_inst] (type_cast_74_wire_constant iNsTr_0_71) (iNsTr_1_77) 
    $delay SUB_u64_u64_76_inst 1
    // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 41
    // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    &[AND_u64_u64_82_inst] (iNsTr_1_77 type_cast_81_wire_constant) (iNsTr_2_83) 
    $delay AND_u64_u64_82_inst 1
    // 		iNsTr_3 := (reg << iNsTr_2)
    //  file prog.aa, line 42
    // (reg << iNsTr_2)
    <<[SHL_u64_u64_87_inst] (reg iNsTr_2_83) (iNsTr_3_88) 
    $delay SHL_u64_u64_87_inst 1
    // 		iNsTr_4 := (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
    //  file prog.aa, line 43
    // (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
    >>[LSHR_u64_u64_93_inst] (iNsTr_3_88 type_cast_92_wire_constant) (iNsTr_4_94) 
    $delay LSHR_u64_u64_93_inst 1
    // 		ret_val__ := ($cast ($uint<8>) iNsTr_4 )
    //  file prog.aa, line 44
    // ($cast ($uint<8>) iNsTr_4 )
    # := [type_cast_97_inst] (iNsTr_4_94) (ret_val__) 
    $delay type_cast_97_inst 1
  }
  // end data-path
  // 		iNsTr_0 := ($cast ($uint<64>) pos )
  //  file prog.aa, line 39
  // ($cast ($uint<64>) pos )
  type_cast_70_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_70_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_70_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_70_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_70_Update/ca)
  // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  //  file prog.aa, line 40
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  SUB_u64_u64_76_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SUB_u64_u64_76_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SUB_u64_u64_76_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SUB_u64_u64_76_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SUB_u64_u64_76_Update/ca)
  // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  //  file prog.aa, line 41
  // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  AND_u64_u64_82_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/AND_u64_u64_82_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/AND_u64_u64_82_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/AND_u64_u64_82_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/AND_u64_u64_82_Update/ca)
  // 		iNsTr_3 := (reg << iNsTr_2)
  //  file prog.aa, line 42
  // (reg << iNsTr_2)
  SHL_u64_u64_87_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SHL_u64_u64_87_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SHL_u64_u64_87_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SHL_u64_u64_87_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/SHL_u64_u64_87_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
  //  file prog.aa, line 43
  // (iNsTr_3 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ))
  LSHR_u64_u64_93_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/LSHR_u64_u64_93_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/LSHR_u64_u64_93_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/LSHR_u64_u64_93_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/LSHR_u64_u64_93_Update/ca)
  // 		ret_val__ := ($cast ($uint<8>) iNsTr_4 )
  //  file prog.aa, line 44
  // ($cast ($uint<8>) iNsTr_4 )
  type_cast_97_inst <=> (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_97_Sample/rr branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_97_Update/cr) (branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_97_Sample/ra branch_block_stmt_67/assign_stmt_71_to_assign_stmt_98/type_cast_97_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 46
}
$module [getSlice64] 
{
  $in reg:$int<64>
  // can point into  foreign( $void )
  h:$int<8>
  // can point into  foreign( $void )
  l:$int<8>
  // can point into  foreign( $void )
  $out ret_val__:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %getSlice64
  //  file prog.aa, line 11
  // pipe-declarations for block %getSlice64%body
  //  file prog.aa, line 16
  // pipe-declarations for block %getSlice64%body%
  //  file prog.aa, line 28
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_17] // Branch Block  file prog.aa, line 16
    {
      $P [branch_block_stmt_17__entry__]
      branch_block_stmt_17__entry__ <-| ($entry)
      $P [branch_block_stmt_17__exit__]
      branch_block_stmt_17__exit__ |-> ($exit)
      $P [assign_stmt_21_to_assign_stmt_58__entry__] 
      $P [assign_stmt_21_to_assign_stmt_58__exit__] 
      $P [return__]
      $P [merge_stmt_60__exit__] 
      ::[assign_stmt_21_to_assign_stmt_58] 
      {
        // 		iNsTr_0 := ($cast ($uint<64>) h )
        //  file prog.aa, line 19
        // Source expression
        // ($cast ($uint<64>) h )
        $T[type_cast_20_sample_start_] 
        $T[type_cast_20_sample_completed_] 
        $T[type_cast_20_update_start_] 
        $T[type_cast_20_update_completed_] 
        // h
        $T[R_h_19_sample_start_] 
        $T[R_h_19_sample_completed_] 
        $T[R_h_19_update_start_] 
        $T[R_h_19_update_completed_] 
        // reference to interface object
        R_h_19_sample_start_ <-& ($entry)
        R_h_19_sample_completed_ <-& (R_h_19_sample_start_)
        R_h_19_update_start_ <-& (R_h_19_sample_completed_)
        R_h_19_update_completed_ <-& (R_h_19_update_start_)
        type_cast_20_sample_start_ <-& (R_h_19_update_completed_)
        ;;[type_cast_20_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_20_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_20_sample_start_ &-> (type_cast_20_Sample)
        type_cast_20_sample_completed_ <-& (type_cast_20_Sample)
        type_cast_20_sample_completed_ &-> ($null)
        type_cast_20_update_start_ &-> (type_cast_20_Update)
        type_cast_20_update_completed_ <-& (type_cast_20_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        //  file prog.aa, line 20
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        $T[SUB_u64_u64_26_sample_start_] 
        $T[SUB_u64_u64_26_sample_completed_] 
        $T[SUB_u64_u64_26_update_start_] 
        $T[SUB_u64_u64_26_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_25_sample_start_] 
        $T[R_iNsTr_0_25_sample_completed_] 
        $T[R_iNsTr_0_25_update_start_] 
        $T[R_iNsTr_0_25_update_completed_] 
        // implicit reference
        R_iNsTr_0_25_sample_start_ <-& (type_cast_20_update_completed_)
        R_iNsTr_0_25_sample_completed_ <-& (R_iNsTr_0_25_sample_start_)
        R_iNsTr_0_25_update_start_ <-& (R_iNsTr_0_25_sample_completed_)
        R_iNsTr_0_25_update_completed_ <-& (R_iNsTr_0_25_update_start_)
        SUB_u64_u64_26_sample_start_ <-& (R_iNsTr_0_25_update_completed_)
        ;;[SUB_u64_u64_26_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_26_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_26_sample_start_ &-> (SUB_u64_u64_26_Sample)
        SUB_u64_u64_26_sample_completed_ <-& (SUB_u64_u64_26_Sample)
        SUB_u64_u64_26_sample_completed_ &-> ($null)
        SUB_u64_u64_26_update_start_ &-> (SUB_u64_u64_26_Update)
        SUB_u64_u64_26_update_completed_ <-& (SUB_u64_u64_26_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        //  file prog.aa, line 21
        // Source expression
        // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        $T[AND_u64_u64_32_sample_start_] 
        $T[AND_u64_u64_32_sample_completed_] 
        $T[AND_u64_u64_32_update_start_] 
        $T[AND_u64_u64_32_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_29_sample_start_] 
        $T[R_iNsTr_1_29_sample_completed_] 
        $T[R_iNsTr_1_29_update_start_] 
        $T[R_iNsTr_1_29_update_completed_] 
        // implicit reference
        R_iNsTr_1_29_sample_start_ <-& (SUB_u64_u64_26_update_completed_)
        R_iNsTr_1_29_sample_completed_ <-& (R_iNsTr_1_29_sample_start_)
        R_iNsTr_1_29_update_start_ <-& (R_iNsTr_1_29_sample_completed_)
        R_iNsTr_1_29_update_completed_ <-& (R_iNsTr_1_29_update_start_)
        AND_u64_u64_32_sample_start_ <-& (R_iNsTr_1_29_update_completed_)
        ;;[AND_u64_u64_32_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_32_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_32_sample_start_ &-> (AND_u64_u64_32_Sample)
        AND_u64_u64_32_sample_completed_ <-& (AND_u64_u64_32_Sample)
        AND_u64_u64_32_sample_completed_ &-> ($null)
        AND_u64_u64_32_update_start_ &-> (AND_u64_u64_32_Update)
        AND_u64_u64_32_update_completed_ <-& (AND_u64_u64_32_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (reg << iNsTr_2)
        //  file prog.aa, line 22
        // Source expression
        // (reg << iNsTr_2)
        $T[SHL_u64_u64_37_sample_start_] 
        $T[SHL_u64_u64_37_sample_completed_] 
        $T[SHL_u64_u64_37_update_start_] 
        $T[SHL_u64_u64_37_update_completed_] 
        // reg
        $T[R_reg_35_sample_start_] 
        $T[R_reg_35_sample_completed_] 
        $T[R_reg_35_update_start_] 
        $T[R_reg_35_update_completed_] 
        // reference to interface object
        R_reg_35_sample_start_ <-& ($entry)
        R_reg_35_sample_completed_ <-& (R_reg_35_sample_start_)
        R_reg_35_update_start_ <-& (R_reg_35_sample_completed_)
        R_reg_35_update_completed_ <-& (R_reg_35_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_36_sample_start_] 
        $T[R_iNsTr_2_36_sample_completed_] 
        $T[R_iNsTr_2_36_update_start_] 
        $T[R_iNsTr_2_36_update_completed_] 
        // implicit reference
        R_iNsTr_2_36_sample_start_ <-& (AND_u64_u64_32_update_completed_)
        R_iNsTr_2_36_sample_completed_ <-& (R_iNsTr_2_36_sample_start_)
        R_iNsTr_2_36_update_start_ <-& (R_iNsTr_2_36_sample_completed_)
        R_iNsTr_2_36_update_completed_ <-& (R_iNsTr_2_36_update_start_)
        SHL_u64_u64_37_sample_start_ <-& (R_reg_35_update_completed_)
        SHL_u64_u64_37_sample_start_ <-& (R_iNsTr_2_36_update_completed_)
        ;;[SHL_u64_u64_37_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_37_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_37_sample_start_ &-> (SHL_u64_u64_37_Sample)
        SHL_u64_u64_37_sample_completed_ <-& (SHL_u64_u64_37_Sample)
        SHL_u64_u64_37_sample_completed_ &-> ($null)
        SHL_u64_u64_37_update_start_ &-> (SHL_u64_u64_37_Update)
        SHL_u64_u64_37_update_completed_ <-& (SHL_u64_u64_37_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ($cast ($uint<64>) l )
        //  file prog.aa, line 23
        // Source expression
        // ($cast ($uint<64>) l )
        $T[type_cast_41_sample_start_] 
        $T[type_cast_41_sample_completed_] 
        $T[type_cast_41_update_start_] 
        $T[type_cast_41_update_completed_] 
        // l
        $T[R_l_40_sample_start_] 
        $T[R_l_40_sample_completed_] 
        $T[R_l_40_update_start_] 
        $T[R_l_40_update_completed_] 
        // reference to interface object
        R_l_40_sample_start_ <-& ($entry)
        R_l_40_sample_completed_ <-& (R_l_40_sample_start_)
        R_l_40_update_start_ <-& (R_l_40_sample_completed_)
        R_l_40_update_completed_ <-& (R_l_40_update_start_)
        type_cast_41_sample_start_ <-& (R_l_40_update_completed_)
        ;;[type_cast_41_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_41_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_41_sample_start_ &-> (type_cast_41_Sample)
        type_cast_41_sample_completed_ <-& (type_cast_41_Sample)
        type_cast_41_sample_completed_ &-> ($null)
        type_cast_41_update_start_ &-> (type_cast_41_Update)
        type_cast_41_update_completed_ <-& (type_cast_41_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_1 + iNsTr_4)
        //  file prog.aa, line 24
        // Source expression
        // (iNsTr_1 + iNsTr_4)
        $T[ADD_u64_u64_46_sample_start_] 
        $T[ADD_u64_u64_46_sample_completed_] 
        $T[ADD_u64_u64_46_update_start_] 
        $T[ADD_u64_u64_46_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_44_sample_start_] 
        $T[R_iNsTr_1_44_sample_completed_] 
        $T[R_iNsTr_1_44_update_start_] 
        $T[R_iNsTr_1_44_update_completed_] 
        // implicit reference
        R_iNsTr_1_44_sample_start_ <-& (SUB_u64_u64_26_update_completed_)
        R_iNsTr_1_44_sample_completed_ <-& (R_iNsTr_1_44_sample_start_)
        R_iNsTr_1_44_update_start_ <-& (R_iNsTr_1_44_sample_completed_)
        R_iNsTr_1_44_update_completed_ <-& (R_iNsTr_1_44_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_45_sample_start_] 
        $T[R_iNsTr_4_45_sample_completed_] 
        $T[R_iNsTr_4_45_update_start_] 
        $T[R_iNsTr_4_45_update_completed_] 
        // implicit reference
        R_iNsTr_4_45_sample_start_ <-& (type_cast_41_update_completed_)
        R_iNsTr_4_45_sample_completed_ <-& (R_iNsTr_4_45_sample_start_)
        R_iNsTr_4_45_update_start_ <-& (R_iNsTr_4_45_sample_completed_)
        R_iNsTr_4_45_update_completed_ <-& (R_iNsTr_4_45_update_start_)
        ADD_u64_u64_46_sample_start_ <-& (R_iNsTr_1_44_update_completed_)
        ADD_u64_u64_46_sample_start_ <-& (R_iNsTr_4_45_update_completed_)
        ;;[ADD_u64_u64_46_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_46_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_46_sample_start_ &-> (ADD_u64_u64_46_Sample)
        ADD_u64_u64_46_sample_completed_ <-& (ADD_u64_u64_46_Sample)
        ADD_u64_u64_46_sample_completed_ &-> ($null)
        ADD_u64_u64_46_update_start_ &-> (ADD_u64_u64_46_Update)
        ADD_u64_u64_46_update_completed_ <-& (ADD_u64_u64_46_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        //  file prog.aa, line 25
        // Source expression
        // (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        $T[AND_u64_u64_52_sample_start_] 
        $T[AND_u64_u64_52_sample_completed_] 
        $T[AND_u64_u64_52_update_start_] 
        $T[AND_u64_u64_52_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_49_sample_start_] 
        $T[R_iNsTr_5_49_sample_completed_] 
        $T[R_iNsTr_5_49_update_start_] 
        $T[R_iNsTr_5_49_update_completed_] 
        // implicit reference
        R_iNsTr_5_49_sample_start_ <-& (ADD_u64_u64_46_update_completed_)
        R_iNsTr_5_49_sample_completed_ <-& (R_iNsTr_5_49_sample_start_)
        R_iNsTr_5_49_update_start_ <-& (R_iNsTr_5_49_sample_completed_)
        R_iNsTr_5_49_update_completed_ <-& (R_iNsTr_5_49_update_start_)
        AND_u64_u64_52_sample_start_ <-& (R_iNsTr_5_49_update_completed_)
        ;;[AND_u64_u64_52_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_52_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_52_sample_start_ &-> (AND_u64_u64_52_Sample)
        AND_u64_u64_52_sample_completed_ <-& (AND_u64_u64_52_Sample)
        AND_u64_u64_52_sample_completed_ &-> ($null)
        AND_u64_u64_52_update_start_ &-> (AND_u64_u64_52_Update)
        AND_u64_u64_52_update_completed_ <-& (AND_u64_u64_52_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		ret_val__ := (iNsTr_3 >> iNsTr_6)
        //  file prog.aa, line 26
        // Source expression
        // (iNsTr_3 >> iNsTr_6)
        $T[LSHR_u64_u64_57_sample_start_] 
        $T[LSHR_u64_u64_57_sample_completed_] 
        $T[LSHR_u64_u64_57_update_start_] 
        $T[LSHR_u64_u64_57_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_55_sample_start_] 
        $T[R_iNsTr_3_55_sample_completed_] 
        $T[R_iNsTr_3_55_update_start_] 
        $T[R_iNsTr_3_55_update_completed_] 
        // implicit reference
        R_iNsTr_3_55_sample_start_ <-& (SHL_u64_u64_37_update_completed_)
        R_iNsTr_3_55_sample_completed_ <-& (R_iNsTr_3_55_sample_start_)
        R_iNsTr_3_55_update_start_ <-& (R_iNsTr_3_55_sample_completed_)
        R_iNsTr_3_55_update_completed_ <-& (R_iNsTr_3_55_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_56_sample_start_] 
        $T[R_iNsTr_6_56_sample_completed_] 
        $T[R_iNsTr_6_56_update_start_] 
        $T[R_iNsTr_6_56_update_completed_] 
        // implicit reference
        R_iNsTr_6_56_sample_start_ <-& (AND_u64_u64_52_update_completed_)
        R_iNsTr_6_56_sample_completed_ <-& (R_iNsTr_6_56_sample_start_)
        R_iNsTr_6_56_update_start_ <-& (R_iNsTr_6_56_sample_completed_)
        R_iNsTr_6_56_update_completed_ <-& (R_iNsTr_6_56_update_start_)
        LSHR_u64_u64_57_sample_start_ <-& (R_iNsTr_3_55_update_completed_)
        LSHR_u64_u64_57_sample_start_ <-& (R_iNsTr_6_56_update_completed_)
        ;;[LSHR_u64_u64_57_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_57_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_57_sample_start_ &-> (LSHR_u64_u64_57_Sample)
        LSHR_u64_u64_57_sample_completed_ <-& (LSHR_u64_u64_57_Sample)
        LSHR_u64_u64_57_sample_completed_ &-> ($null)
        LSHR_u64_u64_57_update_start_ &-> (LSHR_u64_u64_57_Update)
        LSHR_u64_u64_57_update_completed_ <-& (LSHR_u64_u64_57_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_21_to_assign_stmt_58__entry__ |-> (assign_stmt_21_to_assign_stmt_58)
      assign_stmt_21_to_assign_stmt_58__exit__ <-| (assign_stmt_21_to_assign_stmt_58)
      // control-path for merge  
      //  file prog.aa, line 28
      //---------------------   merge statement  file prog.aa, line 28  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_60_PhiReqMerge] 
      merge_stmt_60_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_60_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_60_PhiReqMerge |-> (merge_stmt_60_PhiAck)
      merge_stmt_60__exit__  <-| (merge_stmt_60_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 28  --------------------------
      assign_stmt_21_to_assign_stmt_58__entry__ <-| (branch_block_stmt_17__entry__)
      return__ <-| (assign_stmt_21_to_assign_stmt_58__exit__)
      merge_stmt_60__exit__ |-> (branch_block_stmt_17__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getSlice64%body%
    //  file prog.aa, line 28
    // constant-object-declarations for block %getSlice64%body
    //  file prog.aa, line 16
    // constant-object-declarations for block %getSlice64
    //  file prog.aa, line 11
    // constant-declarations for block %getSlice64%body
    //  file prog.aa, line 16
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  )
    $constant $W[type_cast_24_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111111// 63
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  )
    $constant $W[type_cast_31_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  )
    $constant $W[type_cast_51_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111111// -1
    // constant-declarations for block %getSlice64%body%
    //  file prog.aa, line 28
    // block %getSlice64%body
    //  file prog.aa, line 16
    // 		iNsTr_0 := ($cast ($uint<64>) h )
    //  file prog.aa, line 19
    // iNsTr_0
    $W[iNsTr_0_21] : $int<64>
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 20
    // iNsTr_1
    $W[iNsTr_1_27] : $int<64>
    // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 21
    // iNsTr_2
    $W[iNsTr_2_33] : $int<64>
    // 		iNsTr_3 := (reg << iNsTr_2)
    //  file prog.aa, line 22
    // iNsTr_3
    $W[iNsTr_3_38] : $int<64>
    // 		iNsTr_4 := ($cast ($uint<64>) l )
    //  file prog.aa, line 23
    // iNsTr_4
    $W[iNsTr_4_42] : $int<64>
    // 		iNsTr_5 := (iNsTr_1 + iNsTr_4)
    //  file prog.aa, line 24
    // iNsTr_5
    $W[iNsTr_5_47] : $int<64>
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 25
    // iNsTr_6
    $W[iNsTr_6_53] : $int<64>
    // 		ret_val__ := (iNsTr_3 >> iNsTr_6)
    //  file prog.aa, line 26
    // ret_val__
    // datapath-instances for block %getSlice64%body
    //  file prog.aa, line 16
    // 		iNsTr_0 := ($cast ($uint<64>) h )
    //  file prog.aa, line 19
    // ($cast ($uint<64>) h )
    # := [type_cast_20_inst] (h) (iNsTr_0_21) 
    $delay type_cast_20_inst 1
    // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 20
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    -[SUB_u64_u64_26_inst] (type_cast_24_wire_constant iNsTr_0_21) (iNsTr_1_27) 
    $delay SUB_u64_u64_26_inst 1
    // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 21
    // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    &[AND_u64_u64_32_inst] (iNsTr_1_27 type_cast_31_wire_constant) (iNsTr_2_33) 
    $delay AND_u64_u64_32_inst 1
    // 		iNsTr_3 := (reg << iNsTr_2)
    //  file prog.aa, line 22
    // (reg << iNsTr_2)
    <<[SHL_u64_u64_37_inst] (reg iNsTr_2_33) (iNsTr_3_38) 
    $delay SHL_u64_u64_37_inst 1
    // 		iNsTr_4 := ($cast ($uint<64>) l )
    //  file prog.aa, line 23
    // ($cast ($uint<64>) l )
    # := [type_cast_41_inst] (l) (iNsTr_4_42) 
    $delay type_cast_41_inst 1
    // 		iNsTr_5 := (iNsTr_1 + iNsTr_4)
    //  file prog.aa, line 24
    // (iNsTr_1 + iNsTr_4)
    +[ADD_u64_u64_46_inst] (iNsTr_1_27 iNsTr_4_42) (iNsTr_5_47) 
    $delay ADD_u64_u64_46_inst 1
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 25
    // (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    &[AND_u64_u64_52_inst] (iNsTr_5_47 type_cast_51_wire_constant) (iNsTr_6_53) 
    $delay AND_u64_u64_52_inst 1
    // 		ret_val__ := (iNsTr_3 >> iNsTr_6)
    //  file prog.aa, line 26
    // (iNsTr_3 >> iNsTr_6)
    >>[LSHR_u64_u64_57_inst] (iNsTr_3_38 iNsTr_6_53) (ret_val__) 
    $delay LSHR_u64_u64_57_inst 1
  }
  // end data-path
  // 		iNsTr_0 := ($cast ($uint<64>) h )
  //  file prog.aa, line 19
  // ($cast ($uint<64>) h )
  type_cast_20_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_20_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_20_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_20_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_20_Update/ca)
  // 		iNsTr_1 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  //  file prog.aa, line 20
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  SUB_u64_u64_26_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SUB_u64_u64_26_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SUB_u64_u64_26_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SUB_u64_u64_26_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SUB_u64_u64_26_Update/ca)
  // 		iNsTr_2 := (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  //  file prog.aa, line 21
  // (iNsTr_1 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  AND_u64_u64_32_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_32_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_32_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_32_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_32_Update/ca)
  // 		iNsTr_3 := (reg << iNsTr_2)
  //  file prog.aa, line 22
  // (reg << iNsTr_2)
  SHL_u64_u64_37_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SHL_u64_u64_37_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SHL_u64_u64_37_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SHL_u64_u64_37_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/SHL_u64_u64_37_Update/ca)
  // 		iNsTr_4 := ($cast ($uint<64>) l )
  //  file prog.aa, line 23
  // ($cast ($uint<64>) l )
  type_cast_41_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_41_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_41_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_41_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/type_cast_41_Update/ca)
  // 		iNsTr_5 := (iNsTr_1 + iNsTr_4)
  //  file prog.aa, line 24
  // (iNsTr_1 + iNsTr_4)
  ADD_u64_u64_46_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/ADD_u64_u64_46_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/ADD_u64_u64_46_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/ADD_u64_u64_46_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/ADD_u64_u64_46_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  //  file prog.aa, line 25
  // (iNsTr_5 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  AND_u64_u64_52_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_52_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_52_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_52_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/AND_u64_u64_52_Update/ca)
  // 		ret_val__ := (iNsTr_3 >> iNsTr_6)
  //  file prog.aa, line 26
  // (iNsTr_3 >> iNsTr_6)
  LSHR_u64_u64_57_inst <=> (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/LSHR_u64_u64_57_Sample/rr branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/LSHR_u64_u64_57_Update/cr) (branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/LSHR_u64_u64_57_Sample/ra branch_block_stmt_17/assign_stmt_21_to_assign_stmt_58/LSHR_u64_u64_57_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 28
}
$module [iq_err_calc] 
{
  $in Lr:$float<8,23>
  // can point into  foreign( $void )
  torque_ref:$float<8,23>
  // can point into  foreign( $void )
  constant_1:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %iq_err_calc
  //  file prog.aa, line 335
  // pipe-declarations for block %iq_err_calc%body
  //  file prog.aa, line 340
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 356
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 365
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 387
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 400
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 409
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_890] // Branch Block  file prog.aa, line 340
    {
      $P [branch_block_stmt_890__entry__]
      branch_block_stmt_890__entry__ <-| ($entry)
      $P [branch_block_stmt_890__exit__]
      branch_block_stmt_890__exit__ |-> ($exit)
      $P [assign_stmt_896_to_assign_stmt_940__entry__] 
      $P [assign_stmt_896_to_assign_stmt_940__exit__] 
      $P [if_stmt_941__entry__] 
      $P [if_stmt_941__exit__] 
      $P [merge_stmt_947__entry__] 
      $P [merge_stmt_947__exit__] 
      $P [assign_stmt_953_to_assign_stmt_976__entry__] 
      $P [assign_stmt_953_to_assign_stmt_976__exit__] 
      $P [bb_1_bb_2]
      $P [merge_stmt_978__exit__] 
      $P [assign_stmt_992_to_assign_stmt_1073__entry__] 
      $P [assign_stmt_992_to_assign_stmt_1073__exit__] 
      $P [if_stmt_1074__entry__] 
      $P [if_stmt_1074__exit__] 
      $P [merge_stmt_1080__entry__] 
      $P [merge_stmt_1080__exit__] 
      $P [assign_stmt_1085_to_assign_stmt_1126__entry__] 
      $P [assign_stmt_1085_to_assign_stmt_1126__exit__] 
      $P [bb_3_fdiv32x_xexit]
      $P [merge_stmt_1128__exit__] 
      $P [assign_stmt_1141_to_assign_stmt_1160__entry__] 
      $P [assign_stmt_1141_to_assign_stmt_1160__exit__] 
      $P [return__]
      $P [merge_stmt_1162__exit__] 
      ::[assign_stmt_896_to_assign_stmt_940] 
      {
        // 		iNsTr_0 := (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
        //  file prog.aa, line 343
        // Source expression
        // (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
        $T[MUL_f32_f32_895_sample_start_] 
        $T[MUL_f32_f32_895_sample_completed_] 
        $T[MUL_f32_f32_895_update_start_] 
        $T[MUL_f32_f32_895_update_completed_] 
        // Lr
        $T[R_Lr_892_sample_start_] 
        $T[R_Lr_892_sample_completed_] 
        $T[R_Lr_892_update_start_] 
        $T[R_Lr_892_update_completed_] 
        // reference to interface object
        R_Lr_892_sample_start_ <-& ($entry)
        R_Lr_892_sample_completed_ <-& (R_Lr_892_sample_start_)
        R_Lr_892_update_start_ <-& (R_Lr_892_sample_completed_)
        R_Lr_892_update_completed_ <-& (R_Lr_892_update_start_)
        MUL_f32_f32_895_sample_start_ <-& (R_Lr_892_update_completed_)
        ;;[MUL_f32_f32_895_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_895_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_895_sample_start_ &-> (MUL_f32_f32_895_Sample)
        MUL_f32_f32_895_sample_completed_ <-& (MUL_f32_f32_895_Sample)
        MUL_f32_f32_895_sample_completed_ &-> ($null)
        MUL_f32_f32_895_update_start_ &-> (MUL_f32_f32_895_Update)
        MUL_f32_f32_895_update_completed_ <-& (MUL_f32_f32_895_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 * torque_ref)
        //  file prog.aa, line 344
        // Source expression
        // (iNsTr_0 * torque_ref)
        $T[MUL_f32_f32_900_sample_start_] 
        $T[MUL_f32_f32_900_sample_completed_] 
        $T[MUL_f32_f32_900_update_start_] 
        $T[MUL_f32_f32_900_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_898_sample_start_] 
        $T[R_iNsTr_0_898_sample_completed_] 
        $T[R_iNsTr_0_898_update_start_] 
        $T[R_iNsTr_0_898_update_completed_] 
        // implicit reference
        R_iNsTr_0_898_sample_start_ <-& (MUL_f32_f32_895_update_completed_)
        R_iNsTr_0_898_sample_completed_ <-& (R_iNsTr_0_898_sample_start_)
        R_iNsTr_0_898_update_start_ <-& (R_iNsTr_0_898_sample_completed_)
        R_iNsTr_0_898_update_completed_ <-& (R_iNsTr_0_898_update_start_)
        // torque_ref
        $T[R_torque_ref_899_sample_start_] 
        $T[R_torque_ref_899_sample_completed_] 
        $T[R_torque_ref_899_update_start_] 
        $T[R_torque_ref_899_update_completed_] 
        // reference to interface object
        R_torque_ref_899_sample_start_ <-& ($entry)
        R_torque_ref_899_sample_completed_ <-& (R_torque_ref_899_sample_start_)
        R_torque_ref_899_update_start_ <-& (R_torque_ref_899_sample_completed_)
        R_torque_ref_899_update_completed_ <-& (R_torque_ref_899_update_start_)
        MUL_f32_f32_900_sample_start_ <-& (R_iNsTr_0_898_update_completed_)
        MUL_f32_f32_900_sample_start_ <-& (R_torque_ref_899_update_completed_)
        ;;[MUL_f32_f32_900_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_900_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_900_sample_start_ &-> (MUL_f32_f32_900_Sample)
        MUL_f32_f32_900_sample_completed_ <-& (MUL_f32_f32_900_Sample)
        MUL_f32_f32_900_sample_completed_ &-> ($null)
        MUL_f32_f32_900_update_start_ &-> (MUL_f32_f32_900_Update)
        MUL_f32_f32_900_update_completed_ <-& (MUL_f32_f32_900_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (constant_1 * flux_rotor)
        //  file prog.aa, line 345
        // Source expression
        // (constant_1 * flux_rotor)
        $T[MUL_f32_f32_905_sample_start_] 
        $T[MUL_f32_f32_905_sample_completed_] 
        $T[MUL_f32_f32_905_update_start_] 
        $T[MUL_f32_f32_905_update_completed_] 
        // constant_1
        $T[R_constant_1_903_sample_start_] 
        $T[R_constant_1_903_sample_completed_] 
        $T[R_constant_1_903_update_start_] 
        $T[R_constant_1_903_update_completed_] 
        // reference to interface object
        R_constant_1_903_sample_start_ <-& ($entry)
        R_constant_1_903_sample_completed_ <-& (R_constant_1_903_sample_start_)
        R_constant_1_903_update_start_ <-& (R_constant_1_903_sample_completed_)
        R_constant_1_903_update_completed_ <-& (R_constant_1_903_update_start_)
        // flux_rotor
        $T[R_flux_rotor_904_sample_start_] 
        $T[R_flux_rotor_904_sample_completed_] 
        $T[R_flux_rotor_904_update_start_] 
        $T[R_flux_rotor_904_update_completed_] 
        // reference to interface object
        R_flux_rotor_904_sample_start_ <-& ($entry)
        R_flux_rotor_904_sample_completed_ <-& (R_flux_rotor_904_sample_start_)
        R_flux_rotor_904_update_start_ <-& (R_flux_rotor_904_sample_completed_)
        R_flux_rotor_904_update_completed_ <-& (R_flux_rotor_904_update_start_)
        MUL_f32_f32_905_sample_start_ <-& (R_constant_1_903_update_completed_)
        MUL_f32_f32_905_sample_start_ <-& (R_flux_rotor_904_update_completed_)
        ;;[MUL_f32_f32_905_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_905_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_905_sample_start_ &-> (MUL_f32_f32_905_Sample)
        MUL_f32_f32_905_sample_completed_ <-& (MUL_f32_f32_905_Sample)
        MUL_f32_f32_905_sample_completed_ &-> ($null)
        MUL_f32_f32_905_update_start_ &-> (MUL_f32_f32_905_Update)
        MUL_f32_f32_905_update_completed_ <-& (MUL_f32_f32_905_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
        //  file prog.aa, line 346
        // Source expression
        // ($cast ($float<11,52>) iNsTr_1 )
        $T[type_cast_909_sample_start_] 
        $T[type_cast_909_sample_completed_] 
        $T[type_cast_909_update_start_] 
        $T[type_cast_909_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_908_sample_start_] 
        $T[R_iNsTr_1_908_sample_completed_] 
        $T[R_iNsTr_1_908_update_start_] 
        $T[R_iNsTr_1_908_update_completed_] 
        // implicit reference
        R_iNsTr_1_908_sample_start_ <-& (MUL_f32_f32_900_update_completed_)
        R_iNsTr_1_908_sample_completed_ <-& (R_iNsTr_1_908_sample_start_)
        R_iNsTr_1_908_update_start_ <-& (R_iNsTr_1_908_sample_completed_)
        R_iNsTr_1_908_update_completed_ <-& (R_iNsTr_1_908_update_start_)
        type_cast_909_sample_start_ <-& (R_iNsTr_1_908_update_completed_)
        ;;[type_cast_909_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_909_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_909_sample_start_ &-> (type_cast_909_Sample)
        type_cast_909_sample_completed_ <-& (type_cast_909_Sample)
        type_cast_909_sample_completed_ &-> ($null)
        type_cast_909_update_start_ &-> (type_cast_909_Update)
        type_cast_909_update_completed_ <-& (type_cast_909_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := ($cast ($float<11,52>) iNsTr_2 )
        //  file prog.aa, line 347
        // Source expression
        // ($cast ($float<11,52>) iNsTr_2 )
        $T[type_cast_913_sample_start_] 
        $T[type_cast_913_sample_completed_] 
        $T[type_cast_913_update_start_] 
        $T[type_cast_913_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_912_sample_start_] 
        $T[R_iNsTr_2_912_sample_completed_] 
        $T[R_iNsTr_2_912_update_start_] 
        $T[R_iNsTr_2_912_update_completed_] 
        // implicit reference
        R_iNsTr_2_912_sample_start_ <-& (MUL_f32_f32_905_update_completed_)
        R_iNsTr_2_912_sample_completed_ <-& (R_iNsTr_2_912_sample_start_)
        R_iNsTr_2_912_update_start_ <-& (R_iNsTr_2_912_sample_completed_)
        R_iNsTr_2_912_update_completed_ <-& (R_iNsTr_2_912_update_start_)
        type_cast_913_sample_start_ <-& (R_iNsTr_2_912_update_completed_)
        ;;[type_cast_913_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_913_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_913_sample_start_ &-> (type_cast_913_Sample)
        type_cast_913_sample_completed_ <-& (type_cast_913_Sample)
        type_cast_913_sample_completed_ &-> ($null)
        type_cast_913_update_start_ &-> (type_cast_913_Update)
        type_cast_913_update_completed_ <-& (type_cast_913_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_3 )
        //  file prog.aa, line 348
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_3 )
        $T[type_cast_917_sample_start_] 
        $T[type_cast_917_sample_completed_] 
        $T[type_cast_917_update_start_] 
        $T[type_cast_917_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_916_sample_start_] 
        $T[R_iNsTr_3_916_sample_completed_] 
        $T[R_iNsTr_3_916_update_start_] 
        $T[R_iNsTr_3_916_update_completed_] 
        // implicit reference
        R_iNsTr_3_916_sample_start_ <-& (type_cast_909_update_completed_)
        R_iNsTr_3_916_sample_completed_ <-& (R_iNsTr_3_916_sample_start_)
        R_iNsTr_3_916_update_start_ <-& (R_iNsTr_3_916_sample_completed_)
        R_iNsTr_3_916_update_completed_ <-& (R_iNsTr_3_916_update_start_)
        type_cast_917_sample_start_ <-& (R_iNsTr_3_916_update_completed_)
        ;;[type_cast_917_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_917_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_917_sample_start_ &-> (type_cast_917_Sample)
        type_cast_917_sample_completed_ <-& (type_cast_917_Sample)
        type_cast_917_sample_completed_ &-> ($null)
        type_cast_917_update_start_ &-> (type_cast_917_Update)
        type_cast_917_update_completed_ <-& (type_cast_917_Update)
        // Target expression
        // (as target) tmp17x_xi
        // tmp17x_xi
        // implicit reference
        // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_4 )
        //  file prog.aa, line 349
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_4 )
        $T[type_cast_921_sample_start_] 
        $T[type_cast_921_sample_completed_] 
        $T[type_cast_921_update_start_] 
        $T[type_cast_921_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_920_sample_start_] 
        $T[R_iNsTr_4_920_sample_completed_] 
        $T[R_iNsTr_4_920_update_start_] 
        $T[R_iNsTr_4_920_update_completed_] 
        // implicit reference
        R_iNsTr_4_920_sample_start_ <-& (type_cast_913_update_completed_)
        R_iNsTr_4_920_sample_completed_ <-& (R_iNsTr_4_920_sample_start_)
        R_iNsTr_4_920_update_start_ <-& (R_iNsTr_4_920_sample_completed_)
        R_iNsTr_4_920_update_completed_ <-& (R_iNsTr_4_920_update_start_)
        type_cast_921_sample_start_ <-& (R_iNsTr_4_920_update_completed_)
        ;;[type_cast_921_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_921_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_921_sample_start_ &-> (type_cast_921_Sample)
        type_cast_921_sample_completed_ <-& (type_cast_921_Sample)
        type_cast_921_sample_completed_ &-> ($null)
        type_cast_921_update_start_ &-> (type_cast_921_Update)
        type_cast_921_update_completed_ <-& (type_cast_921_Update)
        // Target expression
        // (as target) tmp15x_xi
        // tmp15x_xi
        // implicit reference
        // 		iNsTr_5 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 350
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_927_sample_start_] 
        $T[AND_u64_u64_927_sample_completed_] 
        $T[AND_u64_u64_927_update_start_] 
        $T[AND_u64_u64_927_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_924_sample_start_] 
        $T[R_tmp17x_xi_924_sample_completed_] 
        $T[R_tmp17x_xi_924_update_start_] 
        $T[R_tmp17x_xi_924_update_completed_] 
        // implicit reference
        R_tmp17x_xi_924_sample_start_ <-& (type_cast_917_update_completed_)
        R_tmp17x_xi_924_sample_completed_ <-& (R_tmp17x_xi_924_sample_start_)
        R_tmp17x_xi_924_update_start_ <-& (R_tmp17x_xi_924_sample_completed_)
        R_tmp17x_xi_924_update_completed_ <-& (R_tmp17x_xi_924_update_start_)
        AND_u64_u64_927_sample_start_ <-& (R_tmp17x_xi_924_update_completed_)
        ;;[AND_u64_u64_927_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_927_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_927_sample_start_ &-> (AND_u64_u64_927_Sample)
        AND_u64_u64_927_sample_completed_ <-& (AND_u64_u64_927_Sample)
        AND_u64_u64_927_sample_completed_ &-> ($null)
        AND_u64_u64_927_update_start_ &-> (AND_u64_u64_927_Update)
        AND_u64_u64_927_update_completed_ <-& (AND_u64_u64_927_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 351
        // Source expression
        // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_933_sample_start_] 
        $T[AND_u64_u64_933_sample_completed_] 
        $T[AND_u64_u64_933_update_start_] 
        $T[AND_u64_u64_933_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_930_sample_start_] 
        $T[R_tmp15x_xi_930_sample_completed_] 
        $T[R_tmp15x_xi_930_update_start_] 
        $T[R_tmp15x_xi_930_update_completed_] 
        // implicit reference
        R_tmp15x_xi_930_sample_start_ <-& (type_cast_921_update_completed_)
        R_tmp15x_xi_930_sample_completed_ <-& (R_tmp15x_xi_930_sample_start_)
        R_tmp15x_xi_930_update_start_ <-& (R_tmp15x_xi_930_sample_completed_)
        R_tmp15x_xi_930_update_completed_ <-& (R_tmp15x_xi_930_update_start_)
        AND_u64_u64_933_sample_start_ <-& (R_tmp15x_xi_930_update_completed_)
        ;;[AND_u64_u64_933_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_933_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_933_sample_start_ &-> (AND_u64_u64_933_Sample)
        AND_u64_u64_933_sample_completed_ <-& (AND_u64_u64_933_Sample)
        AND_u64_u64_933_sample_completed_ &-> ($null)
        AND_u64_u64_933_update_start_ &-> (AND_u64_u64_933_Update)
        AND_u64_u64_933_update_completed_ <-& (AND_u64_u64_933_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 353
        // Source expression
        // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_939_sample_start_] 
        $T[EQ_u64_u1_939_sample_completed_] 
        $T[EQ_u64_u1_939_update_start_] 
        $T[EQ_u64_u1_939_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_936_sample_start_] 
        $T[R_iNsTr_5_936_sample_completed_] 
        $T[R_iNsTr_5_936_update_start_] 
        $T[R_iNsTr_5_936_update_completed_] 
        // implicit reference
        R_iNsTr_5_936_sample_start_ <-& (AND_u64_u64_927_update_completed_)
        R_iNsTr_5_936_sample_completed_ <-& (R_iNsTr_5_936_sample_start_)
        R_iNsTr_5_936_update_start_ <-& (R_iNsTr_5_936_sample_completed_)
        R_iNsTr_5_936_update_completed_ <-& (R_iNsTr_5_936_update_start_)
        EQ_u64_u1_939_sample_start_ <-& (R_iNsTr_5_936_update_completed_)
        ;;[EQ_u64_u1_939_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_939_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_939_sample_start_ &-> (EQ_u64_u1_939_Sample)
        EQ_u64_u1_939_sample_completed_ <-& (EQ_u64_u1_939_Sample)
        EQ_u64_u1_939_sample_completed_ &-> ($null)
        EQ_u64_u1_939_update_start_ &-> (EQ_u64_u1_939_Update)
        EQ_u64_u1_939_update_completed_ <-& (EQ_u64_u1_939_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_896_to_assign_stmt_940__entry__ |-> (assign_stmt_896_to_assign_stmt_940)
      assign_stmt_896_to_assign_stmt_940__exit__ <-| (assign_stmt_896_to_assign_stmt_940)
      // if-statement  
      //  file prog.aa, line 354
      ;;[if_stmt_941_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_941__entry__ |-> (if_stmt_941_dead_link)
      if_stmt_941__exit__ <-| (if_stmt_941_dead_link)
      ;;[if_stmt_941_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_941__entry__ |-> (if_stmt_941_eval_test)
      $P [R_iNsTr_7_942_place]
      R_iNsTr_7_942_place <-| (if_stmt_941_eval_test)
      ;;[if_stmt_941_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_941_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_7_942_place |-> (if_stmt_941_if_link if_stmt_941_else_link)
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (if_stmt_941_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_941_else_link)
      ::[assign_stmt_953_to_assign_stmt_976] 
      {
        // 		iNsTr_25 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 358
        // Source expression
        // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_952_sample_start_] 
        $T[AND_u64_u64_952_sample_completed_] 
        $T[AND_u64_u64_952_update_start_] 
        $T[AND_u64_u64_952_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_949_sample_start_] 
        $T[R_tmp15x_xi_949_sample_completed_] 
        $T[R_tmp15x_xi_949_update_start_] 
        $T[R_tmp15x_xi_949_update_completed_] 
        // implicit reference
        R_tmp15x_xi_949_sample_start_ <-& ($entry)
        R_tmp15x_xi_949_sample_completed_ <-& (R_tmp15x_xi_949_sample_start_)
        R_tmp15x_xi_949_update_start_ <-& (R_tmp15x_xi_949_sample_completed_)
        R_tmp15x_xi_949_update_completed_ <-& (R_tmp15x_xi_949_update_start_)
        AND_u64_u64_952_sample_start_ <-& (R_tmp15x_xi_949_update_completed_)
        ;;[AND_u64_u64_952_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_952_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_952_sample_start_ &-> (AND_u64_u64_952_Sample)
        AND_u64_u64_952_sample_completed_ <-& (AND_u64_u64_952_Sample)
        AND_u64_u64_952_sample_completed_ &-> ($null)
        AND_u64_u64_952_update_start_ &-> (AND_u64_u64_952_Update)
        AND_u64_u64_952_update_completed_ <-& (AND_u64_u64_952_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 359
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_958_sample_start_] 
        $T[AND_u64_u64_958_sample_completed_] 
        $T[AND_u64_u64_958_update_start_] 
        $T[AND_u64_u64_958_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_955_sample_start_] 
        $T[R_tmp17x_xi_955_sample_completed_] 
        $T[R_tmp17x_xi_955_update_start_] 
        $T[R_tmp17x_xi_955_update_completed_] 
        // implicit reference
        R_tmp17x_xi_955_sample_start_ <-& ($entry)
        R_tmp17x_xi_955_sample_completed_ <-& (R_tmp17x_xi_955_sample_start_)
        R_tmp17x_xi_955_update_start_ <-& (R_tmp17x_xi_955_sample_completed_)
        R_tmp17x_xi_955_update_completed_ <-& (R_tmp17x_xi_955_update_start_)
        AND_u64_u64_958_sample_start_ <-& (R_tmp17x_xi_955_update_completed_)
        ;;[AND_u64_u64_958_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_958_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_958_sample_start_ &-> (AND_u64_u64_958_Sample)
        AND_u64_u64_958_sample_completed_ <-& (AND_u64_u64_958_Sample)
        AND_u64_u64_958_sample_completed_ &-> ($null)
        AND_u64_u64_958_update_start_ &-> (AND_u64_u64_958_Update)
        AND_u64_u64_958_update_completed_ <-& (AND_u64_u64_958_Update)
        // Target expression
        // (as target) tmp17x_xmaskx_xi
        // tmp17x_xmaskx_xi
        // implicit reference
        // 		iNsTr_26 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 360
        // Source expression
        // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[ADD_u64_u64_964_sample_start_] 
        $T[ADD_u64_u64_964_sample_completed_] 
        $T[ADD_u64_u64_964_update_start_] 
        $T[ADD_u64_u64_964_update_completed_] 
        // tmp17x_xmaskx_xi
        $T[R_tmp17x_xmaskx_xi_961_sample_start_] 
        $T[R_tmp17x_xmaskx_xi_961_sample_completed_] 
        $T[R_tmp17x_xmaskx_xi_961_update_start_] 
        $T[R_tmp17x_xmaskx_xi_961_update_completed_] 
        // implicit reference
        R_tmp17x_xmaskx_xi_961_sample_start_ <-& (AND_u64_u64_958_update_completed_)
        R_tmp17x_xmaskx_xi_961_sample_completed_ <-& (R_tmp17x_xmaskx_xi_961_sample_start_)
        R_tmp17x_xmaskx_xi_961_update_start_ <-& (R_tmp17x_xmaskx_xi_961_sample_completed_)
        R_tmp17x_xmaskx_xi_961_update_completed_ <-& (R_tmp17x_xmaskx_xi_961_update_start_)
        ADD_u64_u64_964_sample_start_ <-& (R_tmp17x_xmaskx_xi_961_update_completed_)
        ;;[ADD_u64_u64_964_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_964_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_964_sample_start_ &-> (ADD_u64_u64_964_Sample)
        ADD_u64_u64_964_sample_completed_ <-& (ADD_u64_u64_964_Sample)
        ADD_u64_u64_964_sample_completed_ &-> ($null)
        ADD_u64_u64_964_update_start_ &-> (ADD_u64_u64_964_Update)
        ADD_u64_u64_964_update_completed_ <-& (ADD_u64_u64_964_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		phitmpx_xi := (iNsTr_26 - iNsTr_25)
        //  file prog.aa, line 361
        // Source expression
        // (iNsTr_26 - iNsTr_25)
        $T[SUB_u64_u64_969_sample_start_] 
        $T[SUB_u64_u64_969_sample_completed_] 
        $T[SUB_u64_u64_969_update_start_] 
        $T[SUB_u64_u64_969_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_967_sample_start_] 
        $T[R_iNsTr_26_967_sample_completed_] 
        $T[R_iNsTr_26_967_update_start_] 
        $T[R_iNsTr_26_967_update_completed_] 
        // implicit reference
        R_iNsTr_26_967_sample_start_ <-& (ADD_u64_u64_964_update_completed_)
        R_iNsTr_26_967_sample_completed_ <-& (R_iNsTr_26_967_sample_start_)
        R_iNsTr_26_967_update_start_ <-& (R_iNsTr_26_967_sample_completed_)
        R_iNsTr_26_967_update_completed_ <-& (R_iNsTr_26_967_update_start_)
        // iNsTr_25
        $T[R_iNsTr_25_968_sample_start_] 
        $T[R_iNsTr_25_968_sample_completed_] 
        $T[R_iNsTr_25_968_update_start_] 
        $T[R_iNsTr_25_968_update_completed_] 
        // implicit reference
        R_iNsTr_25_968_sample_start_ <-& (AND_u64_u64_952_update_completed_)
        R_iNsTr_25_968_sample_completed_ <-& (R_iNsTr_25_968_sample_start_)
        R_iNsTr_25_968_update_start_ <-& (R_iNsTr_25_968_sample_completed_)
        R_iNsTr_25_968_update_completed_ <-& (R_iNsTr_25_968_update_start_)
        SUB_u64_u64_969_sample_start_ <-& (R_iNsTr_26_967_update_completed_)
        SUB_u64_u64_969_sample_start_ <-& (R_iNsTr_25_968_update_completed_)
        ;;[SUB_u64_u64_969_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_969_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_969_sample_start_ &-> (SUB_u64_u64_969_Sample)
        SUB_u64_u64_969_sample_completed_ <-& (SUB_u64_u64_969_Sample)
        SUB_u64_u64_969_sample_completed_ &-> ($null)
        SUB_u64_u64_969_update_start_ &-> (SUB_u64_u64_969_Update)
        SUB_u64_u64_969_update_completed_ <-& (SUB_u64_u64_969_Update)
        // Target expression
        // (as target) phitmpx_xi
        // phitmpx_xi
        // implicit reference
        // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 362
        // Source expression
        // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_975_sample_start_] 
        $T[AND_u64_u64_975_sample_completed_] 
        $T[AND_u64_u64_975_update_start_] 
        $T[AND_u64_u64_975_update_completed_] 
        // phitmpx_xi
        $T[R_phitmpx_xi_972_sample_start_] 
        $T[R_phitmpx_xi_972_sample_completed_] 
        $T[R_phitmpx_xi_972_update_start_] 
        $T[R_phitmpx_xi_972_update_completed_] 
        // implicit reference
        R_phitmpx_xi_972_sample_start_ <-& (SUB_u64_u64_969_update_completed_)
        R_phitmpx_xi_972_sample_completed_ <-& (R_phitmpx_xi_972_sample_start_)
        R_phitmpx_xi_972_update_start_ <-& (R_phitmpx_xi_972_sample_completed_)
        R_phitmpx_xi_972_update_completed_ <-& (R_phitmpx_xi_972_update_start_)
        AND_u64_u64_975_sample_start_ <-& (R_phitmpx_xi_972_update_completed_)
        ;;[AND_u64_u64_975_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_975_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_975_sample_start_ &-> (AND_u64_u64_975_Sample)
        AND_u64_u64_975_sample_completed_ <-& (AND_u64_u64_975_Sample)
        AND_u64_u64_975_sample_completed_ &-> ($null)
        AND_u64_u64_975_update_start_ &-> (AND_u64_u64_975_Update)
        AND_u64_u64_975_update_completed_ <-& (AND_u64_u64_975_Update)
        // Target expression
        // (as target) phitmp20x_xi
        // phitmp20x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_953_to_assign_stmt_976__entry__ |-> (assign_stmt_953_to_assign_stmt_976)
      assign_stmt_953_to_assign_stmt_976__exit__ <-| (assign_stmt_953_to_assign_stmt_976)
      ::[assign_stmt_992_to_assign_stmt_1073] 
      {
        // 		iNsTr_10 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 368
        // Source expression
        // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[OR_u64_u64_991_sample_start_] 
        $T[OR_u64_u64_991_sample_completed_] 
        $T[OR_u64_u64_991_update_start_] 
        $T[OR_u64_u64_991_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_988_sample_start_] 
        $T[R_tmp15x_xi_988_sample_completed_] 
        $T[R_tmp15x_xi_988_update_start_] 
        $T[R_tmp15x_xi_988_update_completed_] 
        // implicit reference
        R_tmp15x_xi_988_sample_start_ <-& ($entry)
        R_tmp15x_xi_988_sample_completed_ <-& (R_tmp15x_xi_988_sample_start_)
        R_tmp15x_xi_988_update_start_ <-& (R_tmp15x_xi_988_sample_completed_)
        R_tmp15x_xi_988_update_completed_ <-& (R_tmp15x_xi_988_update_start_)
        OR_u64_u64_991_sample_start_ <-& (R_tmp15x_xi_988_update_completed_)
        ;;[OR_u64_u64_991_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_991_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_991_sample_start_ &-> (OR_u64_u64_991_Sample)
        OR_u64_u64_991_sample_completed_ <-& (OR_u64_u64_991_Sample)
        OR_u64_u64_991_sample_completed_ &-> ($null)
        OR_u64_u64_991_update_start_ &-> (OR_u64_u64_991_Update)
        OR_u64_u64_991_update_completed_ <-& (OR_u64_u64_991_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 369
        // Source expression
        // (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_997_sample_start_] 
        $T[AND_u64_u64_997_sample_completed_] 
        $T[AND_u64_u64_997_update_start_] 
        $T[AND_u64_u64_997_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_994_sample_start_] 
        $T[R_iNsTr_10_994_sample_completed_] 
        $T[R_iNsTr_10_994_update_start_] 
        $T[R_iNsTr_10_994_update_completed_] 
        // implicit reference
        R_iNsTr_10_994_sample_start_ <-& (OR_u64_u64_991_update_completed_)
        R_iNsTr_10_994_sample_completed_ <-& (R_iNsTr_10_994_sample_start_)
        R_iNsTr_10_994_update_start_ <-& (R_iNsTr_10_994_sample_completed_)
        R_iNsTr_10_994_update_completed_ <-& (R_iNsTr_10_994_update_start_)
        AND_u64_u64_997_sample_start_ <-& (R_iNsTr_10_994_update_completed_)
        ;;[AND_u64_u64_997_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_997_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_997_sample_start_ &-> (AND_u64_u64_997_Sample)
        AND_u64_u64_997_sample_completed_ <-& (AND_u64_u64_997_Sample)
        AND_u64_u64_997_sample_completed_ &-> ($null)
        AND_u64_u64_997_update_start_ &-> (AND_u64_u64_997_Update)
        AND_u64_u64_997_update_completed_ <-& (AND_u64_u64_997_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_11 )
        //  file prog.aa, line 370
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_11 )
        $T[type_cast_1001_sample_start_] 
        $T[type_cast_1001_sample_completed_] 
        $T[type_cast_1001_update_start_] 
        $T[type_cast_1001_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_1000_sample_start_] 
        $T[R_iNsTr_11_1000_sample_completed_] 
        $T[R_iNsTr_11_1000_update_start_] 
        $T[R_iNsTr_11_1000_update_completed_] 
        // implicit reference
        R_iNsTr_11_1000_sample_start_ <-& (AND_u64_u64_997_update_completed_)
        R_iNsTr_11_1000_sample_completed_ <-& (R_iNsTr_11_1000_sample_start_)
        R_iNsTr_11_1000_update_start_ <-& (R_iNsTr_11_1000_sample_completed_)
        R_iNsTr_11_1000_update_completed_ <-& (R_iNsTr_11_1000_update_start_)
        type_cast_1001_sample_start_ <-& (R_iNsTr_11_1000_update_completed_)
        ;;[type_cast_1001_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1001_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1001_sample_start_ &-> (type_cast_1001_Sample)
        type_cast_1001_sample_completed_ <-& (type_cast_1001_Sample)
        type_cast_1001_sample_completed_ &-> ($null)
        type_cast_1001_update_start_ &-> (type_cast_1001_Update)
        type_cast_1001_update_completed_ <-& (type_cast_1001_Update)
        // Target expression
        // (as target) tmp11x_xi
        // tmp11x_xi
        // implicit reference
        // 		iNsTr_12 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        //  file prog.aa, line 371
        // Source expression
        // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        $T[MUL_f64_f64_1007_sample_start_] 
        $T[MUL_f64_f64_1007_sample_completed_] 
        $T[MUL_f64_f64_1007_update_start_] 
        $T[MUL_f64_f64_1007_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_1004_sample_start_] 
        $T[R_tmp11x_xi_1004_sample_completed_] 
        $T[R_tmp11x_xi_1004_update_start_] 
        $T[R_tmp11x_xi_1004_update_completed_] 
        // implicit reference
        R_tmp11x_xi_1004_sample_start_ <-& (type_cast_1001_update_completed_)
        R_tmp11x_xi_1004_sample_completed_ <-& (R_tmp11x_xi_1004_sample_start_)
        R_tmp11x_xi_1004_update_start_ <-& (R_tmp11x_xi_1004_sample_completed_)
        R_tmp11x_xi_1004_update_completed_ <-& (R_tmp11x_xi_1004_update_start_)
        MUL_f64_f64_1007_sample_start_ <-& (R_tmp11x_xi_1004_update_completed_)
        ;;[MUL_f64_f64_1007_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1007_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1007_sample_start_ &-> (MUL_f64_f64_1007_Sample)
        MUL_f64_f64_1007_sample_completed_ <-& (MUL_f64_f64_1007_Sample)
        MUL_f64_f64_1007_sample_completed_ &-> ($null)
        MUL_f64_f64_1007_update_start_ &-> (MUL_f64_f64_1007_Update)
        MUL_f64_f64_1007_update_completed_ <-& (MUL_f64_f64_1007_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
        //  file prog.aa, line 372
        // Source expression
        // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
        $T[SUB_f64_f64_1013_sample_start_] 
        $T[SUB_f64_f64_1013_sample_completed_] 
        $T[SUB_f64_f64_1013_update_start_] 
        $T[SUB_f64_f64_1013_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1012_sample_start_] 
        $T[R_iNsTr_12_1012_sample_completed_] 
        $T[R_iNsTr_12_1012_update_start_] 
        $T[R_iNsTr_12_1012_update_completed_] 
        // implicit reference
        R_iNsTr_12_1012_sample_start_ <-& (MUL_f64_f64_1007_update_completed_)
        R_iNsTr_12_1012_sample_completed_ <-& (R_iNsTr_12_1012_sample_start_)
        R_iNsTr_12_1012_update_start_ <-& (R_iNsTr_12_1012_sample_completed_)
        R_iNsTr_12_1012_update_completed_ <-& (R_iNsTr_12_1012_update_start_)
        SUB_f64_f64_1013_sample_start_ <-& (R_iNsTr_12_1012_update_completed_)
        ;;[SUB_f64_f64_1013_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1013_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1013_sample_start_ &-> (SUB_f64_f64_1013_Sample)
        SUB_f64_f64_1013_sample_completed_ <-& (SUB_f64_f64_1013_Sample)
        SUB_f64_f64_1013_sample_completed_ &-> ($null)
        SUB_f64_f64_1013_update_start_ &-> (SUB_f64_f64_1013_Update)
        SUB_f64_f64_1013_update_completed_ <-& (SUB_f64_f64_1013_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (tmp11x_xi * iNsTr_13)
        //  file prog.aa, line 373
        // Source expression
        // (tmp11x_xi * iNsTr_13)
        $T[MUL_f64_f64_1018_sample_start_] 
        $T[MUL_f64_f64_1018_sample_completed_] 
        $T[MUL_f64_f64_1018_update_start_] 
        $T[MUL_f64_f64_1018_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_1016_sample_start_] 
        $T[R_tmp11x_xi_1016_sample_completed_] 
        $T[R_tmp11x_xi_1016_update_start_] 
        $T[R_tmp11x_xi_1016_update_completed_] 
        // implicit reference
        R_tmp11x_xi_1016_sample_start_ <-& (type_cast_1001_update_completed_)
        R_tmp11x_xi_1016_sample_completed_ <-& (R_tmp11x_xi_1016_sample_start_)
        R_tmp11x_xi_1016_update_start_ <-& (R_tmp11x_xi_1016_sample_completed_)
        R_tmp11x_xi_1016_update_completed_ <-& (R_tmp11x_xi_1016_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_1017_sample_start_] 
        $T[R_iNsTr_13_1017_sample_completed_] 
        $T[R_iNsTr_13_1017_update_start_] 
        $T[R_iNsTr_13_1017_update_completed_] 
        // implicit reference
        R_iNsTr_13_1017_sample_start_ <-& (SUB_f64_f64_1013_update_completed_)
        R_iNsTr_13_1017_sample_completed_ <-& (R_iNsTr_13_1017_sample_start_)
        R_iNsTr_13_1017_update_start_ <-& (R_iNsTr_13_1017_sample_completed_)
        R_iNsTr_13_1017_update_completed_ <-& (R_iNsTr_13_1017_update_start_)
        MUL_f64_f64_1018_sample_start_ <-& (R_tmp11x_xi_1016_update_completed_)
        MUL_f64_f64_1018_sample_start_ <-& (R_iNsTr_13_1017_update_completed_)
        ;;[MUL_f64_f64_1018_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1018_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1018_sample_start_ &-> (MUL_f64_f64_1018_Sample)
        MUL_f64_f64_1018_sample_completed_ <-& (MUL_f64_f64_1018_Sample)
        MUL_f64_f64_1018_sample_completed_ &-> ($null)
        MUL_f64_f64_1018_update_start_ &-> (MUL_f64_f64_1018_Update)
        MUL_f64_f64_1018_update_completed_ <-& (MUL_f64_f64_1018_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
        //  file prog.aa, line 374
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
        $T[SUB_f64_f64_1024_sample_start_] 
        $T[SUB_f64_f64_1024_sample_completed_] 
        $T[SUB_f64_f64_1024_update_start_] 
        $T[SUB_f64_f64_1024_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1023_sample_start_] 
        $T[R_iNsTr_14_1023_sample_completed_] 
        $T[R_iNsTr_14_1023_update_start_] 
        $T[R_iNsTr_14_1023_update_completed_] 
        // implicit reference
        R_iNsTr_14_1023_sample_start_ <-& (MUL_f64_f64_1018_update_completed_)
        R_iNsTr_14_1023_sample_completed_ <-& (R_iNsTr_14_1023_sample_start_)
        R_iNsTr_14_1023_update_start_ <-& (R_iNsTr_14_1023_sample_completed_)
        R_iNsTr_14_1023_update_completed_ <-& (R_iNsTr_14_1023_update_start_)
        SUB_f64_f64_1024_sample_start_ <-& (R_iNsTr_14_1023_update_completed_)
        ;;[SUB_f64_f64_1024_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1024_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1024_sample_start_ &-> (SUB_f64_f64_1024_Sample)
        SUB_f64_f64_1024_sample_completed_ <-& (SUB_f64_f64_1024_Sample)
        SUB_f64_f64_1024_sample_completed_ &-> ($null)
        SUB_f64_f64_1024_update_start_ &-> (SUB_f64_f64_1024_Update)
        SUB_f64_f64_1024_update_completed_ <-& (SUB_f64_f64_1024_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
        //  file prog.aa, line 375
        // Source expression
        // (iNsTr_13 * iNsTr_15)
        $T[MUL_f64_f64_1029_sample_start_] 
        $T[MUL_f64_f64_1029_sample_completed_] 
        $T[MUL_f64_f64_1029_update_start_] 
        $T[MUL_f64_f64_1029_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_1027_sample_start_] 
        $T[R_iNsTr_13_1027_sample_completed_] 
        $T[R_iNsTr_13_1027_update_start_] 
        $T[R_iNsTr_13_1027_update_completed_] 
        // implicit reference
        R_iNsTr_13_1027_sample_start_ <-& (SUB_f64_f64_1013_update_completed_)
        R_iNsTr_13_1027_sample_completed_ <-& (R_iNsTr_13_1027_sample_start_)
        R_iNsTr_13_1027_update_start_ <-& (R_iNsTr_13_1027_sample_completed_)
        R_iNsTr_13_1027_update_completed_ <-& (R_iNsTr_13_1027_update_start_)
        // iNsTr_15
        $T[R_iNsTr_15_1028_sample_start_] 
        $T[R_iNsTr_15_1028_sample_completed_] 
        $T[R_iNsTr_15_1028_update_start_] 
        $T[R_iNsTr_15_1028_update_completed_] 
        // implicit reference
        R_iNsTr_15_1028_sample_start_ <-& (SUB_f64_f64_1024_update_completed_)
        R_iNsTr_15_1028_sample_completed_ <-& (R_iNsTr_15_1028_sample_start_)
        R_iNsTr_15_1028_update_start_ <-& (R_iNsTr_15_1028_sample_completed_)
        R_iNsTr_15_1028_update_completed_ <-& (R_iNsTr_15_1028_update_start_)
        MUL_f64_f64_1029_sample_start_ <-& (R_iNsTr_13_1027_update_completed_)
        MUL_f64_f64_1029_sample_start_ <-& (R_iNsTr_15_1028_update_completed_)
        ;;[MUL_f64_f64_1029_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1029_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1029_sample_start_ &-> (MUL_f64_f64_1029_Sample)
        MUL_f64_f64_1029_sample_completed_ <-& (MUL_f64_f64_1029_Sample)
        MUL_f64_f64_1029_sample_completed_ &-> ($null)
        MUL_f64_f64_1029_update_start_ &-> (MUL_f64_f64_1029_Update)
        MUL_f64_f64_1029_update_completed_ <-& (MUL_f64_f64_1029_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (tmp11x_xi * iNsTr_16)
        //  file prog.aa, line 376
        // Source expression
        // (tmp11x_xi * iNsTr_16)
        $T[MUL_f64_f64_1034_sample_start_] 
        $T[MUL_f64_f64_1034_sample_completed_] 
        $T[MUL_f64_f64_1034_update_start_] 
        $T[MUL_f64_f64_1034_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_1032_sample_start_] 
        $T[R_tmp11x_xi_1032_sample_completed_] 
        $T[R_tmp11x_xi_1032_update_start_] 
        $T[R_tmp11x_xi_1032_update_completed_] 
        // implicit reference
        R_tmp11x_xi_1032_sample_start_ <-& (type_cast_1001_update_completed_)
        R_tmp11x_xi_1032_sample_completed_ <-& (R_tmp11x_xi_1032_sample_start_)
        R_tmp11x_xi_1032_update_start_ <-& (R_tmp11x_xi_1032_sample_completed_)
        R_tmp11x_xi_1032_update_completed_ <-& (R_tmp11x_xi_1032_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_1033_sample_start_] 
        $T[R_iNsTr_16_1033_sample_completed_] 
        $T[R_iNsTr_16_1033_update_start_] 
        $T[R_iNsTr_16_1033_update_completed_] 
        // implicit reference
        R_iNsTr_16_1033_sample_start_ <-& (MUL_f64_f64_1029_update_completed_)
        R_iNsTr_16_1033_sample_completed_ <-& (R_iNsTr_16_1033_sample_start_)
        R_iNsTr_16_1033_update_start_ <-& (R_iNsTr_16_1033_sample_completed_)
        R_iNsTr_16_1033_update_completed_ <-& (R_iNsTr_16_1033_update_start_)
        MUL_f64_f64_1034_sample_start_ <-& (R_tmp11x_xi_1032_update_completed_)
        MUL_f64_f64_1034_sample_start_ <-& (R_iNsTr_16_1033_update_completed_)
        ;;[MUL_f64_f64_1034_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1034_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1034_sample_start_ &-> (MUL_f64_f64_1034_Sample)
        MUL_f64_f64_1034_sample_completed_ <-& (MUL_f64_f64_1034_Sample)
        MUL_f64_f64_1034_sample_completed_ &-> ($null)
        MUL_f64_f64_1034_update_start_ &-> (MUL_f64_f64_1034_Update)
        MUL_f64_f64_1034_update_completed_ <-& (MUL_f64_f64_1034_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
        //  file prog.aa, line 377
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
        $T[SUB_f64_f64_1040_sample_start_] 
        $T[SUB_f64_f64_1040_sample_completed_] 
        $T[SUB_f64_f64_1040_update_start_] 
        $T[SUB_f64_f64_1040_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1039_sample_start_] 
        $T[R_iNsTr_17_1039_sample_completed_] 
        $T[R_iNsTr_17_1039_update_start_] 
        $T[R_iNsTr_17_1039_update_completed_] 
        // implicit reference
        R_iNsTr_17_1039_sample_start_ <-& (MUL_f64_f64_1034_update_completed_)
        R_iNsTr_17_1039_sample_completed_ <-& (R_iNsTr_17_1039_sample_start_)
        R_iNsTr_17_1039_update_start_ <-& (R_iNsTr_17_1039_sample_completed_)
        R_iNsTr_17_1039_update_completed_ <-& (R_iNsTr_17_1039_update_start_)
        SUB_f64_f64_1040_sample_start_ <-& (R_iNsTr_17_1039_update_completed_)
        ;;[SUB_f64_f64_1040_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1040_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1040_sample_start_ &-> (SUB_f64_f64_1040_Sample)
        SUB_f64_f64_1040_sample_completed_ <-& (SUB_f64_f64_1040_Sample)
        SUB_f64_f64_1040_sample_completed_ &-> ($null)
        SUB_f64_f64_1040_update_start_ &-> (SUB_f64_f64_1040_Update)
        SUB_f64_f64_1040_update_completed_ <-& (SUB_f64_f64_1040_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
        //  file prog.aa, line 378
        // Source expression
        // (iNsTr_16 * iNsTr_18)
        $T[MUL_f64_f64_1045_sample_start_] 
        $T[MUL_f64_f64_1045_sample_completed_] 
        $T[MUL_f64_f64_1045_update_start_] 
        $T[MUL_f64_f64_1045_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_1043_sample_start_] 
        $T[R_iNsTr_16_1043_sample_completed_] 
        $T[R_iNsTr_16_1043_update_start_] 
        $T[R_iNsTr_16_1043_update_completed_] 
        // implicit reference
        R_iNsTr_16_1043_sample_start_ <-& (MUL_f64_f64_1029_update_completed_)
        R_iNsTr_16_1043_sample_completed_ <-& (R_iNsTr_16_1043_sample_start_)
        R_iNsTr_16_1043_update_start_ <-& (R_iNsTr_16_1043_sample_completed_)
        R_iNsTr_16_1043_update_completed_ <-& (R_iNsTr_16_1043_update_start_)
        // iNsTr_18
        $T[R_iNsTr_18_1044_sample_start_] 
        $T[R_iNsTr_18_1044_sample_completed_] 
        $T[R_iNsTr_18_1044_update_start_] 
        $T[R_iNsTr_18_1044_update_completed_] 
        // implicit reference
        R_iNsTr_18_1044_sample_start_ <-& (SUB_f64_f64_1040_update_completed_)
        R_iNsTr_18_1044_sample_completed_ <-& (R_iNsTr_18_1044_sample_start_)
        R_iNsTr_18_1044_update_start_ <-& (R_iNsTr_18_1044_sample_completed_)
        R_iNsTr_18_1044_update_completed_ <-& (R_iNsTr_18_1044_update_start_)
        MUL_f64_f64_1045_sample_start_ <-& (R_iNsTr_16_1043_update_completed_)
        MUL_f64_f64_1045_sample_start_ <-& (R_iNsTr_18_1044_update_completed_)
        ;;[MUL_f64_f64_1045_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1045_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1045_sample_start_ &-> (MUL_f64_f64_1045_Sample)
        MUL_f64_f64_1045_sample_completed_ <-& (MUL_f64_f64_1045_Sample)
        MUL_f64_f64_1045_sample_completed_ &-> ($null)
        MUL_f64_f64_1045_update_start_ &-> (MUL_f64_f64_1045_Update)
        MUL_f64_f64_1045_update_completed_ <-& (MUL_f64_f64_1045_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (tmp11x_xi * iNsTr_19)
        //  file prog.aa, line 379
        // Source expression
        // (tmp11x_xi * iNsTr_19)
        $T[MUL_f64_f64_1050_sample_start_] 
        $T[MUL_f64_f64_1050_sample_completed_] 
        $T[MUL_f64_f64_1050_update_start_] 
        $T[MUL_f64_f64_1050_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_1048_sample_start_] 
        $T[R_tmp11x_xi_1048_sample_completed_] 
        $T[R_tmp11x_xi_1048_update_start_] 
        $T[R_tmp11x_xi_1048_update_completed_] 
        // implicit reference
        R_tmp11x_xi_1048_sample_start_ <-& (type_cast_1001_update_completed_)
        R_tmp11x_xi_1048_sample_completed_ <-& (R_tmp11x_xi_1048_sample_start_)
        R_tmp11x_xi_1048_update_start_ <-& (R_tmp11x_xi_1048_sample_completed_)
        R_tmp11x_xi_1048_update_completed_ <-& (R_tmp11x_xi_1048_update_start_)
        // iNsTr_19
        $T[R_iNsTr_19_1049_sample_start_] 
        $T[R_iNsTr_19_1049_sample_completed_] 
        $T[R_iNsTr_19_1049_update_start_] 
        $T[R_iNsTr_19_1049_update_completed_] 
        // implicit reference
        R_iNsTr_19_1049_sample_start_ <-& (MUL_f64_f64_1045_update_completed_)
        R_iNsTr_19_1049_sample_completed_ <-& (R_iNsTr_19_1049_sample_start_)
        R_iNsTr_19_1049_update_start_ <-& (R_iNsTr_19_1049_sample_completed_)
        R_iNsTr_19_1049_update_completed_ <-& (R_iNsTr_19_1049_update_start_)
        MUL_f64_f64_1050_sample_start_ <-& (R_tmp11x_xi_1048_update_completed_)
        MUL_f64_f64_1050_sample_start_ <-& (R_iNsTr_19_1049_update_completed_)
        ;;[MUL_f64_f64_1050_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1050_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1050_sample_start_ &-> (MUL_f64_f64_1050_Sample)
        MUL_f64_f64_1050_sample_completed_ <-& (MUL_f64_f64_1050_Sample)
        MUL_f64_f64_1050_sample_completed_ &-> ($null)
        MUL_f64_f64_1050_update_start_ &-> (MUL_f64_f64_1050_Update)
        MUL_f64_f64_1050_update_completed_ <-& (MUL_f64_f64_1050_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
        //  file prog.aa, line 380
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
        $T[SUB_f64_f64_1056_sample_start_] 
        $T[SUB_f64_f64_1056_sample_completed_] 
        $T[SUB_f64_f64_1056_update_start_] 
        $T[SUB_f64_f64_1056_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_1055_sample_start_] 
        $T[R_iNsTr_20_1055_sample_completed_] 
        $T[R_iNsTr_20_1055_update_start_] 
        $T[R_iNsTr_20_1055_update_completed_] 
        // implicit reference
        R_iNsTr_20_1055_sample_start_ <-& (MUL_f64_f64_1050_update_completed_)
        R_iNsTr_20_1055_sample_completed_ <-& (R_iNsTr_20_1055_sample_start_)
        R_iNsTr_20_1055_update_start_ <-& (R_iNsTr_20_1055_sample_completed_)
        R_iNsTr_20_1055_update_completed_ <-& (R_iNsTr_20_1055_update_start_)
        SUB_f64_f64_1056_sample_start_ <-& (R_iNsTr_20_1055_update_completed_)
        ;;[SUB_f64_f64_1056_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1056_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1056_sample_start_ &-> (SUB_f64_f64_1056_Sample)
        SUB_f64_f64_1056_sample_completed_ <-& (SUB_f64_f64_1056_Sample)
        SUB_f64_f64_1056_sample_completed_ &-> ($null)
        SUB_f64_f64_1056_update_start_ &-> (SUB_f64_f64_1056_Update)
        SUB_f64_f64_1056_update_completed_ <-& (SUB_f64_f64_1056_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
        //  file prog.aa, line 381
        // Source expression
        // (iNsTr_19 * iNsTr_21)
        $T[MUL_f64_f64_1061_sample_start_] 
        $T[MUL_f64_f64_1061_sample_completed_] 
        $T[MUL_f64_f64_1061_update_start_] 
        $T[MUL_f64_f64_1061_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_1059_sample_start_] 
        $T[R_iNsTr_19_1059_sample_completed_] 
        $T[R_iNsTr_19_1059_update_start_] 
        $T[R_iNsTr_19_1059_update_completed_] 
        // implicit reference
        R_iNsTr_19_1059_sample_start_ <-& (MUL_f64_f64_1045_update_completed_)
        R_iNsTr_19_1059_sample_completed_ <-& (R_iNsTr_19_1059_sample_start_)
        R_iNsTr_19_1059_update_start_ <-& (R_iNsTr_19_1059_sample_completed_)
        R_iNsTr_19_1059_update_completed_ <-& (R_iNsTr_19_1059_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_1060_sample_start_] 
        $T[R_iNsTr_21_1060_sample_completed_] 
        $T[R_iNsTr_21_1060_update_start_] 
        $T[R_iNsTr_21_1060_update_completed_] 
        // implicit reference
        R_iNsTr_21_1060_sample_start_ <-& (SUB_f64_f64_1056_update_completed_)
        R_iNsTr_21_1060_sample_completed_ <-& (R_iNsTr_21_1060_sample_start_)
        R_iNsTr_21_1060_update_start_ <-& (R_iNsTr_21_1060_sample_completed_)
        R_iNsTr_21_1060_update_completed_ <-& (R_iNsTr_21_1060_update_start_)
        MUL_f64_f64_1061_sample_start_ <-& (R_iNsTr_19_1059_update_completed_)
        MUL_f64_f64_1061_sample_start_ <-& (R_iNsTr_21_1060_update_completed_)
        ;;[MUL_f64_f64_1061_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1061_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1061_sample_start_ &-> (MUL_f64_f64_1061_Sample)
        MUL_f64_f64_1061_sample_completed_ <-& (MUL_f64_f64_1061_Sample)
        MUL_f64_f64_1061_sample_completed_ &-> ($null)
        MUL_f64_f64_1061_update_start_ &-> (MUL_f64_f64_1061_Update)
        MUL_f64_f64_1061_update_completed_ <-& (MUL_f64_f64_1061_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 383
        // Source expression
        // (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_1067_sample_start_] 
        $T[EQ_u64_u1_1067_sample_completed_] 
        $T[EQ_u64_u1_1067_update_start_] 
        $T[EQ_u64_u1_1067_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1064_sample_start_] 
        $T[R_iNsTr_6_1064_sample_completed_] 
        $T[R_iNsTr_6_1064_update_start_] 
        $T[R_iNsTr_6_1064_update_completed_] 
        // implicit reference
        R_iNsTr_6_1064_sample_start_ <-& ($entry)
        R_iNsTr_6_1064_sample_completed_ <-& (R_iNsTr_6_1064_sample_start_)
        R_iNsTr_6_1064_update_start_ <-& (R_iNsTr_6_1064_sample_completed_)
        R_iNsTr_6_1064_update_completed_ <-& (R_iNsTr_6_1064_update_start_)
        EQ_u64_u1_1067_sample_start_ <-& (R_iNsTr_6_1064_update_completed_)
        ;;[EQ_u64_u1_1067_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1067_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1067_sample_start_ &-> (EQ_u64_u1_1067_Sample)
        EQ_u64_u1_1067_sample_completed_ <-& (EQ_u64_u1_1067_Sample)
        EQ_u64_u1_1067_sample_completed_ &-> ($null)
        EQ_u64_u1_1067_update_start_ &-> (EQ_u64_u1_1067_Update)
        EQ_u64_u1_1067_update_completed_ <-& (EQ_u64_u1_1067_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_7 | iNsTr_23)
        //  file prog.aa, line 384
        // Source expression
        // (iNsTr_7 | iNsTr_23)
        $T[OR_u1_u1_1072_sample_start_] 
        $T[OR_u1_u1_1072_sample_completed_] 
        $T[OR_u1_u1_1072_update_start_] 
        $T[OR_u1_u1_1072_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_1070_sample_start_] 
        $T[R_iNsTr_7_1070_sample_completed_] 
        $T[R_iNsTr_7_1070_update_start_] 
        $T[R_iNsTr_7_1070_update_completed_] 
        // implicit reference
        R_iNsTr_7_1070_sample_start_ <-& ($entry)
        R_iNsTr_7_1070_sample_completed_ <-& (R_iNsTr_7_1070_sample_start_)
        R_iNsTr_7_1070_update_start_ <-& (R_iNsTr_7_1070_sample_completed_)
        R_iNsTr_7_1070_update_completed_ <-& (R_iNsTr_7_1070_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1071_sample_start_] 
        $T[R_iNsTr_23_1071_sample_completed_] 
        $T[R_iNsTr_23_1071_update_start_] 
        $T[R_iNsTr_23_1071_update_completed_] 
        // implicit reference
        R_iNsTr_23_1071_sample_start_ <-& (EQ_u64_u1_1067_update_completed_)
        R_iNsTr_23_1071_sample_completed_ <-& (R_iNsTr_23_1071_sample_start_)
        R_iNsTr_23_1071_update_start_ <-& (R_iNsTr_23_1071_sample_completed_)
        R_iNsTr_23_1071_update_completed_ <-& (R_iNsTr_23_1071_update_start_)
        OR_u1_u1_1072_sample_start_ <-& (R_iNsTr_7_1070_update_completed_)
        OR_u1_u1_1072_sample_start_ <-& (R_iNsTr_23_1071_update_completed_)
        ;;[OR_u1_u1_1072_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_1072_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_1072_sample_start_ &-> (OR_u1_u1_1072_Sample)
        OR_u1_u1_1072_sample_completed_ <-& (OR_u1_u1_1072_Sample)
        OR_u1_u1_1072_sample_completed_ &-> ($null)
        OR_u1_u1_1072_update_start_ &-> (OR_u1_u1_1072_Update)
        OR_u1_u1_1072_update_completed_ <-& (OR_u1_u1_1072_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_992_to_assign_stmt_1073__entry__ |-> (assign_stmt_992_to_assign_stmt_1073)
      assign_stmt_992_to_assign_stmt_1073__exit__ <-| (assign_stmt_992_to_assign_stmt_1073)
      // if-statement  
      //  file prog.aa, line 385
      ;;[if_stmt_1074_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1074__entry__ |-> (if_stmt_1074_dead_link)
      if_stmt_1074__exit__ <-| (if_stmt_1074_dead_link)
      ;;[if_stmt_1074_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1074__entry__ |-> (if_stmt_1074_eval_test)
      $P [R_orx_xcondx_xi_1075_place]
      R_orx_xcondx_xi_1075_place <-| (if_stmt_1074_eval_test)
      ;;[if_stmt_1074_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1074_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1075_place |-> (if_stmt_1074_if_link if_stmt_1074_else_link)
      $P [bb_2_fdiv32x_xexit]
      bb_2_fdiv32x_xexit <-| (if_stmt_1074_if_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_1074_else_link)
      ::[assign_stmt_1085_to_assign_stmt_1126] 
      {
        // 		iNsTr_34 := (tmp11x_xi * iNsTr_22)
        //  file prog.aa, line 389
        // Source expression
        // (tmp11x_xi * iNsTr_22)
        $T[MUL_f64_f64_1084_sample_start_] 
        $T[MUL_f64_f64_1084_sample_completed_] 
        $T[MUL_f64_f64_1084_update_start_] 
        $T[MUL_f64_f64_1084_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_1082_sample_start_] 
        $T[R_tmp11x_xi_1082_sample_completed_] 
        $T[R_tmp11x_xi_1082_update_start_] 
        $T[R_tmp11x_xi_1082_update_completed_] 
        // implicit reference
        R_tmp11x_xi_1082_sample_start_ <-& ($entry)
        R_tmp11x_xi_1082_sample_completed_ <-& (R_tmp11x_xi_1082_sample_start_)
        R_tmp11x_xi_1082_update_start_ <-& (R_tmp11x_xi_1082_sample_completed_)
        R_tmp11x_xi_1082_update_completed_ <-& (R_tmp11x_xi_1082_update_start_)
        // iNsTr_22
        $T[R_iNsTr_22_1083_sample_start_] 
        $T[R_iNsTr_22_1083_sample_completed_] 
        $T[R_iNsTr_22_1083_update_start_] 
        $T[R_iNsTr_22_1083_update_completed_] 
        // implicit reference
        R_iNsTr_22_1083_sample_start_ <-& ($entry)
        R_iNsTr_22_1083_sample_completed_ <-& (R_iNsTr_22_1083_sample_start_)
        R_iNsTr_22_1083_update_start_ <-& (R_iNsTr_22_1083_sample_completed_)
        R_iNsTr_22_1083_update_completed_ <-& (R_iNsTr_22_1083_update_start_)
        MUL_f64_f64_1084_sample_start_ <-& (R_tmp11x_xi_1082_update_completed_)
        MUL_f64_f64_1084_sample_start_ <-& (R_iNsTr_22_1083_update_completed_)
        ;;[MUL_f64_f64_1084_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1084_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1084_sample_start_ &-> (MUL_f64_f64_1084_Sample)
        MUL_f64_f64_1084_sample_completed_ <-& (MUL_f64_f64_1084_Sample)
        MUL_f64_f64_1084_sample_completed_ &-> ($null)
        MUL_f64_f64_1084_update_start_ &-> (MUL_f64_f64_1084_Update)
        MUL_f64_f64_1084_update_completed_ <-& (MUL_f64_f64_1084_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		iNsTr_35 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 390
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1090_sample_start_] 
        $T[AND_u64_u64_1090_sample_completed_] 
        $T[AND_u64_u64_1090_update_start_] 
        $T[AND_u64_u64_1090_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_1087_sample_start_] 
        $T[R_tmp17x_xi_1087_sample_completed_] 
        $T[R_tmp17x_xi_1087_update_start_] 
        $T[R_tmp17x_xi_1087_update_completed_] 
        // implicit reference
        R_tmp17x_xi_1087_sample_start_ <-& ($entry)
        R_tmp17x_xi_1087_sample_completed_ <-& (R_tmp17x_xi_1087_sample_start_)
        R_tmp17x_xi_1087_update_start_ <-& (R_tmp17x_xi_1087_sample_completed_)
        R_tmp17x_xi_1087_update_completed_ <-& (R_tmp17x_xi_1087_update_start_)
        AND_u64_u64_1090_sample_start_ <-& (R_tmp17x_xi_1087_update_completed_)
        ;;[AND_u64_u64_1090_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1090_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1090_sample_start_ &-> (AND_u64_u64_1090_Sample)
        AND_u64_u64_1090_sample_completed_ <-& (AND_u64_u64_1090_Sample)
        AND_u64_u64_1090_sample_completed_ &-> ($null)
        AND_u64_u64_1090_update_start_ &-> (AND_u64_u64_1090_Update)
        AND_u64_u64_1090_update_completed_ <-& (AND_u64_u64_1090_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
        //  file prog.aa, line 391
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
        $T[SUB_f64_f64_1096_sample_start_] 
        $T[SUB_f64_f64_1096_sample_completed_] 
        $T[SUB_f64_f64_1096_update_start_] 
        $T[SUB_f64_f64_1096_update_completed_] 
        // iNsTr_34
        $T[R_iNsTr_34_1095_sample_start_] 
        $T[R_iNsTr_34_1095_sample_completed_] 
        $T[R_iNsTr_34_1095_update_start_] 
        $T[R_iNsTr_34_1095_update_completed_] 
        // implicit reference
        R_iNsTr_34_1095_sample_start_ <-& (MUL_f64_f64_1084_update_completed_)
        R_iNsTr_34_1095_sample_completed_ <-& (R_iNsTr_34_1095_sample_start_)
        R_iNsTr_34_1095_update_start_ <-& (R_iNsTr_34_1095_sample_completed_)
        R_iNsTr_34_1095_update_completed_ <-& (R_iNsTr_34_1095_update_start_)
        SUB_f64_f64_1096_sample_start_ <-& (R_iNsTr_34_1095_update_completed_)
        ;;[SUB_f64_f64_1096_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1096_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1096_sample_start_ &-> (SUB_f64_f64_1096_Sample)
        SUB_f64_f64_1096_sample_completed_ <-& (SUB_f64_f64_1096_Sample)
        SUB_f64_f64_1096_sample_completed_ &-> ($null)
        SUB_f64_f64_1096_update_start_ &-> (SUB_f64_f64_1096_Update)
        SUB_f64_f64_1096_update_completed_ <-& (SUB_f64_f64_1096_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_9 | iNsTr_35)
        //  file prog.aa, line 392
        // Source expression
        // (iNsTr_9 | iNsTr_35)
        $T[OR_u64_u64_1101_sample_start_] 
        $T[OR_u64_u64_1101_sample_completed_] 
        $T[OR_u64_u64_1101_update_start_] 
        $T[OR_u64_u64_1101_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_1099_sample_start_] 
        $T[R_iNsTr_9_1099_sample_completed_] 
        $T[R_iNsTr_9_1099_update_start_] 
        $T[R_iNsTr_9_1099_update_completed_] 
        // implicit reference
        R_iNsTr_9_1099_sample_start_ <-& ($entry)
        R_iNsTr_9_1099_sample_completed_ <-& (R_iNsTr_9_1099_sample_start_)
        R_iNsTr_9_1099_update_start_ <-& (R_iNsTr_9_1099_sample_completed_)
        R_iNsTr_9_1099_update_completed_ <-& (R_iNsTr_9_1099_update_start_)
        // iNsTr_35
        $T[R_iNsTr_35_1100_sample_start_] 
        $T[R_iNsTr_35_1100_sample_completed_] 
        $T[R_iNsTr_35_1100_update_start_] 
        $T[R_iNsTr_35_1100_update_completed_] 
        // implicit reference
        R_iNsTr_35_1100_sample_start_ <-& (AND_u64_u64_1090_update_completed_)
        R_iNsTr_35_1100_sample_completed_ <-& (R_iNsTr_35_1100_sample_start_)
        R_iNsTr_35_1100_update_start_ <-& (R_iNsTr_35_1100_sample_completed_)
        R_iNsTr_35_1100_update_completed_ <-& (R_iNsTr_35_1100_update_start_)
        OR_u64_u64_1101_sample_start_ <-& (R_iNsTr_9_1099_update_completed_)
        OR_u64_u64_1101_sample_start_ <-& (R_iNsTr_35_1100_update_completed_)
        ;;[OR_u64_u64_1101_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1101_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1101_sample_start_ &-> (OR_u64_u64_1101_Sample)
        OR_u64_u64_1101_sample_completed_ <-& (OR_u64_u64_1101_Sample)
        OR_u64_u64_1101_sample_completed_ &-> ($null)
        OR_u64_u64_1101_update_start_ &-> (OR_u64_u64_1101_Update)
        OR_u64_u64_1101_update_completed_ <-& (OR_u64_u64_1101_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := (iNsTr_22 * iNsTr_36)
        //  file prog.aa, line 393
        // Source expression
        // (iNsTr_22 * iNsTr_36)
        $T[MUL_f64_f64_1106_sample_start_] 
        $T[MUL_f64_f64_1106_sample_completed_] 
        $T[MUL_f64_f64_1106_update_start_] 
        $T[MUL_f64_f64_1106_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_1104_sample_start_] 
        $T[R_iNsTr_22_1104_sample_completed_] 
        $T[R_iNsTr_22_1104_update_start_] 
        $T[R_iNsTr_22_1104_update_completed_] 
        // implicit reference
        R_iNsTr_22_1104_sample_start_ <-& ($entry)
        R_iNsTr_22_1104_sample_completed_ <-& (R_iNsTr_22_1104_sample_start_)
        R_iNsTr_22_1104_update_start_ <-& (R_iNsTr_22_1104_sample_completed_)
        R_iNsTr_22_1104_update_completed_ <-& (R_iNsTr_22_1104_update_start_)
        // iNsTr_36
        $T[R_iNsTr_36_1105_sample_start_] 
        $T[R_iNsTr_36_1105_sample_completed_] 
        $T[R_iNsTr_36_1105_update_start_] 
        $T[R_iNsTr_36_1105_update_completed_] 
        // implicit reference
        R_iNsTr_36_1105_sample_start_ <-& (SUB_f64_f64_1096_update_completed_)
        R_iNsTr_36_1105_sample_completed_ <-& (R_iNsTr_36_1105_sample_start_)
        R_iNsTr_36_1105_update_start_ <-& (R_iNsTr_36_1105_sample_completed_)
        R_iNsTr_36_1105_update_completed_ <-& (R_iNsTr_36_1105_update_start_)
        MUL_f64_f64_1106_sample_start_ <-& (R_iNsTr_22_1104_update_completed_)
        MUL_f64_f64_1106_sample_start_ <-& (R_iNsTr_36_1105_update_completed_)
        ;;[MUL_f64_f64_1106_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1106_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1106_sample_start_ &-> (MUL_f64_f64_1106_Sample)
        MUL_f64_f64_1106_sample_completed_ <-& (MUL_f64_f64_1106_Sample)
        MUL_f64_f64_1106_sample_completed_ &-> ($null)
        MUL_f64_f64_1106_update_start_ &-> (MUL_f64_f64_1106_Update)
        MUL_f64_f64_1106_update_completed_ <-& (MUL_f64_f64_1106_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_37 )
        //  file prog.aa, line 394
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_37 )
        $T[type_cast_1110_sample_start_] 
        $T[type_cast_1110_sample_completed_] 
        $T[type_cast_1110_update_start_] 
        $T[type_cast_1110_update_completed_] 
        // iNsTr_37
        $T[R_iNsTr_37_1109_sample_start_] 
        $T[R_iNsTr_37_1109_sample_completed_] 
        $T[R_iNsTr_37_1109_update_start_] 
        $T[R_iNsTr_37_1109_update_completed_] 
        // implicit reference
        R_iNsTr_37_1109_sample_start_ <-& (OR_u64_u64_1101_update_completed_)
        R_iNsTr_37_1109_sample_completed_ <-& (R_iNsTr_37_1109_sample_start_)
        R_iNsTr_37_1109_update_start_ <-& (R_iNsTr_37_1109_sample_completed_)
        R_iNsTr_37_1109_update_completed_ <-& (R_iNsTr_37_1109_update_start_)
        type_cast_1110_sample_start_ <-& (R_iNsTr_37_1109_update_completed_)
        ;;[type_cast_1110_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1110_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1110_sample_start_ &-> (type_cast_1110_Sample)
        type_cast_1110_sample_completed_ <-& (type_cast_1110_Sample)
        type_cast_1110_sample_completed_ &-> ($null)
        type_cast_1110_update_start_ &-> (type_cast_1110_Update)
        type_cast_1110_update_completed_ <-& (type_cast_1110_Update)
        // Target expression
        // (as target) tmp13x_xi
        // tmp13x_xi
        // implicit reference
        // 		iNsTr_39 := (tmp13x_xi * iNsTr_38)
        //  file prog.aa, line 395
        // Source expression
        // (tmp13x_xi * iNsTr_38)
        $T[MUL_f64_f64_1115_sample_start_] 
        $T[MUL_f64_f64_1115_sample_completed_] 
        $T[MUL_f64_f64_1115_update_start_] 
        $T[MUL_f64_f64_1115_update_completed_] 
        // tmp13x_xi
        $T[R_tmp13x_xi_1113_sample_start_] 
        $T[R_tmp13x_xi_1113_sample_completed_] 
        $T[R_tmp13x_xi_1113_update_start_] 
        $T[R_tmp13x_xi_1113_update_completed_] 
        // implicit reference
        R_tmp13x_xi_1113_sample_start_ <-& (type_cast_1110_update_completed_)
        R_tmp13x_xi_1113_sample_completed_ <-& (R_tmp13x_xi_1113_sample_start_)
        R_tmp13x_xi_1113_update_start_ <-& (R_tmp13x_xi_1113_sample_completed_)
        R_tmp13x_xi_1113_update_completed_ <-& (R_tmp13x_xi_1113_update_start_)
        // iNsTr_38
        $T[R_iNsTr_38_1114_sample_start_] 
        $T[R_iNsTr_38_1114_sample_completed_] 
        $T[R_iNsTr_38_1114_update_start_] 
        $T[R_iNsTr_38_1114_update_completed_] 
        // implicit reference
        R_iNsTr_38_1114_sample_start_ <-& (MUL_f64_f64_1106_update_completed_)
        R_iNsTr_38_1114_sample_completed_ <-& (R_iNsTr_38_1114_sample_start_)
        R_iNsTr_38_1114_update_start_ <-& (R_iNsTr_38_1114_sample_completed_)
        R_iNsTr_38_1114_update_completed_ <-& (R_iNsTr_38_1114_update_start_)
        MUL_f64_f64_1115_sample_start_ <-& (R_tmp13x_xi_1113_update_completed_)
        MUL_f64_f64_1115_sample_start_ <-& (R_iNsTr_38_1114_update_completed_)
        ;;[MUL_f64_f64_1115_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1115_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1115_sample_start_ &-> (MUL_f64_f64_1115_Sample)
        MUL_f64_f64_1115_sample_completed_ <-& (MUL_f64_f64_1115_Sample)
        MUL_f64_f64_1115_sample_completed_ &-> ($null)
        MUL_f64_f64_1115_update_start_ &-> (MUL_f64_f64_1115_Update)
        MUL_f64_f64_1115_update_completed_ <-& (MUL_f64_f64_1115_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_39 )
        //  file prog.aa, line 396
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_39 )
        $T[type_cast_1119_sample_start_] 
        $T[type_cast_1119_sample_completed_] 
        $T[type_cast_1119_update_start_] 
        $T[type_cast_1119_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_1118_sample_start_] 
        $T[R_iNsTr_39_1118_sample_completed_] 
        $T[R_iNsTr_39_1118_update_start_] 
        $T[R_iNsTr_39_1118_update_completed_] 
        // implicit reference
        R_iNsTr_39_1118_sample_start_ <-& (MUL_f64_f64_1115_update_completed_)
        R_iNsTr_39_1118_sample_completed_ <-& (R_iNsTr_39_1118_sample_start_)
        R_iNsTr_39_1118_update_start_ <-& (R_iNsTr_39_1118_sample_completed_)
        R_iNsTr_39_1118_update_completed_ <-& (R_iNsTr_39_1118_update_start_)
        type_cast_1119_sample_start_ <-& (R_iNsTr_39_1118_update_completed_)
        ;;[type_cast_1119_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1119_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1119_sample_start_ &-> (type_cast_1119_Sample)
        type_cast_1119_sample_completed_ <-& (type_cast_1119_Sample)
        type_cast_1119_sample_completed_ &-> ($null)
        type_cast_1119_update_start_ &-> (type_cast_1119_Update)
        type_cast_1119_update_completed_ <-& (type_cast_1119_Update)
        // Target expression
        // (as target) phitmp19x_xi
        // phitmp19x_xi
        // implicit reference
        // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 397
        // Source expression
        // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1125_sample_start_] 
        $T[AND_u64_u64_1125_sample_completed_] 
        $T[AND_u64_u64_1125_update_start_] 
        $T[AND_u64_u64_1125_update_completed_] 
        // phitmp19x_xi
        $T[R_phitmp19x_xi_1122_sample_start_] 
        $T[R_phitmp19x_xi_1122_sample_completed_] 
        $T[R_phitmp19x_xi_1122_update_start_] 
        $T[R_phitmp19x_xi_1122_update_completed_] 
        // implicit reference
        R_phitmp19x_xi_1122_sample_start_ <-& (type_cast_1119_update_completed_)
        R_phitmp19x_xi_1122_sample_completed_ <-& (R_phitmp19x_xi_1122_sample_start_)
        R_phitmp19x_xi_1122_update_start_ <-& (R_phitmp19x_xi_1122_sample_completed_)
        R_phitmp19x_xi_1122_update_completed_ <-& (R_phitmp19x_xi_1122_update_start_)
        AND_u64_u64_1125_sample_start_ <-& (R_phitmp19x_xi_1122_update_completed_)
        ;;[AND_u64_u64_1125_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1125_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1125_sample_start_ &-> (AND_u64_u64_1125_Sample)
        AND_u64_u64_1125_sample_completed_ <-& (AND_u64_u64_1125_Sample)
        AND_u64_u64_1125_sample_completed_ &-> ($null)
        AND_u64_u64_1125_update_start_ &-> (AND_u64_u64_1125_Update)
        AND_u64_u64_1125_update_completed_ <-& (AND_u64_u64_1125_Update)
        // Target expression
        // (as target) phitmp21x_xi
        // phitmp21x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1085_to_assign_stmt_1126__entry__ |-> (assign_stmt_1085_to_assign_stmt_1126)
      assign_stmt_1085_to_assign_stmt_1126__exit__ <-| (assign_stmt_1085_to_assign_stmt_1126)
      ::[assign_stmt_1141_to_assign_stmt_1160] 
      {
        // 		iNsTr_29 := (tmp15x_xi ^ tmp17x_xi)
        //  file prog.aa, line 403
        // Source expression
        // (tmp15x_xi ^ tmp17x_xi)
        $T[XOR_u64_u64_1140_sample_start_] 
        $T[XOR_u64_u64_1140_sample_completed_] 
        $T[XOR_u64_u64_1140_update_start_] 
        $T[XOR_u64_u64_1140_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_1138_sample_start_] 
        $T[R_tmp15x_xi_1138_sample_completed_] 
        $T[R_tmp15x_xi_1138_update_start_] 
        $T[R_tmp15x_xi_1138_update_completed_] 
        // implicit reference
        R_tmp15x_xi_1138_sample_start_ <-& ($entry)
        R_tmp15x_xi_1138_sample_completed_ <-& (R_tmp15x_xi_1138_sample_start_)
        R_tmp15x_xi_1138_update_start_ <-& (R_tmp15x_xi_1138_sample_completed_)
        R_tmp15x_xi_1138_update_completed_ <-& (R_tmp15x_xi_1138_update_start_)
        // tmp17x_xi
        $T[R_tmp17x_xi_1139_sample_start_] 
        $T[R_tmp17x_xi_1139_sample_completed_] 
        $T[R_tmp17x_xi_1139_update_start_] 
        $T[R_tmp17x_xi_1139_update_completed_] 
        // implicit reference
        R_tmp17x_xi_1139_sample_start_ <-& ($entry)
        R_tmp17x_xi_1139_sample_completed_ <-& (R_tmp17x_xi_1139_sample_start_)
        R_tmp17x_xi_1139_update_start_ <-& (R_tmp17x_xi_1139_sample_completed_)
        R_tmp17x_xi_1139_update_completed_ <-& (R_tmp17x_xi_1139_update_start_)
        XOR_u64_u64_1140_sample_start_ <-& (R_tmp15x_xi_1138_update_completed_)
        XOR_u64_u64_1140_sample_start_ <-& (R_tmp17x_xi_1139_update_completed_)
        ;;[XOR_u64_u64_1140_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_1140_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_1140_sample_start_ &-> (XOR_u64_u64_1140_Sample)
        XOR_u64_u64_1140_sample_completed_ <-& (XOR_u64_u64_1140_Sample)
        XOR_u64_u64_1140_sample_completed_ &-> ($null)
        XOR_u64_u64_1140_update_start_ &-> (XOR_u64_u64_1140_Update)
        XOR_u64_u64_1140_update_completed_ <-& (XOR_u64_u64_1140_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 404
        // Source expression
        // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1146_sample_start_] 
        $T[AND_u64_u64_1146_sample_completed_] 
        $T[AND_u64_u64_1146_update_start_] 
        $T[AND_u64_u64_1146_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_1143_sample_start_] 
        $T[R_iNsTr_29_1143_sample_completed_] 
        $T[R_iNsTr_29_1143_update_start_] 
        $T[R_iNsTr_29_1143_update_completed_] 
        // implicit reference
        R_iNsTr_29_1143_sample_start_ <-& (XOR_u64_u64_1140_update_completed_)
        R_iNsTr_29_1143_sample_completed_ <-& (R_iNsTr_29_1143_sample_start_)
        R_iNsTr_29_1143_update_start_ <-& (R_iNsTr_29_1143_sample_completed_)
        R_iNsTr_29_1143_update_completed_ <-& (R_iNsTr_29_1143_update_start_)
        AND_u64_u64_1146_sample_start_ <-& (R_iNsTr_29_1143_update_completed_)
        ;;[AND_u64_u64_1146_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1146_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1146_sample_start_ &-> (AND_u64_u64_1146_Sample)
        AND_u64_u64_1146_sample_completed_ <-& (AND_u64_u64_1146_Sample)
        AND_u64_u64_1146_sample_completed_ &-> ($null)
        AND_u64_u64_1146_update_start_ &-> (AND_u64_u64_1146_Update)
        AND_u64_u64_1146_update_completed_ <-& (AND_u64_u64_1146_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
        //  file prog.aa, line 405
        // Source expression
        // (iNsTr_28 | iNsTr_30)
        $T[OR_u64_u64_1151_sample_start_] 
        $T[OR_u64_u64_1151_sample_completed_] 
        $T[OR_u64_u64_1151_update_start_] 
        $T[OR_u64_u64_1151_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_1149_sample_start_] 
        $T[R_iNsTr_28_1149_sample_completed_] 
        $T[R_iNsTr_28_1149_update_start_] 
        $T[R_iNsTr_28_1149_update_completed_] 
        // implicit reference
        R_iNsTr_28_1149_sample_start_ <-& ($entry)
        R_iNsTr_28_1149_sample_completed_ <-& (R_iNsTr_28_1149_sample_start_)
        R_iNsTr_28_1149_update_start_ <-& (R_iNsTr_28_1149_sample_completed_)
        R_iNsTr_28_1149_update_completed_ <-& (R_iNsTr_28_1149_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_1150_sample_start_] 
        $T[R_iNsTr_30_1150_sample_completed_] 
        $T[R_iNsTr_30_1150_update_start_] 
        $T[R_iNsTr_30_1150_update_completed_] 
        // implicit reference
        R_iNsTr_30_1150_sample_start_ <-& (AND_u64_u64_1146_update_completed_)
        R_iNsTr_30_1150_sample_completed_ <-& (R_iNsTr_30_1150_sample_start_)
        R_iNsTr_30_1150_update_start_ <-& (R_iNsTr_30_1150_sample_completed_)
        R_iNsTr_30_1150_update_completed_ <-& (R_iNsTr_30_1150_update_start_)
        OR_u64_u64_1151_sample_start_ <-& (R_iNsTr_28_1149_update_completed_)
        OR_u64_u64_1151_sample_start_ <-& (R_iNsTr_30_1150_update_completed_)
        ;;[OR_u64_u64_1151_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1151_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1151_sample_start_ &-> (OR_u64_u64_1151_Sample)
        OR_u64_u64_1151_sample_completed_ <-& (OR_u64_u64_1151_Sample)
        OR_u64_u64_1151_sample_completed_ &-> ($null)
        OR_u64_u64_1151_update_start_ &-> (OR_u64_u64_1151_Update)
        OR_u64_u64_1151_update_completed_ <-& (OR_u64_u64_1151_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_31 )
        //  file prog.aa, line 406
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_31 )
        $T[type_cast_1155_sample_start_] 
        $T[type_cast_1155_sample_completed_] 
        $T[type_cast_1155_update_start_] 
        $T[type_cast_1155_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1154_sample_start_] 
        $T[R_iNsTr_31_1154_sample_completed_] 
        $T[R_iNsTr_31_1154_update_start_] 
        $T[R_iNsTr_31_1154_update_completed_] 
        // implicit reference
        R_iNsTr_31_1154_sample_start_ <-& (OR_u64_u64_1151_update_completed_)
        R_iNsTr_31_1154_sample_completed_ <-& (R_iNsTr_31_1154_sample_start_)
        R_iNsTr_31_1154_update_start_ <-& (R_iNsTr_31_1154_sample_completed_)
        R_iNsTr_31_1154_update_completed_ <-& (R_iNsTr_31_1154_update_start_)
        type_cast_1155_sample_start_ <-& (R_iNsTr_31_1154_update_completed_)
        ;;[type_cast_1155_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1155_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1155_sample_start_ &-> (type_cast_1155_Sample)
        type_cast_1155_sample_completed_ <-& (type_cast_1155_Sample)
        type_cast_1155_sample_completed_ &-> ($null)
        type_cast_1155_update_start_ &-> (type_cast_1155_Update)
        type_cast_1155_update_completed_ <-& (type_cast_1155_Update)
        // Target expression
        // (as target) tmp4x_xi
        // tmp4x_xi
        // implicit reference
        // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
        //  file prog.aa, line 407
        // Source expression
        // ($cast ($float<8,23>) tmp4x_xi )
        $T[type_cast_1159_sample_start_] 
        $T[type_cast_1159_sample_completed_] 
        $T[type_cast_1159_update_start_] 
        $T[type_cast_1159_update_completed_] 
        // tmp4x_xi
        $T[R_tmp4x_xi_1158_sample_start_] 
        $T[R_tmp4x_xi_1158_sample_completed_] 
        $T[R_tmp4x_xi_1158_update_start_] 
        $T[R_tmp4x_xi_1158_update_completed_] 
        // implicit reference
        R_tmp4x_xi_1158_sample_start_ <-& (type_cast_1155_update_completed_)
        R_tmp4x_xi_1158_sample_completed_ <-& (R_tmp4x_xi_1158_sample_start_)
        R_tmp4x_xi_1158_update_start_ <-& (R_tmp4x_xi_1158_sample_completed_)
        R_tmp4x_xi_1158_update_completed_ <-& (R_tmp4x_xi_1158_update_start_)
        type_cast_1159_sample_start_ <-& (R_tmp4x_xi_1158_update_completed_)
        ;;[type_cast_1159_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1159_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1159_sample_start_ &-> (type_cast_1159_Sample)
        type_cast_1159_sample_completed_ <-& (type_cast_1159_Sample)
        type_cast_1159_sample_completed_ &-> ($null)
        type_cast_1159_update_start_ &-> (type_cast_1159_Update)
        type_cast_1159_update_completed_ <-& (type_cast_1159_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1141_to_assign_stmt_1160__entry__ |-> (assign_stmt_1141_to_assign_stmt_1160)
      assign_stmt_1141_to_assign_stmt_1160__exit__ <-| (assign_stmt_1141_to_assign_stmt_1160)
      // control-path for merge  
      //  file prog.aa, line 356
      ;;[merge_stmt_947_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_947__entry__ |-> (merge_stmt_947_dead_link)
      merge_stmt_947__exit__ <-| (merge_stmt_947_dead_link)
      //---------------------   merge statement  file prog.aa, line 356  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_947_PhiReqMerge] 
      merge_stmt_947_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_947_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_947_PhiReqMerge |-> (merge_stmt_947_PhiAck)
      merge_stmt_947__exit__  <-| (merge_stmt_947_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 356  --------------------------
      // control-path for merge  
      //  file prog.aa, line 365
      //---------------------   merge statement  file prog.aa, line 365  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        ;;[phi_stmt_979] 
        {
          ||[phi_stmt_979_sources] 
          {
            // sources for 			$phi iNsTr_9 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi )
            ;;[type_cast_982] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_979_req] 
        }
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      ||[bb_1_bb_2_PhiReq] 
      {
        ;;[phi_stmt_979] 
        {
          ||[phi_stmt_979_sources] 
          {
            // sources for 			$phi iNsTr_9 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi )
            ;;[type_cast_982] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_979_req] 
        }
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_978_PhiReqMerge] 
      merge_stmt_978_PhiReqMerge <-| ( bb_0_bb_2_PhiReq  bb_1_bb_2_PhiReq )
      ||[merge_stmt_978_PhiAck] 
      {
        $T [phi_stmt_979_ack] 
      }
      merge_stmt_978_PhiReqMerge |-> (merge_stmt_978_PhiAck)
      merge_stmt_978__exit__  <-| (merge_stmt_978_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 365  --------------------------
      // control-path for merge  
      //  file prog.aa, line 387
      ;;[merge_stmt_1080_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1080__entry__ |-> (merge_stmt_1080_dead_link)
      merge_stmt_1080__exit__ <-| (merge_stmt_1080_dead_link)
      //---------------------   merge statement  file prog.aa, line 387  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_1080_PhiReqMerge] 
      merge_stmt_1080_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_1080_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1080_PhiReqMerge |-> (merge_stmt_1080_PhiAck)
      merge_stmt_1080__exit__  <-| (merge_stmt_1080_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 387  --------------------------
      // control-path for merge  
      //  file prog.aa, line 400
      //---------------------   merge statement  file prog.aa, line 400  --------------------------
      ||[bb_2_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_1129] 
        {
          ||[phi_stmt_1129_sources] 
          {
            // sources for 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_1132] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1129_req] 
        }
      }
      bb_2_fdiv32x_xexit |-> (bb_2_fdiv32x_xexit_PhiReq)
      ||[bb_3_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_1129] 
        {
          ||[phi_stmt_1129_sources] 
          {
            // sources for 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_1132] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1129_req] 
        }
      }
      bb_3_fdiv32x_xexit |-> (bb_3_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1128_PhiReqMerge] 
      merge_stmt_1128_PhiReqMerge <-| ( bb_2_fdiv32x_xexit_PhiReq  bb_3_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1128_PhiAck] 
      {
        $T [phi_stmt_1129_ack] 
      }
      merge_stmt_1128_PhiReqMerge |-> (merge_stmt_1128_PhiAck)
      merge_stmt_1128__exit__  <-| (merge_stmt_1128_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 400  --------------------------
      // control-path for merge  
      //  file prog.aa, line 409
      //---------------------   merge statement  file prog.aa, line 409  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1162_PhiReqMerge] 
      merge_stmt_1162_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1162_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1162_PhiReqMerge |-> (merge_stmt_1162_PhiAck)
      merge_stmt_1162__exit__  <-| (merge_stmt_1162_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 409  --------------------------
      assign_stmt_896_to_assign_stmt_940__entry__ <-| (branch_block_stmt_890__entry__)
      if_stmt_941__entry__ <-| (assign_stmt_896_to_assign_stmt_940__exit__)
      merge_stmt_947__entry__ <-| (if_stmt_941__exit__)
      assign_stmt_953_to_assign_stmt_976__entry__ <-| (merge_stmt_947__exit__)
      bb_1_bb_2 <-| (assign_stmt_953_to_assign_stmt_976__exit__)
      assign_stmt_992_to_assign_stmt_1073__entry__ <-| (merge_stmt_978__exit__)
      if_stmt_1074__entry__ <-| (assign_stmt_992_to_assign_stmt_1073__exit__)
      merge_stmt_1080__entry__ <-| (if_stmt_1074__exit__)
      assign_stmt_1085_to_assign_stmt_1126__entry__ <-| (merge_stmt_1080__exit__)
      bb_3_fdiv32x_xexit <-| (assign_stmt_1085_to_assign_stmt_1126__exit__)
      assign_stmt_1141_to_assign_stmt_1160__entry__ <-| (merge_stmt_1128__exit__)
      return__ <-| (assign_stmt_1141_to_assign_stmt_1160__exit__)
      merge_stmt_1162__exit__ |-> (branch_block_stmt_890__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 356
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 365
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 387
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 400
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 409
    // constant-object-declarations for block %iq_err_calc%body
    //  file prog.aa, line 340
    // constant-object-declarations for block %iq_err_calc
    //  file prog.aa, line 335
    // constant-declarations for block %iq_err_calc%body
    //  file prog.aa, line 340
    // ($bitcast ($float<8,23>) _f4.000000e+00 )
    $constant $W[type_cast_894_wire_constant] : $float<8,23> := _b01000000100000000000000000000000// 4.000000e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_926_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_932_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_938_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 354
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 356
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_951_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_957_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_963_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_974_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 365
    // constant-declarations for phi:  			$phi iNsTr_9 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 366
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_985_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_990_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_996_wire_constant] : $int<64> := _b0011111111101111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f1.882353e+00 )
    $constant $W[type_cast_1006_wire_constant] : $float<11,52> := _b0011111111111110000111100001111000101101111010000111000010010111// 1.882353e+00
    // ($bitcast ($float<11,52>) _f2.823529e+00 )
    $constant $W[type_cast_1011_wire_constant] : $float<11,52> := _b0100000000000110100101101001011001011111010100100111010111101111// 2.823529e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1022_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1038_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1054_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1066_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 385
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 387
    // ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1089_wire_constant] : $int<64> := _b0000000000001111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1094_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1124_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 400
    // constant-declarations for phi:  			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 401
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1135_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1145_wire_constant] : $int<64> := _b1000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 409
    // block %iq_err_calc%body
    //  file prog.aa, line 340
    // 		iNsTr_0 := (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
    //  file prog.aa, line 343
    // iNsTr_0
    $W[iNsTr_0_896] : $float<8,23>
    // 		iNsTr_1 := (iNsTr_0 * torque_ref)
    //  file prog.aa, line 344
    // iNsTr_1
    $W[iNsTr_1_901] : $float<8,23>
    // 		iNsTr_2 := (constant_1 * flux_rotor)
    //  file prog.aa, line 345
    // iNsTr_2
    $W[iNsTr_2_906] : $float<8,23>
    // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
    //  file prog.aa, line 346
    // iNsTr_3
    $W[iNsTr_3_910] : $float<11,52>
    // 		iNsTr_4 := ($cast ($float<11,52>) iNsTr_2 )
    //  file prog.aa, line 347
    // iNsTr_4
    $W[iNsTr_4_914] : $float<11,52>
    // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_3 )
    //  file prog.aa, line 348
    // tmp17x_xi
    $W[tmp17x_xi_918] : $int<64>
    // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_4 )
    //  file prog.aa, line 349
    // tmp15x_xi
    $W[tmp15x_xi_922] : $int<64>
    // 		iNsTr_5 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 350
    // iNsTr_5
    $W[iNsTr_5_928] : $int<64>
    // 		iNsTr_6 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 351
    // iNsTr_6
    $W[iNsTr_6_934] : $int<64>
    // 		iNsTr_7 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 353
    // iNsTr_7
    $W[iNsTr_7_940] : $int<1>
    // if statement  
    //  file prog.aa, line 354
    // 		iNsTr_25 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 358
    // iNsTr_25
    $W[iNsTr_25_953] : $int<64>
    // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 359
    // tmp17x_xmaskx_xi
    $W[tmp17x_xmaskx_xi_959] : $int<64>
    // 		iNsTr_26 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 360
    // iNsTr_26
    $W[iNsTr_26_965] : $int<64>
    // 		phitmpx_xi := (iNsTr_26 - iNsTr_25)
    //  file prog.aa, line 361
    // phitmpx_xi
    $W[phitmpx_xi_970] : $int<64>
    // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 362
    // phitmp20x_xi
    $W[phitmp20x_xi_976] : $int<64>
    // merge-statement  
    //  file prog.aa, line 365
    // 			$phi iNsTr_9 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 366
    // ($cast ($uint<64>) phitmp20x_xi )
    $intermediate $W[type_cast_982_wire] : $int<64>
    // iNsTr_9
    $W[iNsTr_9_979] : $int<64>
    // 		iNsTr_10 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 368
    // iNsTr_10
    $W[iNsTr_10_992] : $int<64>
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 369
    // iNsTr_11
    $W[iNsTr_11_998] : $int<64>
    // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_11 )
    //  file prog.aa, line 370
    // tmp11x_xi
    $W[tmp11x_xi_1002] : $float<11,52>
    // 		iNsTr_12 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 371
    // iNsTr_12
    $W[iNsTr_12_1008] : $float<11,52>
    // 		iNsTr_13 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
    //  file prog.aa, line 372
    // iNsTr_13
    $W[iNsTr_13_1014] : $float<11,52>
    // 		iNsTr_14 := (tmp11x_xi * iNsTr_13)
    //  file prog.aa, line 373
    // iNsTr_14
    $W[iNsTr_14_1019] : $float<11,52>
    // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    //  file prog.aa, line 374
    // iNsTr_15
    $W[iNsTr_15_1025] : $float<11,52>
    // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
    //  file prog.aa, line 375
    // iNsTr_16
    $W[iNsTr_16_1030] : $float<11,52>
    // 		iNsTr_17 := (tmp11x_xi * iNsTr_16)
    //  file prog.aa, line 376
    // iNsTr_17
    $W[iNsTr_17_1035] : $float<11,52>
    // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    //  file prog.aa, line 377
    // iNsTr_18
    $W[iNsTr_18_1041] : $float<11,52>
    // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
    //  file prog.aa, line 378
    // iNsTr_19
    $W[iNsTr_19_1046] : $float<11,52>
    // 		iNsTr_20 := (tmp11x_xi * iNsTr_19)
    //  file prog.aa, line 379
    // iNsTr_20
    $W[iNsTr_20_1051] : $float<11,52>
    // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    //  file prog.aa, line 380
    // iNsTr_21
    $W[iNsTr_21_1057] : $float<11,52>
    // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
    //  file prog.aa, line 381
    // iNsTr_22
    $W[iNsTr_22_1062] : $float<11,52>
    // 		iNsTr_23 := (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 383
    // iNsTr_23
    $W[iNsTr_23_1068] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_7 | iNsTr_23)
    //  file prog.aa, line 384
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1073] : $int<1>
    // if statement  
    //  file prog.aa, line 385
    // 		iNsTr_34 := (tmp11x_xi * iNsTr_22)
    //  file prog.aa, line 389
    // iNsTr_34
    $W[iNsTr_34_1085] : $float<11,52>
    // 		iNsTr_35 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 390
    // iNsTr_35
    $W[iNsTr_35_1091] : $int<64>
    // 		iNsTr_36 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
    //  file prog.aa, line 391
    // iNsTr_36
    $W[iNsTr_36_1097] : $float<11,52>
    // 		iNsTr_37 := (iNsTr_9 | iNsTr_35)
    //  file prog.aa, line 392
    // iNsTr_37
    $W[iNsTr_37_1102] : $int<64>
    // 		iNsTr_38 := (iNsTr_22 * iNsTr_36)
    //  file prog.aa, line 393
    // iNsTr_38
    $W[iNsTr_38_1107] : $float<11,52>
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_37 )
    //  file prog.aa, line 394
    // tmp13x_xi
    $W[tmp13x_xi_1111] : $float<11,52>
    // 		iNsTr_39 := (tmp13x_xi * iNsTr_38)
    //  file prog.aa, line 395
    // iNsTr_39
    $W[iNsTr_39_1116] : $float<11,52>
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_39 )
    //  file prog.aa, line 396
    // phitmp19x_xi
    $W[phitmp19x_xi_1120] : $int<64>
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 397
    // phitmp21x_xi
    $W[phitmp21x_xi_1126] : $int<64>
    // merge-statement  
    //  file prog.aa, line 400
    // 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 401
    // ($cast ($uint<64>) phitmp21x_xi )
    $intermediate $W[type_cast_1132_wire] : $int<64>
    // iNsTr_28
    $W[iNsTr_28_1129] : $int<64>
    // 		iNsTr_29 := (tmp15x_xi ^ tmp17x_xi)
    //  file prog.aa, line 403
    // iNsTr_29
    $W[iNsTr_29_1141] : $int<64>
    // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 404
    // iNsTr_30
    $W[iNsTr_30_1147] : $int<64>
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
    //  file prog.aa, line 405
    // iNsTr_31
    $W[iNsTr_31_1152] : $int<64>
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_31 )
    //  file prog.aa, line 406
    // tmp4x_xi
    $W[tmp4x_xi_1156] : $float<11,52>
    // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 407
    // ret_val__
    // datapath-instances for block %iq_err_calc%body
    //  file prog.aa, line 340
    // 		iNsTr_0 := (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
    //  file prog.aa, line 343
    // (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
    *[MUL_f32_f32_895_inst] (Lr type_cast_894_wire_constant) (iNsTr_0_896) 
    $delay MUL_f32_f32_895_inst 24
    // 		iNsTr_1 := (iNsTr_0 * torque_ref)
    //  file prog.aa, line 344
    // (iNsTr_0 * torque_ref)
    *[MUL_f32_f32_900_inst] (iNsTr_0_896 torque_ref) (iNsTr_1_901) 
    $delay MUL_f32_f32_900_inst 24
    // 		iNsTr_2 := (constant_1 * flux_rotor)
    //  file prog.aa, line 345
    // (constant_1 * flux_rotor)
    *[MUL_f32_f32_905_inst] (constant_1 flux_rotor) (iNsTr_2_906) 
    $delay MUL_f32_f32_905_inst 24
    // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
    //  file prog.aa, line 346
    // ($cast ($float<11,52>) iNsTr_1 )
    $F:=$F [type_cast_909_inst] (iNsTr_1_901) (iNsTr_3_910)  
    $delay type_cast_909_inst 1
    // 		iNsTr_4 := ($cast ($float<11,52>) iNsTr_2 )
    //  file prog.aa, line 347
    // ($cast ($float<11,52>) iNsTr_2 )
    $F:=$F [type_cast_913_inst] (iNsTr_2_906) (iNsTr_4_914)  
    $delay type_cast_913_inst 1
    // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_3 )
    //  file prog.aa, line 348
    // ($bitcast ($uint<64>) iNsTr_3 )
    # := [type_cast_917_inst] (iNsTr_3_910) (tmp17x_xi_918) 
    $delay type_cast_917_inst 1
    // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_4 )
    //  file prog.aa, line 349
    // ($bitcast ($uint<64>) iNsTr_4 )
    # := [type_cast_921_inst] (iNsTr_4_914) (tmp15x_xi_922) 
    $delay type_cast_921_inst 1
    // 		iNsTr_5 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 350
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_927_inst] (tmp17x_xi_918 type_cast_926_wire_constant) (iNsTr_5_928) 
    $delay AND_u64_u64_927_inst 1
    // 		iNsTr_6 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 351
    // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_933_inst] (tmp15x_xi_922 type_cast_932_wire_constant) (iNsTr_6_934) 
    $delay AND_u64_u64_933_inst 1
    // 		iNsTr_7 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 353
    // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_939_inst] (iNsTr_5_928 type_cast_938_wire_constant) (iNsTr_7_940) 
    $delay EQ_u64_u1_939_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 354
    ==0? [if_stmt_941_branch] (iNsTr_7_940)
    // 		iNsTr_25 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 358
    // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_952_inst] (tmp15x_xi_922 type_cast_951_wire_constant) (iNsTr_25_953) 
    $delay AND_u64_u64_952_inst 1
    // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 359
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_958_inst] (tmp17x_xi_918 type_cast_957_wire_constant) (tmp17x_xmaskx_xi_959) 
    $delay AND_u64_u64_958_inst 1
    // 		iNsTr_26 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 360
    // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    +[ADD_u64_u64_964_inst] (tmp17x_xmaskx_xi_959 type_cast_963_wire_constant) (iNsTr_26_965) 
    $delay ADD_u64_u64_964_inst 1
    // 		phitmpx_xi := (iNsTr_26 - iNsTr_25)
    //  file prog.aa, line 361
    // (iNsTr_26 - iNsTr_25)
    -[SUB_u64_u64_969_inst] (iNsTr_26_965 iNsTr_25_953) (phitmpx_xi_970) 
    $delay SUB_u64_u64_969_inst 1
    // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 362
    // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_975_inst] (phitmpx_xi_970 type_cast_974_wire_constant) (phitmp20x_xi_976) 
    $delay AND_u64_u64_975_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 365
    // 			$phi iNsTr_9 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 366
    // ($cast ($uint<64>) phitmp20x_xi )
    # := [type_cast_982_inst] (phitmp20x_xi_976) (type_cast_982_wire) 
    $delay type_cast_982_inst 1
    $phi [phi_stmt_979] (type_cast_982_wire type_cast_985_wire_constant) ( iNsTr_9_979 )
    // 		iNsTr_10 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 368
    // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    |[OR_u64_u64_991_inst] (tmp15x_xi_922 type_cast_990_wire_constant) (iNsTr_10_992) 
    $delay OR_u64_u64_991_inst 1
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 369
    // (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_997_inst] (iNsTr_10_992 type_cast_996_wire_constant) (iNsTr_11_998) 
    $delay AND_u64_u64_997_inst 1
    // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_11 )
    //  file prog.aa, line 370
    // ($bitcast ($float<11,52>) iNsTr_11 )
    # := [type_cast_1001_inst] (iNsTr_11_998) (tmp11x_xi_1002) 
    $delay type_cast_1001_inst 1
    // 		iNsTr_12 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 371
    // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    *[MUL_f64_f64_1007_inst] (tmp11x_xi_1002 type_cast_1006_wire_constant) (iNsTr_12_1008) 
    $delay MUL_f64_f64_1007_inst 24
    // 		iNsTr_13 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
    //  file prog.aa, line 372
    // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
    -[SUB_f64_f64_1013_inst] (type_cast_1011_wire_constant iNsTr_12_1008) (iNsTr_13_1014) 
    $delay SUB_f64_f64_1013_inst 24
    // 		iNsTr_14 := (tmp11x_xi * iNsTr_13)
    //  file prog.aa, line 373
    // (tmp11x_xi * iNsTr_13)
    *[MUL_f64_f64_1018_inst] (tmp11x_xi_1002 iNsTr_13_1014) (iNsTr_14_1019) 
    $delay MUL_f64_f64_1018_inst 24
    // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    //  file prog.aa, line 374
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
    -[SUB_f64_f64_1024_inst] (type_cast_1022_wire_constant iNsTr_14_1019) (iNsTr_15_1025) 
    $delay SUB_f64_f64_1024_inst 24
    // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
    //  file prog.aa, line 375
    // (iNsTr_13 * iNsTr_15)
    *[MUL_f64_f64_1029_inst] (iNsTr_13_1014 iNsTr_15_1025) (iNsTr_16_1030) 
    $delay MUL_f64_f64_1029_inst 24
    // 		iNsTr_17 := (tmp11x_xi * iNsTr_16)
    //  file prog.aa, line 376
    // (tmp11x_xi * iNsTr_16)
    *[MUL_f64_f64_1034_inst] (tmp11x_xi_1002 iNsTr_16_1030) (iNsTr_17_1035) 
    $delay MUL_f64_f64_1034_inst 24
    // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    //  file prog.aa, line 377
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
    -[SUB_f64_f64_1040_inst] (type_cast_1038_wire_constant iNsTr_17_1035) (iNsTr_18_1041) 
    $delay SUB_f64_f64_1040_inst 24
    // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
    //  file prog.aa, line 378
    // (iNsTr_16 * iNsTr_18)
    *[MUL_f64_f64_1045_inst] (iNsTr_16_1030 iNsTr_18_1041) (iNsTr_19_1046) 
    $delay MUL_f64_f64_1045_inst 24
    // 		iNsTr_20 := (tmp11x_xi * iNsTr_19)
    //  file prog.aa, line 379
    // (tmp11x_xi * iNsTr_19)
    *[MUL_f64_f64_1050_inst] (tmp11x_xi_1002 iNsTr_19_1046) (iNsTr_20_1051) 
    $delay MUL_f64_f64_1050_inst 24
    // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    //  file prog.aa, line 380
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
    -[SUB_f64_f64_1056_inst] (type_cast_1054_wire_constant iNsTr_20_1051) (iNsTr_21_1057) 
    $delay SUB_f64_f64_1056_inst 24
    // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
    //  file prog.aa, line 381
    // (iNsTr_19 * iNsTr_21)
    *[MUL_f64_f64_1061_inst] (iNsTr_19_1046 iNsTr_21_1057) (iNsTr_22_1062) 
    $delay MUL_f64_f64_1061_inst 24
    // 		iNsTr_23 := (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 383
    // (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_1067_inst] (iNsTr_6_934 type_cast_1066_wire_constant) (iNsTr_23_1068) 
    $delay EQ_u64_u1_1067_inst 1
    // 		orx_xcondx_xi := (iNsTr_7 | iNsTr_23)
    //  file prog.aa, line 384
    // (iNsTr_7 | iNsTr_23)
    |[OR_u1_u1_1072_inst] (iNsTr_7_940 iNsTr_23_1068) (orx_xcondx_xi_1073) 
    $delay OR_u1_u1_1072_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 385
    ==0? [if_stmt_1074_branch] (orx_xcondx_xi_1073)
    // 		iNsTr_34 := (tmp11x_xi * iNsTr_22)
    //  file prog.aa, line 389
    // (tmp11x_xi * iNsTr_22)
    *[MUL_f64_f64_1084_inst] (tmp11x_xi_1002 iNsTr_22_1062) (iNsTr_34_1085) 
    $delay MUL_f64_f64_1084_inst 24
    // 		iNsTr_35 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 390
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1090_inst] (tmp17x_xi_918 type_cast_1089_wire_constant) (iNsTr_35_1091) 
    $delay AND_u64_u64_1090_inst 1
    // 		iNsTr_36 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
    //  file prog.aa, line 391
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
    -[SUB_f64_f64_1096_inst] (type_cast_1094_wire_constant iNsTr_34_1085) (iNsTr_36_1097) 
    $delay SUB_f64_f64_1096_inst 24
    // 		iNsTr_37 := (iNsTr_9 | iNsTr_35)
    //  file prog.aa, line 392
    // (iNsTr_9 | iNsTr_35)
    |[OR_u64_u64_1101_inst] (iNsTr_9_979 iNsTr_35_1091) (iNsTr_37_1102) 
    $delay OR_u64_u64_1101_inst 1
    // 		iNsTr_38 := (iNsTr_22 * iNsTr_36)
    //  file prog.aa, line 393
    // (iNsTr_22 * iNsTr_36)
    *[MUL_f64_f64_1106_inst] (iNsTr_22_1062 iNsTr_36_1097) (iNsTr_38_1107) 
    $delay MUL_f64_f64_1106_inst 24
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_37 )
    //  file prog.aa, line 394
    // ($bitcast ($float<11,52>) iNsTr_37 )
    # := [type_cast_1110_inst] (iNsTr_37_1102) (tmp13x_xi_1111) 
    $delay type_cast_1110_inst 1
    // 		iNsTr_39 := (tmp13x_xi * iNsTr_38)
    //  file prog.aa, line 395
    // (tmp13x_xi * iNsTr_38)
    *[MUL_f64_f64_1115_inst] (tmp13x_xi_1111 iNsTr_38_1107) (iNsTr_39_1116) 
    $delay MUL_f64_f64_1115_inst 24
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_39 )
    //  file prog.aa, line 396
    // ($bitcast ($uint<64>) iNsTr_39 )
    # := [type_cast_1119_inst] (iNsTr_39_1116) (phitmp19x_xi_1120) 
    $delay type_cast_1119_inst 1
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 397
    // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1125_inst] (phitmp19x_xi_1120 type_cast_1124_wire_constant) (phitmp21x_xi_1126) 
    $delay AND_u64_u64_1125_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 400
    // 			$phi iNsTr_28 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 401
    // ($cast ($uint<64>) phitmp21x_xi )
    # := [type_cast_1132_inst] (phitmp21x_xi_1126) (type_cast_1132_wire) 
    $delay type_cast_1132_inst 1
    $phi [phi_stmt_1129] (type_cast_1132_wire type_cast_1135_wire_constant) ( iNsTr_28_1129 )
    // 		iNsTr_29 := (tmp15x_xi ^ tmp17x_xi)
    //  file prog.aa, line 403
    // (tmp15x_xi ^ tmp17x_xi)
    ^[XOR_u64_u64_1140_inst] (tmp15x_xi_922 tmp17x_xi_918) (iNsTr_29_1141) 
    $delay XOR_u64_u64_1140_inst 1
    // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 404
    // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1146_inst] (iNsTr_29_1141 type_cast_1145_wire_constant) (iNsTr_30_1147) 
    $delay AND_u64_u64_1146_inst 1
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
    //  file prog.aa, line 405
    // (iNsTr_28 | iNsTr_30)
    |[OR_u64_u64_1151_inst] (iNsTr_28_1129 iNsTr_30_1147) (iNsTr_31_1152) 
    $delay OR_u64_u64_1151_inst 1
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_31 )
    //  file prog.aa, line 406
    // ($bitcast ($float<11,52>) iNsTr_31 )
    # := [type_cast_1155_inst] (iNsTr_31_1152) (tmp4x_xi_1156) 
    $delay type_cast_1155_inst 1
    // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 407
    // ($cast ($float<8,23>) tmp4x_xi )
    $F:=$F [type_cast_1159_inst] (tmp4x_xi_1156) (ret_val__)  
    $delay type_cast_1159_inst 1
  }
  // end data-path
  // 		iNsTr_0 := (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
  //  file prog.aa, line 343
  // (Lr * ($bitcast ($float<8,23>) _f4.000000e+00 ))
  MUL_f32_f32_895_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_895_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_895_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_895_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_895_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 * torque_ref)
  //  file prog.aa, line 344
  // (iNsTr_0 * torque_ref)
  MUL_f32_f32_900_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_900_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_900_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_900_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_900_Update/ca)
  // 		iNsTr_2 := (constant_1 * flux_rotor)
  //  file prog.aa, line 345
  // (constant_1 * flux_rotor)
  MUL_f32_f32_905_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_905_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_905_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_905_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/MUL_f32_f32_905_Update/ca)
  // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
  //  file prog.aa, line 346
  // ($cast ($float<11,52>) iNsTr_1 )
  type_cast_909_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_909_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_909_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_909_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_909_Update/ca)
  // 		iNsTr_4 := ($cast ($float<11,52>) iNsTr_2 )
  //  file prog.aa, line 347
  // ($cast ($float<11,52>) iNsTr_2 )
  type_cast_913_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_913_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_913_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_913_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_913_Update/ca)
  // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_3 )
  //  file prog.aa, line 348
  // ($bitcast ($uint<64>) iNsTr_3 )
  type_cast_917_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_917_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_917_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_917_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_917_Update/ca)
  // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_4 )
  //  file prog.aa, line 349
  // ($bitcast ($uint<64>) iNsTr_4 )
  type_cast_921_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_921_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_921_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_921_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/type_cast_921_Update/ca)
  // 		iNsTr_5 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 350
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_927_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_927_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_927_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_927_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_927_Update/ca)
  // 		iNsTr_6 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 351
  // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_933_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_933_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_933_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_933_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/AND_u64_u64_933_Update/ca)
  // 		iNsTr_7 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 353
  // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_939_inst <=> (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/EQ_u64_u1_939_Sample/rr branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/EQ_u64_u1_939_Update/cr) (branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/EQ_u64_u1_939_Sample/ra branch_block_stmt_890/assign_stmt_896_to_assign_stmt_940/EQ_u64_u1_939_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 354
  if_stmt_941_branch <=> (branch_block_stmt_890/if_stmt_941_eval_test/branch_req) (branch_block_stmt_890/if_stmt_941_else_link/else_choice_transition branch_block_stmt_890/if_stmt_941_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 356
  // 		iNsTr_25 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 358
  // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_952_inst <=> (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_952_Sample/rr branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_952_Update/cr) (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_952_Sample/ra branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_952_Update/ca)
  // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 359
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_958_inst <=> (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_958_Sample/rr branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_958_Update/cr) (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_958_Sample/ra branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_958_Update/ca)
  // 		iNsTr_26 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 360
  // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  ADD_u64_u64_964_inst <=> (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/ADD_u64_u64_964_Sample/rr branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/ADD_u64_u64_964_Update/cr) (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/ADD_u64_u64_964_Sample/ra branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/ADD_u64_u64_964_Update/ca)
  // 		phitmpx_xi := (iNsTr_26 - iNsTr_25)
  //  file prog.aa, line 361
  // (iNsTr_26 - iNsTr_25)
  SUB_u64_u64_969_inst <=> (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/SUB_u64_u64_969_Sample/rr branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/SUB_u64_u64_969_Update/cr) (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/SUB_u64_u64_969_Sample/ra branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/SUB_u64_u64_969_Update/ca)
  // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 362
  // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_975_inst <=> (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_975_Sample/rr branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_975_Update/cr) (branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_975_Sample/ra branch_block_stmt_890/assign_stmt_953_to_assign_stmt_976/AND_u64_u64_975_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 365
  // ($cast ($uint<64>) phitmp20x_xi )
  type_cast_982_inst <=> (branch_block_stmt_890/bb_1_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_982/SplitProtocol/Sample/rr branch_block_stmt_890/bb_1_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_982/SplitProtocol/Update/cr) (branch_block_stmt_890/bb_1_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_982/SplitProtocol/Sample/ra branch_block_stmt_890/bb_1_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_982/SplitProtocol/Update/ca)
  phi_stmt_979 <=> (branch_block_stmt_890/bb_1_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_req branch_block_stmt_890/bb_0_bb_2_PhiReq/phi_stmt_979/phi_stmt_979_req) (branch_block_stmt_890/merge_stmt_978_PhiAck/phi_stmt_979_ack)
  // 		iNsTr_10 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 368
  // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  OR_u64_u64_991_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u64_u64_991_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u64_u64_991_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u64_u64_991_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u64_u64_991_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 369
  // (iNsTr_10 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_997_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/AND_u64_u64_997_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/AND_u64_u64_997_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/AND_u64_u64_997_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/AND_u64_u64_997_Update/ca)
  // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_11 )
  //  file prog.aa, line 370
  // ($bitcast ($float<11,52>) iNsTr_11 )
  type_cast_1001_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/type_cast_1001_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/type_cast_1001_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/type_cast_1001_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/type_cast_1001_Update/ca)
  // 		iNsTr_12 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  //  file prog.aa, line 371
  // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  MUL_f64_f64_1007_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1007_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1007_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1007_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1007_Update/ca)
  // 		iNsTr_13 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
  //  file prog.aa, line 372
  // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_12)
  SUB_f64_f64_1013_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1013_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1013_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1013_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1013_Update/ca)
  // 		iNsTr_14 := (tmp11x_xi * iNsTr_13)
  //  file prog.aa, line 373
  // (tmp11x_xi * iNsTr_13)
  MUL_f64_f64_1018_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1018_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1018_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1018_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1018_Update/ca)
  // 		iNsTr_15 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
  //  file prog.aa, line 374
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_14)
  SUB_f64_f64_1024_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1024_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1024_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1024_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1024_Update/ca)
  // 		iNsTr_16 := (iNsTr_13 * iNsTr_15)
  //  file prog.aa, line 375
  // (iNsTr_13 * iNsTr_15)
  MUL_f64_f64_1029_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1029_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1029_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1029_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1029_Update/ca)
  // 		iNsTr_17 := (tmp11x_xi * iNsTr_16)
  //  file prog.aa, line 376
  // (tmp11x_xi * iNsTr_16)
  MUL_f64_f64_1034_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1034_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1034_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1034_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1034_Update/ca)
  // 		iNsTr_18 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
  //  file prog.aa, line 377
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_17)
  SUB_f64_f64_1040_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1040_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1040_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1040_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1040_Update/ca)
  // 		iNsTr_19 := (iNsTr_16 * iNsTr_18)
  //  file prog.aa, line 378
  // (iNsTr_16 * iNsTr_18)
  MUL_f64_f64_1045_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1045_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1045_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1045_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1045_Update/ca)
  // 		iNsTr_20 := (tmp11x_xi * iNsTr_19)
  //  file prog.aa, line 379
  // (tmp11x_xi * iNsTr_19)
  MUL_f64_f64_1050_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1050_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1050_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1050_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1050_Update/ca)
  // 		iNsTr_21 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
  //  file prog.aa, line 380
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_20)
  SUB_f64_f64_1056_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1056_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1056_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1056_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/SUB_f64_f64_1056_Update/ca)
  // 		iNsTr_22 := (iNsTr_19 * iNsTr_21)
  //  file prog.aa, line 381
  // (iNsTr_19 * iNsTr_21)
  MUL_f64_f64_1061_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1061_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1061_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1061_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/MUL_f64_f64_1061_Update/ca)
  // 		iNsTr_23 := (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 383
  // (iNsTr_6 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_1067_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/EQ_u64_u1_1067_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/EQ_u64_u1_1067_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/EQ_u64_u1_1067_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/EQ_u64_u1_1067_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_7 | iNsTr_23)
  //  file prog.aa, line 384
  // (iNsTr_7 | iNsTr_23)
  OR_u1_u1_1072_inst <=> (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u1_u1_1072_Sample/rr branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u1_u1_1072_Update/cr) (branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u1_u1_1072_Sample/ra branch_block_stmt_890/assign_stmt_992_to_assign_stmt_1073/OR_u1_u1_1072_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 385
  if_stmt_1074_branch <=> (branch_block_stmt_890/if_stmt_1074_eval_test/branch_req) (branch_block_stmt_890/if_stmt_1074_else_link/else_choice_transition branch_block_stmt_890/if_stmt_1074_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 387
  // 		iNsTr_34 := (tmp11x_xi * iNsTr_22)
  //  file prog.aa, line 389
  // (tmp11x_xi * iNsTr_22)
  MUL_f64_f64_1084_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1084_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1084_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1084_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1084_Update/ca)
  // 		iNsTr_35 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 390
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1090_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1090_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1090_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1090_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1090_Update/ca)
  // 		iNsTr_36 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
  //  file prog.aa, line 391
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_34)
  SUB_f64_f64_1096_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/SUB_f64_f64_1096_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/SUB_f64_f64_1096_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/SUB_f64_f64_1096_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/SUB_f64_f64_1096_Update/ca)
  // 		iNsTr_37 := (iNsTr_9 | iNsTr_35)
  //  file prog.aa, line 392
  // (iNsTr_9 | iNsTr_35)
  OR_u64_u64_1101_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/OR_u64_u64_1101_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/OR_u64_u64_1101_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/OR_u64_u64_1101_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/OR_u64_u64_1101_Update/ca)
  // 		iNsTr_38 := (iNsTr_22 * iNsTr_36)
  //  file prog.aa, line 393
  // (iNsTr_22 * iNsTr_36)
  MUL_f64_f64_1106_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1106_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1106_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1106_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1106_Update/ca)
  // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_37 )
  //  file prog.aa, line 394
  // ($bitcast ($float<11,52>) iNsTr_37 )
  type_cast_1110_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1110_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1110_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1110_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1110_Update/ca)
  // 		iNsTr_39 := (tmp13x_xi * iNsTr_38)
  //  file prog.aa, line 395
  // (tmp13x_xi * iNsTr_38)
  MUL_f64_f64_1115_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1115_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1115_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1115_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/MUL_f64_f64_1115_Update/ca)
  // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_39 )
  //  file prog.aa, line 396
  // ($bitcast ($uint<64>) iNsTr_39 )
  type_cast_1119_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1119_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1119_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1119_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/type_cast_1119_Update/ca)
  // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 397
  // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1125_inst <=> (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1125_Sample/rr branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1125_Update/cr) (branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1125_Sample/ra branch_block_stmt_890/assign_stmt_1085_to_assign_stmt_1126/AND_u64_u64_1125_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 400
  // ($cast ($uint<64>) phitmp21x_xi )
  type_cast_1132_inst <=> (branch_block_stmt_890/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_sources/type_cast_1132/SplitProtocol/Sample/rr branch_block_stmt_890/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_sources/type_cast_1132/SplitProtocol/Update/cr) (branch_block_stmt_890/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_sources/type_cast_1132/SplitProtocol/Sample/ra branch_block_stmt_890/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_sources/type_cast_1132/SplitProtocol/Update/ca)
  phi_stmt_1129 <=> (branch_block_stmt_890/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_req branch_block_stmt_890/bb_2_fdiv32x_xexit_PhiReq/phi_stmt_1129/phi_stmt_1129_req) (branch_block_stmt_890/merge_stmt_1128_PhiAck/phi_stmt_1129_ack)
  // 		iNsTr_29 := (tmp15x_xi ^ tmp17x_xi)
  //  file prog.aa, line 403
  // (tmp15x_xi ^ tmp17x_xi)
  XOR_u64_u64_1140_inst <=> (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/XOR_u64_u64_1140_Sample/rr branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/XOR_u64_u64_1140_Update/cr) (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/XOR_u64_u64_1140_Sample/ra branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/XOR_u64_u64_1140_Update/ca)
  // 		iNsTr_30 := (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 404
  // (iNsTr_29 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1146_inst <=> (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/AND_u64_u64_1146_Sample/rr branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/AND_u64_u64_1146_Update/cr) (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/AND_u64_u64_1146_Sample/ra branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/AND_u64_u64_1146_Update/ca)
  // 		iNsTr_31 := (iNsTr_28 | iNsTr_30)
  //  file prog.aa, line 405
  // (iNsTr_28 | iNsTr_30)
  OR_u64_u64_1151_inst <=> (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/OR_u64_u64_1151_Sample/rr branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/OR_u64_u64_1151_Update/cr) (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/OR_u64_u64_1151_Sample/ra branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/OR_u64_u64_1151_Update/ca)
  // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_31 )
  //  file prog.aa, line 406
  // ($bitcast ($float<11,52>) iNsTr_31 )
  type_cast_1155_inst <=> (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1155_Sample/rr branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1155_Update/cr) (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1155_Sample/ra branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1155_Update/ca)
  // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
  //  file prog.aa, line 407
  // ($cast ($float<8,23>) tmp4x_xi )
  type_cast_1159_inst <=> (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1159_Sample/rr branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1159_Update/cr) (branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1159_Sample/ra branch_block_stmt_890/assign_stmt_1141_to_assign_stmt_1160/type_cast_1159_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 409
}
$module [omega_calc] 
{
  $in Lm:$float<8,23>
  // can point into  foreign( $void )
  iq:$float<8,23>
  // can point into  foreign( $void )
  tau_r:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %omega_calc
  //  file prog.aa, line 245
  // pipe-declarations for block %omega_calc%body
  //  file prog.aa, line 250
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 265
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 274
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 296
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 309
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 318
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_593] // Branch Block  file prog.aa, line 250
    {
      $P [branch_block_stmt_593__entry__]
      branch_block_stmt_593__entry__ <-| ($entry)
      $P [branch_block_stmt_593__exit__]
      branch_block_stmt_593__exit__ |-> ($exit)
      $P [assign_stmt_599_to_assign_stmt_638__entry__] 
      $P [assign_stmt_599_to_assign_stmt_638__exit__] 
      $P [if_stmt_639__entry__] 
      $P [if_stmt_639__exit__] 
      $P [merge_stmt_645__entry__] 
      $P [merge_stmt_645__exit__] 
      $P [assign_stmt_651_to_assign_stmt_674__entry__] 
      $P [assign_stmt_651_to_assign_stmt_674__exit__] 
      $P [bb_1_bb_2]
      $P [merge_stmt_676__exit__] 
      $P [assign_stmt_690_to_assign_stmt_771__entry__] 
      $P [assign_stmt_690_to_assign_stmt_771__exit__] 
      $P [if_stmt_772__entry__] 
      $P [if_stmt_772__exit__] 
      $P [merge_stmt_778__entry__] 
      $P [merge_stmt_778__exit__] 
      $P [assign_stmt_783_to_assign_stmt_824__entry__] 
      $P [assign_stmt_783_to_assign_stmt_824__exit__] 
      $P [bb_3_fdiv32x_xexit]
      $P [merge_stmt_826__exit__] 
      $P [assign_stmt_839_to_assign_stmt_858__entry__] 
      $P [assign_stmt_839_to_assign_stmt_858__exit__] 
      $P [return__]
      $P [merge_stmt_860__exit__] 
      ::[assign_stmt_599_to_assign_stmt_638] 
      {
        // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        //  file prog.aa, line 253
        // Source expression
        // (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        $T[MUL_f32_f32_598_sample_start_] 
        $T[MUL_f32_f32_598_sample_completed_] 
        $T[MUL_f32_f32_598_update_start_] 
        $T[MUL_f32_f32_598_update_completed_] 
        // iq
        $T[R_iq_595_sample_start_] 
        $T[R_iq_595_sample_completed_] 
        $T[R_iq_595_update_start_] 
        $T[R_iq_595_update_completed_] 
        // reference to interface object
        R_iq_595_sample_start_ <-& ($entry)
        R_iq_595_sample_completed_ <-& (R_iq_595_sample_start_)
        R_iq_595_update_start_ <-& (R_iq_595_sample_completed_)
        R_iq_595_update_completed_ <-& (R_iq_595_update_start_)
        MUL_f32_f32_598_sample_start_ <-& (R_iq_595_update_completed_)
        ;;[MUL_f32_f32_598_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_598_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_598_sample_start_ &-> (MUL_f32_f32_598_Sample)
        MUL_f32_f32_598_sample_completed_ <-& (MUL_f32_f32_598_Sample)
        MUL_f32_f32_598_sample_completed_ &-> ($null)
        MUL_f32_f32_598_update_start_ &-> (MUL_f32_f32_598_Update)
        MUL_f32_f32_598_update_completed_ <-& (MUL_f32_f32_598_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (tau_r * flux_rotor)
        //  file prog.aa, line 254
        // Source expression
        // (tau_r * flux_rotor)
        $T[MUL_f32_f32_603_sample_start_] 
        $T[MUL_f32_f32_603_sample_completed_] 
        $T[MUL_f32_f32_603_update_start_] 
        $T[MUL_f32_f32_603_update_completed_] 
        // tau_r
        $T[R_tau_r_601_sample_start_] 
        $T[R_tau_r_601_sample_completed_] 
        $T[R_tau_r_601_update_start_] 
        $T[R_tau_r_601_update_completed_] 
        // reference to interface object
        R_tau_r_601_sample_start_ <-& ($entry)
        R_tau_r_601_sample_completed_ <-& (R_tau_r_601_sample_start_)
        R_tau_r_601_update_start_ <-& (R_tau_r_601_sample_completed_)
        R_tau_r_601_update_completed_ <-& (R_tau_r_601_update_start_)
        // flux_rotor
        $T[R_flux_rotor_602_sample_start_] 
        $T[R_flux_rotor_602_sample_completed_] 
        $T[R_flux_rotor_602_update_start_] 
        $T[R_flux_rotor_602_update_completed_] 
        // reference to interface object
        R_flux_rotor_602_sample_start_ <-& ($entry)
        R_flux_rotor_602_sample_completed_ <-& (R_flux_rotor_602_sample_start_)
        R_flux_rotor_602_update_start_ <-& (R_flux_rotor_602_sample_completed_)
        R_flux_rotor_602_update_completed_ <-& (R_flux_rotor_602_update_start_)
        MUL_f32_f32_603_sample_start_ <-& (R_tau_r_601_update_completed_)
        MUL_f32_f32_603_sample_start_ <-& (R_flux_rotor_602_update_completed_)
        ;;[MUL_f32_f32_603_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_603_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_603_sample_start_ &-> (MUL_f32_f32_603_Sample)
        MUL_f32_f32_603_sample_completed_ <-& (MUL_f32_f32_603_Sample)
        MUL_f32_f32_603_sample_completed_ &-> ($null)
        MUL_f32_f32_603_update_start_ &-> (MUL_f32_f32_603_Update)
        MUL_f32_f32_603_update_completed_ <-& (MUL_f32_f32_603_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := ($cast ($float<11,52>) iNsTr_0 )
        //  file prog.aa, line 255
        // Source expression
        // ($cast ($float<11,52>) iNsTr_0 )
        $T[type_cast_607_sample_start_] 
        $T[type_cast_607_sample_completed_] 
        $T[type_cast_607_update_start_] 
        $T[type_cast_607_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_606_sample_start_] 
        $T[R_iNsTr_0_606_sample_completed_] 
        $T[R_iNsTr_0_606_update_start_] 
        $T[R_iNsTr_0_606_update_completed_] 
        // implicit reference
        R_iNsTr_0_606_sample_start_ <-& (MUL_f32_f32_598_update_completed_)
        R_iNsTr_0_606_sample_completed_ <-& (R_iNsTr_0_606_sample_start_)
        R_iNsTr_0_606_update_start_ <-& (R_iNsTr_0_606_sample_completed_)
        R_iNsTr_0_606_update_completed_ <-& (R_iNsTr_0_606_update_start_)
        type_cast_607_sample_start_ <-& (R_iNsTr_0_606_update_completed_)
        ;;[type_cast_607_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_607_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_607_sample_start_ &-> (type_cast_607_Sample)
        type_cast_607_sample_completed_ <-& (type_cast_607_Sample)
        type_cast_607_sample_completed_ &-> ($null)
        type_cast_607_update_start_ &-> (type_cast_607_Update)
        type_cast_607_update_completed_ <-& (type_cast_607_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
        //  file prog.aa, line 256
        // Source expression
        // ($cast ($float<11,52>) iNsTr_1 )
        $T[type_cast_611_sample_start_] 
        $T[type_cast_611_sample_completed_] 
        $T[type_cast_611_update_start_] 
        $T[type_cast_611_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_610_sample_start_] 
        $T[R_iNsTr_1_610_sample_completed_] 
        $T[R_iNsTr_1_610_update_start_] 
        $T[R_iNsTr_1_610_update_completed_] 
        // implicit reference
        R_iNsTr_1_610_sample_start_ <-& (MUL_f32_f32_603_update_completed_)
        R_iNsTr_1_610_sample_completed_ <-& (R_iNsTr_1_610_sample_start_)
        R_iNsTr_1_610_update_start_ <-& (R_iNsTr_1_610_sample_completed_)
        R_iNsTr_1_610_update_completed_ <-& (R_iNsTr_1_610_update_start_)
        type_cast_611_sample_start_ <-& (R_iNsTr_1_610_update_completed_)
        ;;[type_cast_611_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_611_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_611_sample_start_ &-> (type_cast_611_Sample)
        type_cast_611_sample_completed_ <-& (type_cast_611_Sample)
        type_cast_611_sample_completed_ &-> ($null)
        type_cast_611_update_start_ &-> (type_cast_611_Update)
        type_cast_611_update_completed_ <-& (type_cast_611_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_2 )
        //  file prog.aa, line 257
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_2 )
        $T[type_cast_615_sample_start_] 
        $T[type_cast_615_sample_completed_] 
        $T[type_cast_615_update_start_] 
        $T[type_cast_615_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_614_sample_start_] 
        $T[R_iNsTr_2_614_sample_completed_] 
        $T[R_iNsTr_2_614_update_start_] 
        $T[R_iNsTr_2_614_update_completed_] 
        // implicit reference
        R_iNsTr_2_614_sample_start_ <-& (type_cast_607_update_completed_)
        R_iNsTr_2_614_sample_completed_ <-& (R_iNsTr_2_614_sample_start_)
        R_iNsTr_2_614_update_start_ <-& (R_iNsTr_2_614_sample_completed_)
        R_iNsTr_2_614_update_completed_ <-& (R_iNsTr_2_614_update_start_)
        type_cast_615_sample_start_ <-& (R_iNsTr_2_614_update_completed_)
        ;;[type_cast_615_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_615_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_615_sample_start_ &-> (type_cast_615_Sample)
        type_cast_615_sample_completed_ <-& (type_cast_615_Sample)
        type_cast_615_sample_completed_ &-> ($null)
        type_cast_615_update_start_ &-> (type_cast_615_Update)
        type_cast_615_update_completed_ <-& (type_cast_615_Update)
        // Target expression
        // (as target) tmp17x_xi
        // tmp17x_xi
        // implicit reference
        // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_3 )
        //  file prog.aa, line 258
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_3 )
        $T[type_cast_619_sample_start_] 
        $T[type_cast_619_sample_completed_] 
        $T[type_cast_619_update_start_] 
        $T[type_cast_619_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_618_sample_start_] 
        $T[R_iNsTr_3_618_sample_completed_] 
        $T[R_iNsTr_3_618_update_start_] 
        $T[R_iNsTr_3_618_update_completed_] 
        // implicit reference
        R_iNsTr_3_618_sample_start_ <-& (type_cast_611_update_completed_)
        R_iNsTr_3_618_sample_completed_ <-& (R_iNsTr_3_618_sample_start_)
        R_iNsTr_3_618_update_start_ <-& (R_iNsTr_3_618_sample_completed_)
        R_iNsTr_3_618_update_completed_ <-& (R_iNsTr_3_618_update_start_)
        type_cast_619_sample_start_ <-& (R_iNsTr_3_618_update_completed_)
        ;;[type_cast_619_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_619_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_619_sample_start_ &-> (type_cast_619_Sample)
        type_cast_619_sample_completed_ <-& (type_cast_619_Sample)
        type_cast_619_sample_completed_ &-> ($null)
        type_cast_619_update_start_ &-> (type_cast_619_Update)
        type_cast_619_update_completed_ <-& (type_cast_619_Update)
        // Target expression
        // (as target) tmp15x_xi
        // tmp15x_xi
        // implicit reference
        // 		iNsTr_4 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 259
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_625_sample_start_] 
        $T[AND_u64_u64_625_sample_completed_] 
        $T[AND_u64_u64_625_update_start_] 
        $T[AND_u64_u64_625_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_622_sample_start_] 
        $T[R_tmp17x_xi_622_sample_completed_] 
        $T[R_tmp17x_xi_622_update_start_] 
        $T[R_tmp17x_xi_622_update_completed_] 
        // implicit reference
        R_tmp17x_xi_622_sample_start_ <-& (type_cast_615_update_completed_)
        R_tmp17x_xi_622_sample_completed_ <-& (R_tmp17x_xi_622_sample_start_)
        R_tmp17x_xi_622_update_start_ <-& (R_tmp17x_xi_622_sample_completed_)
        R_tmp17x_xi_622_update_completed_ <-& (R_tmp17x_xi_622_update_start_)
        AND_u64_u64_625_sample_start_ <-& (R_tmp17x_xi_622_update_completed_)
        ;;[AND_u64_u64_625_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_625_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_625_sample_start_ &-> (AND_u64_u64_625_Sample)
        AND_u64_u64_625_sample_completed_ <-& (AND_u64_u64_625_Sample)
        AND_u64_u64_625_sample_completed_ &-> ($null)
        AND_u64_u64_625_update_start_ &-> (AND_u64_u64_625_Update)
        AND_u64_u64_625_update_completed_ <-& (AND_u64_u64_625_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 260
        // Source expression
        // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_631_sample_start_] 
        $T[AND_u64_u64_631_sample_completed_] 
        $T[AND_u64_u64_631_update_start_] 
        $T[AND_u64_u64_631_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_628_sample_start_] 
        $T[R_tmp15x_xi_628_sample_completed_] 
        $T[R_tmp15x_xi_628_update_start_] 
        $T[R_tmp15x_xi_628_update_completed_] 
        // implicit reference
        R_tmp15x_xi_628_sample_start_ <-& (type_cast_619_update_completed_)
        R_tmp15x_xi_628_sample_completed_ <-& (R_tmp15x_xi_628_sample_start_)
        R_tmp15x_xi_628_update_start_ <-& (R_tmp15x_xi_628_sample_completed_)
        R_tmp15x_xi_628_update_completed_ <-& (R_tmp15x_xi_628_update_start_)
        AND_u64_u64_631_sample_start_ <-& (R_tmp15x_xi_628_update_completed_)
        ;;[AND_u64_u64_631_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_631_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_631_sample_start_ &-> (AND_u64_u64_631_Sample)
        AND_u64_u64_631_sample_completed_ <-& (AND_u64_u64_631_Sample)
        AND_u64_u64_631_sample_completed_ &-> ($null)
        AND_u64_u64_631_update_start_ &-> (AND_u64_u64_631_Update)
        AND_u64_u64_631_update_completed_ <-& (AND_u64_u64_631_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 262
        // Source expression
        // (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_637_sample_start_] 
        $T[EQ_u64_u1_637_sample_completed_] 
        $T[EQ_u64_u1_637_update_start_] 
        $T[EQ_u64_u1_637_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_634_sample_start_] 
        $T[R_iNsTr_4_634_sample_completed_] 
        $T[R_iNsTr_4_634_update_start_] 
        $T[R_iNsTr_4_634_update_completed_] 
        // implicit reference
        R_iNsTr_4_634_sample_start_ <-& (AND_u64_u64_625_update_completed_)
        R_iNsTr_4_634_sample_completed_ <-& (R_iNsTr_4_634_sample_start_)
        R_iNsTr_4_634_update_start_ <-& (R_iNsTr_4_634_sample_completed_)
        R_iNsTr_4_634_update_completed_ <-& (R_iNsTr_4_634_update_start_)
        EQ_u64_u1_637_sample_start_ <-& (R_iNsTr_4_634_update_completed_)
        ;;[EQ_u64_u1_637_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_637_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_637_sample_start_ &-> (EQ_u64_u1_637_Sample)
        EQ_u64_u1_637_sample_completed_ <-& (EQ_u64_u1_637_Sample)
        EQ_u64_u1_637_sample_completed_ &-> ($null)
        EQ_u64_u1_637_update_start_ &-> (EQ_u64_u1_637_Update)
        EQ_u64_u1_637_update_completed_ <-& (EQ_u64_u1_637_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_599_to_assign_stmt_638__entry__ |-> (assign_stmt_599_to_assign_stmt_638)
      assign_stmt_599_to_assign_stmt_638__exit__ <-| (assign_stmt_599_to_assign_stmt_638)
      // if-statement  
      //  file prog.aa, line 263
      ;;[if_stmt_639_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_639__entry__ |-> (if_stmt_639_dead_link)
      if_stmt_639__exit__ <-| (if_stmt_639_dead_link)
      ;;[if_stmt_639_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_639__entry__ |-> (if_stmt_639_eval_test)
      $P [R_iNsTr_6_640_place]
      R_iNsTr_6_640_place <-| (if_stmt_639_eval_test)
      ;;[if_stmt_639_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_639_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_6_640_place |-> (if_stmt_639_if_link if_stmt_639_else_link)
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (if_stmt_639_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_639_else_link)
      ::[assign_stmt_651_to_assign_stmt_674] 
      {
        // 		iNsTr_24 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 267
        // Source expression
        // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_650_sample_start_] 
        $T[AND_u64_u64_650_sample_completed_] 
        $T[AND_u64_u64_650_update_start_] 
        $T[AND_u64_u64_650_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_647_sample_start_] 
        $T[R_tmp15x_xi_647_sample_completed_] 
        $T[R_tmp15x_xi_647_update_start_] 
        $T[R_tmp15x_xi_647_update_completed_] 
        // implicit reference
        R_tmp15x_xi_647_sample_start_ <-& ($entry)
        R_tmp15x_xi_647_sample_completed_ <-& (R_tmp15x_xi_647_sample_start_)
        R_tmp15x_xi_647_update_start_ <-& (R_tmp15x_xi_647_sample_completed_)
        R_tmp15x_xi_647_update_completed_ <-& (R_tmp15x_xi_647_update_start_)
        AND_u64_u64_650_sample_start_ <-& (R_tmp15x_xi_647_update_completed_)
        ;;[AND_u64_u64_650_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_650_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_650_sample_start_ &-> (AND_u64_u64_650_Sample)
        AND_u64_u64_650_sample_completed_ <-& (AND_u64_u64_650_Sample)
        AND_u64_u64_650_sample_completed_ &-> ($null)
        AND_u64_u64_650_update_start_ &-> (AND_u64_u64_650_Update)
        AND_u64_u64_650_update_completed_ <-& (AND_u64_u64_650_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 268
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_656_sample_start_] 
        $T[AND_u64_u64_656_sample_completed_] 
        $T[AND_u64_u64_656_update_start_] 
        $T[AND_u64_u64_656_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_653_sample_start_] 
        $T[R_tmp17x_xi_653_sample_completed_] 
        $T[R_tmp17x_xi_653_update_start_] 
        $T[R_tmp17x_xi_653_update_completed_] 
        // implicit reference
        R_tmp17x_xi_653_sample_start_ <-& ($entry)
        R_tmp17x_xi_653_sample_completed_ <-& (R_tmp17x_xi_653_sample_start_)
        R_tmp17x_xi_653_update_start_ <-& (R_tmp17x_xi_653_sample_completed_)
        R_tmp17x_xi_653_update_completed_ <-& (R_tmp17x_xi_653_update_start_)
        AND_u64_u64_656_sample_start_ <-& (R_tmp17x_xi_653_update_completed_)
        ;;[AND_u64_u64_656_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_656_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_656_sample_start_ &-> (AND_u64_u64_656_Sample)
        AND_u64_u64_656_sample_completed_ <-& (AND_u64_u64_656_Sample)
        AND_u64_u64_656_sample_completed_ &-> ($null)
        AND_u64_u64_656_update_start_ &-> (AND_u64_u64_656_Update)
        AND_u64_u64_656_update_completed_ <-& (AND_u64_u64_656_Update)
        // Target expression
        // (as target) tmp17x_xmaskx_xi
        // tmp17x_xmaskx_xi
        // implicit reference
        // 		iNsTr_25 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 269
        // Source expression
        // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[ADD_u64_u64_662_sample_start_] 
        $T[ADD_u64_u64_662_sample_completed_] 
        $T[ADD_u64_u64_662_update_start_] 
        $T[ADD_u64_u64_662_update_completed_] 
        // tmp17x_xmaskx_xi
        $T[R_tmp17x_xmaskx_xi_659_sample_start_] 
        $T[R_tmp17x_xmaskx_xi_659_sample_completed_] 
        $T[R_tmp17x_xmaskx_xi_659_update_start_] 
        $T[R_tmp17x_xmaskx_xi_659_update_completed_] 
        // implicit reference
        R_tmp17x_xmaskx_xi_659_sample_start_ <-& (AND_u64_u64_656_update_completed_)
        R_tmp17x_xmaskx_xi_659_sample_completed_ <-& (R_tmp17x_xmaskx_xi_659_sample_start_)
        R_tmp17x_xmaskx_xi_659_update_start_ <-& (R_tmp17x_xmaskx_xi_659_sample_completed_)
        R_tmp17x_xmaskx_xi_659_update_completed_ <-& (R_tmp17x_xmaskx_xi_659_update_start_)
        ADD_u64_u64_662_sample_start_ <-& (R_tmp17x_xmaskx_xi_659_update_completed_)
        ;;[ADD_u64_u64_662_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_662_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_662_sample_start_ &-> (ADD_u64_u64_662_Sample)
        ADD_u64_u64_662_sample_completed_ <-& (ADD_u64_u64_662_Sample)
        ADD_u64_u64_662_sample_completed_ &-> ($null)
        ADD_u64_u64_662_update_start_ &-> (ADD_u64_u64_662_Update)
        ADD_u64_u64_662_update_completed_ <-& (ADD_u64_u64_662_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		phitmpx_xi := (iNsTr_25 - iNsTr_24)
        //  file prog.aa, line 270
        // Source expression
        // (iNsTr_25 - iNsTr_24)
        $T[SUB_u64_u64_667_sample_start_] 
        $T[SUB_u64_u64_667_sample_completed_] 
        $T[SUB_u64_u64_667_update_start_] 
        $T[SUB_u64_u64_667_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_665_sample_start_] 
        $T[R_iNsTr_25_665_sample_completed_] 
        $T[R_iNsTr_25_665_update_start_] 
        $T[R_iNsTr_25_665_update_completed_] 
        // implicit reference
        R_iNsTr_25_665_sample_start_ <-& (ADD_u64_u64_662_update_completed_)
        R_iNsTr_25_665_sample_completed_ <-& (R_iNsTr_25_665_sample_start_)
        R_iNsTr_25_665_update_start_ <-& (R_iNsTr_25_665_sample_completed_)
        R_iNsTr_25_665_update_completed_ <-& (R_iNsTr_25_665_update_start_)
        // iNsTr_24
        $T[R_iNsTr_24_666_sample_start_] 
        $T[R_iNsTr_24_666_sample_completed_] 
        $T[R_iNsTr_24_666_update_start_] 
        $T[R_iNsTr_24_666_update_completed_] 
        // implicit reference
        R_iNsTr_24_666_sample_start_ <-& (AND_u64_u64_650_update_completed_)
        R_iNsTr_24_666_sample_completed_ <-& (R_iNsTr_24_666_sample_start_)
        R_iNsTr_24_666_update_start_ <-& (R_iNsTr_24_666_sample_completed_)
        R_iNsTr_24_666_update_completed_ <-& (R_iNsTr_24_666_update_start_)
        SUB_u64_u64_667_sample_start_ <-& (R_iNsTr_25_665_update_completed_)
        SUB_u64_u64_667_sample_start_ <-& (R_iNsTr_24_666_update_completed_)
        ;;[SUB_u64_u64_667_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_667_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_667_sample_start_ &-> (SUB_u64_u64_667_Sample)
        SUB_u64_u64_667_sample_completed_ <-& (SUB_u64_u64_667_Sample)
        SUB_u64_u64_667_sample_completed_ &-> ($null)
        SUB_u64_u64_667_update_start_ &-> (SUB_u64_u64_667_Update)
        SUB_u64_u64_667_update_completed_ <-& (SUB_u64_u64_667_Update)
        // Target expression
        // (as target) phitmpx_xi
        // phitmpx_xi
        // implicit reference
        // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 271
        // Source expression
        // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_673_sample_start_] 
        $T[AND_u64_u64_673_sample_completed_] 
        $T[AND_u64_u64_673_update_start_] 
        $T[AND_u64_u64_673_update_completed_] 
        // phitmpx_xi
        $T[R_phitmpx_xi_670_sample_start_] 
        $T[R_phitmpx_xi_670_sample_completed_] 
        $T[R_phitmpx_xi_670_update_start_] 
        $T[R_phitmpx_xi_670_update_completed_] 
        // implicit reference
        R_phitmpx_xi_670_sample_start_ <-& (SUB_u64_u64_667_update_completed_)
        R_phitmpx_xi_670_sample_completed_ <-& (R_phitmpx_xi_670_sample_start_)
        R_phitmpx_xi_670_update_start_ <-& (R_phitmpx_xi_670_sample_completed_)
        R_phitmpx_xi_670_update_completed_ <-& (R_phitmpx_xi_670_update_start_)
        AND_u64_u64_673_sample_start_ <-& (R_phitmpx_xi_670_update_completed_)
        ;;[AND_u64_u64_673_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_673_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_673_sample_start_ &-> (AND_u64_u64_673_Sample)
        AND_u64_u64_673_sample_completed_ <-& (AND_u64_u64_673_Sample)
        AND_u64_u64_673_sample_completed_ &-> ($null)
        AND_u64_u64_673_update_start_ &-> (AND_u64_u64_673_Update)
        AND_u64_u64_673_update_completed_ <-& (AND_u64_u64_673_Update)
        // Target expression
        // (as target) phitmp20x_xi
        // phitmp20x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_651_to_assign_stmt_674__entry__ |-> (assign_stmt_651_to_assign_stmt_674)
      assign_stmt_651_to_assign_stmt_674__exit__ <-| (assign_stmt_651_to_assign_stmt_674)
      ::[assign_stmt_690_to_assign_stmt_771] 
      {
        // 		iNsTr_9 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 277
        // Source expression
        // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[OR_u64_u64_689_sample_start_] 
        $T[OR_u64_u64_689_sample_completed_] 
        $T[OR_u64_u64_689_update_start_] 
        $T[OR_u64_u64_689_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_686_sample_start_] 
        $T[R_tmp15x_xi_686_sample_completed_] 
        $T[R_tmp15x_xi_686_update_start_] 
        $T[R_tmp15x_xi_686_update_completed_] 
        // implicit reference
        R_tmp15x_xi_686_sample_start_ <-& ($entry)
        R_tmp15x_xi_686_sample_completed_ <-& (R_tmp15x_xi_686_sample_start_)
        R_tmp15x_xi_686_update_start_ <-& (R_tmp15x_xi_686_sample_completed_)
        R_tmp15x_xi_686_update_completed_ <-& (R_tmp15x_xi_686_update_start_)
        OR_u64_u64_689_sample_start_ <-& (R_tmp15x_xi_686_update_completed_)
        ;;[OR_u64_u64_689_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_689_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_689_sample_start_ &-> (OR_u64_u64_689_Sample)
        OR_u64_u64_689_sample_completed_ <-& (OR_u64_u64_689_Sample)
        OR_u64_u64_689_sample_completed_ &-> ($null)
        OR_u64_u64_689_update_start_ &-> (OR_u64_u64_689_Update)
        OR_u64_u64_689_update_completed_ <-& (OR_u64_u64_689_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 278
        // Source expression
        // (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_695_sample_start_] 
        $T[AND_u64_u64_695_sample_completed_] 
        $T[AND_u64_u64_695_update_start_] 
        $T[AND_u64_u64_695_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_692_sample_start_] 
        $T[R_iNsTr_9_692_sample_completed_] 
        $T[R_iNsTr_9_692_update_start_] 
        $T[R_iNsTr_9_692_update_completed_] 
        // implicit reference
        R_iNsTr_9_692_sample_start_ <-& (OR_u64_u64_689_update_completed_)
        R_iNsTr_9_692_sample_completed_ <-& (R_iNsTr_9_692_sample_start_)
        R_iNsTr_9_692_update_start_ <-& (R_iNsTr_9_692_sample_completed_)
        R_iNsTr_9_692_update_completed_ <-& (R_iNsTr_9_692_update_start_)
        AND_u64_u64_695_sample_start_ <-& (R_iNsTr_9_692_update_completed_)
        ;;[AND_u64_u64_695_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_695_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_695_sample_start_ &-> (AND_u64_u64_695_Sample)
        AND_u64_u64_695_sample_completed_ <-& (AND_u64_u64_695_Sample)
        AND_u64_u64_695_sample_completed_ &-> ($null)
        AND_u64_u64_695_update_start_ &-> (AND_u64_u64_695_Update)
        AND_u64_u64_695_update_completed_ <-& (AND_u64_u64_695_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_10 )
        //  file prog.aa, line 279
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_10 )
        $T[type_cast_699_sample_start_] 
        $T[type_cast_699_sample_completed_] 
        $T[type_cast_699_update_start_] 
        $T[type_cast_699_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_698_sample_start_] 
        $T[R_iNsTr_10_698_sample_completed_] 
        $T[R_iNsTr_10_698_update_start_] 
        $T[R_iNsTr_10_698_update_completed_] 
        // implicit reference
        R_iNsTr_10_698_sample_start_ <-& (AND_u64_u64_695_update_completed_)
        R_iNsTr_10_698_sample_completed_ <-& (R_iNsTr_10_698_sample_start_)
        R_iNsTr_10_698_update_start_ <-& (R_iNsTr_10_698_sample_completed_)
        R_iNsTr_10_698_update_completed_ <-& (R_iNsTr_10_698_update_start_)
        type_cast_699_sample_start_ <-& (R_iNsTr_10_698_update_completed_)
        ;;[type_cast_699_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_699_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_699_sample_start_ &-> (type_cast_699_Sample)
        type_cast_699_sample_completed_ <-& (type_cast_699_Sample)
        type_cast_699_sample_completed_ &-> ($null)
        type_cast_699_update_start_ &-> (type_cast_699_Update)
        type_cast_699_update_completed_ <-& (type_cast_699_Update)
        // Target expression
        // (as target) tmp11x_xi
        // tmp11x_xi
        // implicit reference
        // 		iNsTr_11 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        //  file prog.aa, line 280
        // Source expression
        // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        $T[MUL_f64_f64_705_sample_start_] 
        $T[MUL_f64_f64_705_sample_completed_] 
        $T[MUL_f64_f64_705_update_start_] 
        $T[MUL_f64_f64_705_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_702_sample_start_] 
        $T[R_tmp11x_xi_702_sample_completed_] 
        $T[R_tmp11x_xi_702_update_start_] 
        $T[R_tmp11x_xi_702_update_completed_] 
        // implicit reference
        R_tmp11x_xi_702_sample_start_ <-& (type_cast_699_update_completed_)
        R_tmp11x_xi_702_sample_completed_ <-& (R_tmp11x_xi_702_sample_start_)
        R_tmp11x_xi_702_update_start_ <-& (R_tmp11x_xi_702_sample_completed_)
        R_tmp11x_xi_702_update_completed_ <-& (R_tmp11x_xi_702_update_start_)
        MUL_f64_f64_705_sample_start_ <-& (R_tmp11x_xi_702_update_completed_)
        ;;[MUL_f64_f64_705_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_705_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_705_sample_start_ &-> (MUL_f64_f64_705_Sample)
        MUL_f64_f64_705_sample_completed_ <-& (MUL_f64_f64_705_Sample)
        MUL_f64_f64_705_sample_completed_ &-> ($null)
        MUL_f64_f64_705_update_start_ &-> (MUL_f64_f64_705_Update)
        MUL_f64_f64_705_update_completed_ <-& (MUL_f64_f64_705_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
        //  file prog.aa, line 281
        // Source expression
        // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
        $T[SUB_f64_f64_711_sample_start_] 
        $T[SUB_f64_f64_711_sample_completed_] 
        $T[SUB_f64_f64_711_update_start_] 
        $T[SUB_f64_f64_711_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_710_sample_start_] 
        $T[R_iNsTr_11_710_sample_completed_] 
        $T[R_iNsTr_11_710_update_start_] 
        $T[R_iNsTr_11_710_update_completed_] 
        // implicit reference
        R_iNsTr_11_710_sample_start_ <-& (MUL_f64_f64_705_update_completed_)
        R_iNsTr_11_710_sample_completed_ <-& (R_iNsTr_11_710_sample_start_)
        R_iNsTr_11_710_update_start_ <-& (R_iNsTr_11_710_sample_completed_)
        R_iNsTr_11_710_update_completed_ <-& (R_iNsTr_11_710_update_start_)
        SUB_f64_f64_711_sample_start_ <-& (R_iNsTr_11_710_update_completed_)
        ;;[SUB_f64_f64_711_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_711_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_711_sample_start_ &-> (SUB_f64_f64_711_Sample)
        SUB_f64_f64_711_sample_completed_ <-& (SUB_f64_f64_711_Sample)
        SUB_f64_f64_711_sample_completed_ &-> ($null)
        SUB_f64_f64_711_update_start_ &-> (SUB_f64_f64_711_Update)
        SUB_f64_f64_711_update_completed_ <-& (SUB_f64_f64_711_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (tmp11x_xi * iNsTr_12)
        //  file prog.aa, line 282
        // Source expression
        // (tmp11x_xi * iNsTr_12)
        $T[MUL_f64_f64_716_sample_start_] 
        $T[MUL_f64_f64_716_sample_completed_] 
        $T[MUL_f64_f64_716_update_start_] 
        $T[MUL_f64_f64_716_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_714_sample_start_] 
        $T[R_tmp11x_xi_714_sample_completed_] 
        $T[R_tmp11x_xi_714_update_start_] 
        $T[R_tmp11x_xi_714_update_completed_] 
        // implicit reference
        R_tmp11x_xi_714_sample_start_ <-& (type_cast_699_update_completed_)
        R_tmp11x_xi_714_sample_completed_ <-& (R_tmp11x_xi_714_sample_start_)
        R_tmp11x_xi_714_update_start_ <-& (R_tmp11x_xi_714_sample_completed_)
        R_tmp11x_xi_714_update_completed_ <-& (R_tmp11x_xi_714_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_715_sample_start_] 
        $T[R_iNsTr_12_715_sample_completed_] 
        $T[R_iNsTr_12_715_update_start_] 
        $T[R_iNsTr_12_715_update_completed_] 
        // implicit reference
        R_iNsTr_12_715_sample_start_ <-& (SUB_f64_f64_711_update_completed_)
        R_iNsTr_12_715_sample_completed_ <-& (R_iNsTr_12_715_sample_start_)
        R_iNsTr_12_715_update_start_ <-& (R_iNsTr_12_715_sample_completed_)
        R_iNsTr_12_715_update_completed_ <-& (R_iNsTr_12_715_update_start_)
        MUL_f64_f64_716_sample_start_ <-& (R_tmp11x_xi_714_update_completed_)
        MUL_f64_f64_716_sample_start_ <-& (R_iNsTr_12_715_update_completed_)
        ;;[MUL_f64_f64_716_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_716_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_716_sample_start_ &-> (MUL_f64_f64_716_Sample)
        MUL_f64_f64_716_sample_completed_ <-& (MUL_f64_f64_716_Sample)
        MUL_f64_f64_716_sample_completed_ &-> ($null)
        MUL_f64_f64_716_update_start_ &-> (MUL_f64_f64_716_Update)
        MUL_f64_f64_716_update_completed_ <-& (MUL_f64_f64_716_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
        //  file prog.aa, line 283
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
        $T[SUB_f64_f64_722_sample_start_] 
        $T[SUB_f64_f64_722_sample_completed_] 
        $T[SUB_f64_f64_722_update_start_] 
        $T[SUB_f64_f64_722_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_721_sample_start_] 
        $T[R_iNsTr_13_721_sample_completed_] 
        $T[R_iNsTr_13_721_update_start_] 
        $T[R_iNsTr_13_721_update_completed_] 
        // implicit reference
        R_iNsTr_13_721_sample_start_ <-& (MUL_f64_f64_716_update_completed_)
        R_iNsTr_13_721_sample_completed_ <-& (R_iNsTr_13_721_sample_start_)
        R_iNsTr_13_721_update_start_ <-& (R_iNsTr_13_721_sample_completed_)
        R_iNsTr_13_721_update_completed_ <-& (R_iNsTr_13_721_update_start_)
        SUB_f64_f64_722_sample_start_ <-& (R_iNsTr_13_721_update_completed_)
        ;;[SUB_f64_f64_722_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_722_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_722_sample_start_ &-> (SUB_f64_f64_722_Sample)
        SUB_f64_f64_722_sample_completed_ <-& (SUB_f64_f64_722_Sample)
        SUB_f64_f64_722_sample_completed_ &-> ($null)
        SUB_f64_f64_722_update_start_ &-> (SUB_f64_f64_722_Update)
        SUB_f64_f64_722_update_completed_ <-& (SUB_f64_f64_722_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_12 * iNsTr_14)
        //  file prog.aa, line 284
        // Source expression
        // (iNsTr_12 * iNsTr_14)
        $T[MUL_f64_f64_727_sample_start_] 
        $T[MUL_f64_f64_727_sample_completed_] 
        $T[MUL_f64_f64_727_update_start_] 
        $T[MUL_f64_f64_727_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_725_sample_start_] 
        $T[R_iNsTr_12_725_sample_completed_] 
        $T[R_iNsTr_12_725_update_start_] 
        $T[R_iNsTr_12_725_update_completed_] 
        // implicit reference
        R_iNsTr_12_725_sample_start_ <-& (SUB_f64_f64_711_update_completed_)
        R_iNsTr_12_725_sample_completed_ <-& (R_iNsTr_12_725_sample_start_)
        R_iNsTr_12_725_update_start_ <-& (R_iNsTr_12_725_sample_completed_)
        R_iNsTr_12_725_update_completed_ <-& (R_iNsTr_12_725_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_726_sample_start_] 
        $T[R_iNsTr_14_726_sample_completed_] 
        $T[R_iNsTr_14_726_update_start_] 
        $T[R_iNsTr_14_726_update_completed_] 
        // implicit reference
        R_iNsTr_14_726_sample_start_ <-& (SUB_f64_f64_722_update_completed_)
        R_iNsTr_14_726_sample_completed_ <-& (R_iNsTr_14_726_sample_start_)
        R_iNsTr_14_726_update_start_ <-& (R_iNsTr_14_726_sample_completed_)
        R_iNsTr_14_726_update_completed_ <-& (R_iNsTr_14_726_update_start_)
        MUL_f64_f64_727_sample_start_ <-& (R_iNsTr_12_725_update_completed_)
        MUL_f64_f64_727_sample_start_ <-& (R_iNsTr_14_726_update_completed_)
        ;;[MUL_f64_f64_727_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_727_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_727_sample_start_ &-> (MUL_f64_f64_727_Sample)
        MUL_f64_f64_727_sample_completed_ <-& (MUL_f64_f64_727_Sample)
        MUL_f64_f64_727_sample_completed_ &-> ($null)
        MUL_f64_f64_727_update_start_ &-> (MUL_f64_f64_727_Update)
        MUL_f64_f64_727_update_completed_ <-& (MUL_f64_f64_727_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (tmp11x_xi * iNsTr_15)
        //  file prog.aa, line 285
        // Source expression
        // (tmp11x_xi * iNsTr_15)
        $T[MUL_f64_f64_732_sample_start_] 
        $T[MUL_f64_f64_732_sample_completed_] 
        $T[MUL_f64_f64_732_update_start_] 
        $T[MUL_f64_f64_732_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_730_sample_start_] 
        $T[R_tmp11x_xi_730_sample_completed_] 
        $T[R_tmp11x_xi_730_update_start_] 
        $T[R_tmp11x_xi_730_update_completed_] 
        // implicit reference
        R_tmp11x_xi_730_sample_start_ <-& (type_cast_699_update_completed_)
        R_tmp11x_xi_730_sample_completed_ <-& (R_tmp11x_xi_730_sample_start_)
        R_tmp11x_xi_730_update_start_ <-& (R_tmp11x_xi_730_sample_completed_)
        R_tmp11x_xi_730_update_completed_ <-& (R_tmp11x_xi_730_update_start_)
        // iNsTr_15
        $T[R_iNsTr_15_731_sample_start_] 
        $T[R_iNsTr_15_731_sample_completed_] 
        $T[R_iNsTr_15_731_update_start_] 
        $T[R_iNsTr_15_731_update_completed_] 
        // implicit reference
        R_iNsTr_15_731_sample_start_ <-& (MUL_f64_f64_727_update_completed_)
        R_iNsTr_15_731_sample_completed_ <-& (R_iNsTr_15_731_sample_start_)
        R_iNsTr_15_731_update_start_ <-& (R_iNsTr_15_731_sample_completed_)
        R_iNsTr_15_731_update_completed_ <-& (R_iNsTr_15_731_update_start_)
        MUL_f64_f64_732_sample_start_ <-& (R_tmp11x_xi_730_update_completed_)
        MUL_f64_f64_732_sample_start_ <-& (R_iNsTr_15_731_update_completed_)
        ;;[MUL_f64_f64_732_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_732_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_732_sample_start_ &-> (MUL_f64_f64_732_Sample)
        MUL_f64_f64_732_sample_completed_ <-& (MUL_f64_f64_732_Sample)
        MUL_f64_f64_732_sample_completed_ &-> ($null)
        MUL_f64_f64_732_update_start_ &-> (MUL_f64_f64_732_Update)
        MUL_f64_f64_732_update_completed_ <-& (MUL_f64_f64_732_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
        //  file prog.aa, line 286
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
        $T[SUB_f64_f64_738_sample_start_] 
        $T[SUB_f64_f64_738_sample_completed_] 
        $T[SUB_f64_f64_738_update_start_] 
        $T[SUB_f64_f64_738_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_737_sample_start_] 
        $T[R_iNsTr_16_737_sample_completed_] 
        $T[R_iNsTr_16_737_update_start_] 
        $T[R_iNsTr_16_737_update_completed_] 
        // implicit reference
        R_iNsTr_16_737_sample_start_ <-& (MUL_f64_f64_732_update_completed_)
        R_iNsTr_16_737_sample_completed_ <-& (R_iNsTr_16_737_sample_start_)
        R_iNsTr_16_737_update_start_ <-& (R_iNsTr_16_737_sample_completed_)
        R_iNsTr_16_737_update_completed_ <-& (R_iNsTr_16_737_update_start_)
        SUB_f64_f64_738_sample_start_ <-& (R_iNsTr_16_737_update_completed_)
        ;;[SUB_f64_f64_738_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_738_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_738_sample_start_ &-> (SUB_f64_f64_738_Sample)
        SUB_f64_f64_738_sample_completed_ <-& (SUB_f64_f64_738_Sample)
        SUB_f64_f64_738_sample_completed_ &-> ($null)
        SUB_f64_f64_738_update_start_ &-> (SUB_f64_f64_738_Update)
        SUB_f64_f64_738_update_completed_ <-& (SUB_f64_f64_738_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_15 * iNsTr_17)
        //  file prog.aa, line 287
        // Source expression
        // (iNsTr_15 * iNsTr_17)
        $T[MUL_f64_f64_743_sample_start_] 
        $T[MUL_f64_f64_743_sample_completed_] 
        $T[MUL_f64_f64_743_update_start_] 
        $T[MUL_f64_f64_743_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_741_sample_start_] 
        $T[R_iNsTr_15_741_sample_completed_] 
        $T[R_iNsTr_15_741_update_start_] 
        $T[R_iNsTr_15_741_update_completed_] 
        // implicit reference
        R_iNsTr_15_741_sample_start_ <-& (MUL_f64_f64_727_update_completed_)
        R_iNsTr_15_741_sample_completed_ <-& (R_iNsTr_15_741_sample_start_)
        R_iNsTr_15_741_update_start_ <-& (R_iNsTr_15_741_sample_completed_)
        R_iNsTr_15_741_update_completed_ <-& (R_iNsTr_15_741_update_start_)
        // iNsTr_17
        $T[R_iNsTr_17_742_sample_start_] 
        $T[R_iNsTr_17_742_sample_completed_] 
        $T[R_iNsTr_17_742_update_start_] 
        $T[R_iNsTr_17_742_update_completed_] 
        // implicit reference
        R_iNsTr_17_742_sample_start_ <-& (SUB_f64_f64_738_update_completed_)
        R_iNsTr_17_742_sample_completed_ <-& (R_iNsTr_17_742_sample_start_)
        R_iNsTr_17_742_update_start_ <-& (R_iNsTr_17_742_sample_completed_)
        R_iNsTr_17_742_update_completed_ <-& (R_iNsTr_17_742_update_start_)
        MUL_f64_f64_743_sample_start_ <-& (R_iNsTr_15_741_update_completed_)
        MUL_f64_f64_743_sample_start_ <-& (R_iNsTr_17_742_update_completed_)
        ;;[MUL_f64_f64_743_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_743_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_743_sample_start_ &-> (MUL_f64_f64_743_Sample)
        MUL_f64_f64_743_sample_completed_ <-& (MUL_f64_f64_743_Sample)
        MUL_f64_f64_743_sample_completed_ &-> ($null)
        MUL_f64_f64_743_update_start_ &-> (MUL_f64_f64_743_Update)
        MUL_f64_f64_743_update_completed_ <-& (MUL_f64_f64_743_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (tmp11x_xi * iNsTr_18)
        //  file prog.aa, line 288
        // Source expression
        // (tmp11x_xi * iNsTr_18)
        $T[MUL_f64_f64_748_sample_start_] 
        $T[MUL_f64_f64_748_sample_completed_] 
        $T[MUL_f64_f64_748_update_start_] 
        $T[MUL_f64_f64_748_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_746_sample_start_] 
        $T[R_tmp11x_xi_746_sample_completed_] 
        $T[R_tmp11x_xi_746_update_start_] 
        $T[R_tmp11x_xi_746_update_completed_] 
        // implicit reference
        R_tmp11x_xi_746_sample_start_ <-& (type_cast_699_update_completed_)
        R_tmp11x_xi_746_sample_completed_ <-& (R_tmp11x_xi_746_sample_start_)
        R_tmp11x_xi_746_update_start_ <-& (R_tmp11x_xi_746_sample_completed_)
        R_tmp11x_xi_746_update_completed_ <-& (R_tmp11x_xi_746_update_start_)
        // iNsTr_18
        $T[R_iNsTr_18_747_sample_start_] 
        $T[R_iNsTr_18_747_sample_completed_] 
        $T[R_iNsTr_18_747_update_start_] 
        $T[R_iNsTr_18_747_update_completed_] 
        // implicit reference
        R_iNsTr_18_747_sample_start_ <-& (MUL_f64_f64_743_update_completed_)
        R_iNsTr_18_747_sample_completed_ <-& (R_iNsTr_18_747_sample_start_)
        R_iNsTr_18_747_update_start_ <-& (R_iNsTr_18_747_sample_completed_)
        R_iNsTr_18_747_update_completed_ <-& (R_iNsTr_18_747_update_start_)
        MUL_f64_f64_748_sample_start_ <-& (R_tmp11x_xi_746_update_completed_)
        MUL_f64_f64_748_sample_start_ <-& (R_iNsTr_18_747_update_completed_)
        ;;[MUL_f64_f64_748_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_748_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_748_sample_start_ &-> (MUL_f64_f64_748_Sample)
        MUL_f64_f64_748_sample_completed_ <-& (MUL_f64_f64_748_Sample)
        MUL_f64_f64_748_sample_completed_ &-> ($null)
        MUL_f64_f64_748_update_start_ &-> (MUL_f64_f64_748_Update)
        MUL_f64_f64_748_update_completed_ <-& (MUL_f64_f64_748_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
        //  file prog.aa, line 289
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
        $T[SUB_f64_f64_754_sample_start_] 
        $T[SUB_f64_f64_754_sample_completed_] 
        $T[SUB_f64_f64_754_update_start_] 
        $T[SUB_f64_f64_754_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_753_sample_start_] 
        $T[R_iNsTr_19_753_sample_completed_] 
        $T[R_iNsTr_19_753_update_start_] 
        $T[R_iNsTr_19_753_update_completed_] 
        // implicit reference
        R_iNsTr_19_753_sample_start_ <-& (MUL_f64_f64_748_update_completed_)
        R_iNsTr_19_753_sample_completed_ <-& (R_iNsTr_19_753_sample_start_)
        R_iNsTr_19_753_update_start_ <-& (R_iNsTr_19_753_sample_completed_)
        R_iNsTr_19_753_update_completed_ <-& (R_iNsTr_19_753_update_start_)
        SUB_f64_f64_754_sample_start_ <-& (R_iNsTr_19_753_update_completed_)
        ;;[SUB_f64_f64_754_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_754_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_754_sample_start_ &-> (SUB_f64_f64_754_Sample)
        SUB_f64_f64_754_sample_completed_ <-& (SUB_f64_f64_754_Sample)
        SUB_f64_f64_754_sample_completed_ &-> ($null)
        SUB_f64_f64_754_update_start_ &-> (SUB_f64_f64_754_Update)
        SUB_f64_f64_754_update_completed_ <-& (SUB_f64_f64_754_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (iNsTr_18 * iNsTr_20)
        //  file prog.aa, line 290
        // Source expression
        // (iNsTr_18 * iNsTr_20)
        $T[MUL_f64_f64_759_sample_start_] 
        $T[MUL_f64_f64_759_sample_completed_] 
        $T[MUL_f64_f64_759_update_start_] 
        $T[MUL_f64_f64_759_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_757_sample_start_] 
        $T[R_iNsTr_18_757_sample_completed_] 
        $T[R_iNsTr_18_757_update_start_] 
        $T[R_iNsTr_18_757_update_completed_] 
        // implicit reference
        R_iNsTr_18_757_sample_start_ <-& (MUL_f64_f64_743_update_completed_)
        R_iNsTr_18_757_sample_completed_ <-& (R_iNsTr_18_757_sample_start_)
        R_iNsTr_18_757_update_start_ <-& (R_iNsTr_18_757_sample_completed_)
        R_iNsTr_18_757_update_completed_ <-& (R_iNsTr_18_757_update_start_)
        // iNsTr_20
        $T[R_iNsTr_20_758_sample_start_] 
        $T[R_iNsTr_20_758_sample_completed_] 
        $T[R_iNsTr_20_758_update_start_] 
        $T[R_iNsTr_20_758_update_completed_] 
        // implicit reference
        R_iNsTr_20_758_sample_start_ <-& (SUB_f64_f64_754_update_completed_)
        R_iNsTr_20_758_sample_completed_ <-& (R_iNsTr_20_758_sample_start_)
        R_iNsTr_20_758_update_start_ <-& (R_iNsTr_20_758_sample_completed_)
        R_iNsTr_20_758_update_completed_ <-& (R_iNsTr_20_758_update_start_)
        MUL_f64_f64_759_sample_start_ <-& (R_iNsTr_18_757_update_completed_)
        MUL_f64_f64_759_sample_start_ <-& (R_iNsTr_20_758_update_completed_)
        ;;[MUL_f64_f64_759_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_759_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_759_sample_start_ &-> (MUL_f64_f64_759_Sample)
        MUL_f64_f64_759_sample_completed_ <-& (MUL_f64_f64_759_Sample)
        MUL_f64_f64_759_sample_completed_ &-> ($null)
        MUL_f64_f64_759_update_start_ &-> (MUL_f64_f64_759_Update)
        MUL_f64_f64_759_update_completed_ <-& (MUL_f64_f64_759_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 292
        // Source expression
        // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_765_sample_start_] 
        $T[EQ_u64_u1_765_sample_completed_] 
        $T[EQ_u64_u1_765_update_start_] 
        $T[EQ_u64_u1_765_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_762_sample_start_] 
        $T[R_iNsTr_5_762_sample_completed_] 
        $T[R_iNsTr_5_762_update_start_] 
        $T[R_iNsTr_5_762_update_completed_] 
        // implicit reference
        R_iNsTr_5_762_sample_start_ <-& ($entry)
        R_iNsTr_5_762_sample_completed_ <-& (R_iNsTr_5_762_sample_start_)
        R_iNsTr_5_762_update_start_ <-& (R_iNsTr_5_762_sample_completed_)
        R_iNsTr_5_762_update_completed_ <-& (R_iNsTr_5_762_update_start_)
        EQ_u64_u1_765_sample_start_ <-& (R_iNsTr_5_762_update_completed_)
        ;;[EQ_u64_u1_765_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_765_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_765_sample_start_ &-> (EQ_u64_u1_765_Sample)
        EQ_u64_u1_765_sample_completed_ <-& (EQ_u64_u1_765_Sample)
        EQ_u64_u1_765_sample_completed_ &-> ($null)
        EQ_u64_u1_765_update_start_ &-> (EQ_u64_u1_765_Update)
        EQ_u64_u1_765_update_completed_ <-& (EQ_u64_u1_765_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_6 | iNsTr_22)
        //  file prog.aa, line 293
        // Source expression
        // (iNsTr_6 | iNsTr_22)
        $T[OR_u1_u1_770_sample_start_] 
        $T[OR_u1_u1_770_sample_completed_] 
        $T[OR_u1_u1_770_update_start_] 
        $T[OR_u1_u1_770_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_768_sample_start_] 
        $T[R_iNsTr_6_768_sample_completed_] 
        $T[R_iNsTr_6_768_update_start_] 
        $T[R_iNsTr_6_768_update_completed_] 
        // implicit reference
        R_iNsTr_6_768_sample_start_ <-& ($entry)
        R_iNsTr_6_768_sample_completed_ <-& (R_iNsTr_6_768_sample_start_)
        R_iNsTr_6_768_update_start_ <-& (R_iNsTr_6_768_sample_completed_)
        R_iNsTr_6_768_update_completed_ <-& (R_iNsTr_6_768_update_start_)
        // iNsTr_22
        $T[R_iNsTr_22_769_sample_start_] 
        $T[R_iNsTr_22_769_sample_completed_] 
        $T[R_iNsTr_22_769_update_start_] 
        $T[R_iNsTr_22_769_update_completed_] 
        // implicit reference
        R_iNsTr_22_769_sample_start_ <-& (EQ_u64_u1_765_update_completed_)
        R_iNsTr_22_769_sample_completed_ <-& (R_iNsTr_22_769_sample_start_)
        R_iNsTr_22_769_update_start_ <-& (R_iNsTr_22_769_sample_completed_)
        R_iNsTr_22_769_update_completed_ <-& (R_iNsTr_22_769_update_start_)
        OR_u1_u1_770_sample_start_ <-& (R_iNsTr_6_768_update_completed_)
        OR_u1_u1_770_sample_start_ <-& (R_iNsTr_22_769_update_completed_)
        ;;[OR_u1_u1_770_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_770_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_770_sample_start_ &-> (OR_u1_u1_770_Sample)
        OR_u1_u1_770_sample_completed_ <-& (OR_u1_u1_770_Sample)
        OR_u1_u1_770_sample_completed_ &-> ($null)
        OR_u1_u1_770_update_start_ &-> (OR_u1_u1_770_Update)
        OR_u1_u1_770_update_completed_ <-& (OR_u1_u1_770_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_690_to_assign_stmt_771__entry__ |-> (assign_stmt_690_to_assign_stmt_771)
      assign_stmt_690_to_assign_stmt_771__exit__ <-| (assign_stmt_690_to_assign_stmt_771)
      // if-statement  
      //  file prog.aa, line 294
      ;;[if_stmt_772_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_772__entry__ |-> (if_stmt_772_dead_link)
      if_stmt_772__exit__ <-| (if_stmt_772_dead_link)
      ;;[if_stmt_772_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_772__entry__ |-> (if_stmt_772_eval_test)
      $P [R_orx_xcondx_xi_773_place]
      R_orx_xcondx_xi_773_place <-| (if_stmt_772_eval_test)
      ;;[if_stmt_772_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_772_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_773_place |-> (if_stmt_772_if_link if_stmt_772_else_link)
      $P [bb_2_fdiv32x_xexit]
      bb_2_fdiv32x_xexit <-| (if_stmt_772_if_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_772_else_link)
      ::[assign_stmt_783_to_assign_stmt_824] 
      {
        // 		iNsTr_33 := (tmp11x_xi * iNsTr_21)
        //  file prog.aa, line 298
        // Source expression
        // (tmp11x_xi * iNsTr_21)
        $T[MUL_f64_f64_782_sample_start_] 
        $T[MUL_f64_f64_782_sample_completed_] 
        $T[MUL_f64_f64_782_update_start_] 
        $T[MUL_f64_f64_782_update_completed_] 
        // tmp11x_xi
        $T[R_tmp11x_xi_780_sample_start_] 
        $T[R_tmp11x_xi_780_sample_completed_] 
        $T[R_tmp11x_xi_780_update_start_] 
        $T[R_tmp11x_xi_780_update_completed_] 
        // implicit reference
        R_tmp11x_xi_780_sample_start_ <-& ($entry)
        R_tmp11x_xi_780_sample_completed_ <-& (R_tmp11x_xi_780_sample_start_)
        R_tmp11x_xi_780_update_start_ <-& (R_tmp11x_xi_780_sample_completed_)
        R_tmp11x_xi_780_update_completed_ <-& (R_tmp11x_xi_780_update_start_)
        // iNsTr_21
        $T[R_iNsTr_21_781_sample_start_] 
        $T[R_iNsTr_21_781_sample_completed_] 
        $T[R_iNsTr_21_781_update_start_] 
        $T[R_iNsTr_21_781_update_completed_] 
        // implicit reference
        R_iNsTr_21_781_sample_start_ <-& ($entry)
        R_iNsTr_21_781_sample_completed_ <-& (R_iNsTr_21_781_sample_start_)
        R_iNsTr_21_781_update_start_ <-& (R_iNsTr_21_781_sample_completed_)
        R_iNsTr_21_781_update_completed_ <-& (R_iNsTr_21_781_update_start_)
        MUL_f64_f64_782_sample_start_ <-& (R_tmp11x_xi_780_update_completed_)
        MUL_f64_f64_782_sample_start_ <-& (R_iNsTr_21_781_update_completed_)
        ;;[MUL_f64_f64_782_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_782_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_782_sample_start_ &-> (MUL_f64_f64_782_Sample)
        MUL_f64_f64_782_sample_completed_ <-& (MUL_f64_f64_782_Sample)
        MUL_f64_f64_782_sample_completed_ &-> ($null)
        MUL_f64_f64_782_update_start_ &-> (MUL_f64_f64_782_Update)
        MUL_f64_f64_782_update_completed_ <-& (MUL_f64_f64_782_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 299
        // Source expression
        // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_788_sample_start_] 
        $T[AND_u64_u64_788_sample_completed_] 
        $T[AND_u64_u64_788_update_start_] 
        $T[AND_u64_u64_788_update_completed_] 
        // tmp17x_xi
        $T[R_tmp17x_xi_785_sample_start_] 
        $T[R_tmp17x_xi_785_sample_completed_] 
        $T[R_tmp17x_xi_785_update_start_] 
        $T[R_tmp17x_xi_785_update_completed_] 
        // implicit reference
        R_tmp17x_xi_785_sample_start_ <-& ($entry)
        R_tmp17x_xi_785_sample_completed_ <-& (R_tmp17x_xi_785_sample_start_)
        R_tmp17x_xi_785_update_start_ <-& (R_tmp17x_xi_785_sample_completed_)
        R_tmp17x_xi_785_update_completed_ <-& (R_tmp17x_xi_785_update_start_)
        AND_u64_u64_788_sample_start_ <-& (R_tmp17x_xi_785_update_completed_)
        ;;[AND_u64_u64_788_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_788_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_788_sample_start_ &-> (AND_u64_u64_788_Sample)
        AND_u64_u64_788_sample_completed_ <-& (AND_u64_u64_788_Sample)
        AND_u64_u64_788_sample_completed_ &-> ($null)
        AND_u64_u64_788_update_start_ &-> (AND_u64_u64_788_Update)
        AND_u64_u64_788_update_completed_ <-& (AND_u64_u64_788_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		iNsTr_35 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
        //  file prog.aa, line 300
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
        $T[SUB_f64_f64_794_sample_start_] 
        $T[SUB_f64_f64_794_sample_completed_] 
        $T[SUB_f64_f64_794_update_start_] 
        $T[SUB_f64_f64_794_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_793_sample_start_] 
        $T[R_iNsTr_33_793_sample_completed_] 
        $T[R_iNsTr_33_793_update_start_] 
        $T[R_iNsTr_33_793_update_completed_] 
        // implicit reference
        R_iNsTr_33_793_sample_start_ <-& (MUL_f64_f64_782_update_completed_)
        R_iNsTr_33_793_sample_completed_ <-& (R_iNsTr_33_793_sample_start_)
        R_iNsTr_33_793_update_start_ <-& (R_iNsTr_33_793_sample_completed_)
        R_iNsTr_33_793_update_completed_ <-& (R_iNsTr_33_793_update_start_)
        SUB_f64_f64_794_sample_start_ <-& (R_iNsTr_33_793_update_completed_)
        ;;[SUB_f64_f64_794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_794_sample_start_ &-> (SUB_f64_f64_794_Sample)
        SUB_f64_f64_794_sample_completed_ <-& (SUB_f64_f64_794_Sample)
        SUB_f64_f64_794_sample_completed_ &-> ($null)
        SUB_f64_f64_794_update_start_ &-> (SUB_f64_f64_794_Update)
        SUB_f64_f64_794_update_completed_ <-& (SUB_f64_f64_794_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (iNsTr_8 | iNsTr_34)
        //  file prog.aa, line 301
        // Source expression
        // (iNsTr_8 | iNsTr_34)
        $T[OR_u64_u64_799_sample_start_] 
        $T[OR_u64_u64_799_sample_completed_] 
        $T[OR_u64_u64_799_update_start_] 
        $T[OR_u64_u64_799_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_797_sample_start_] 
        $T[R_iNsTr_8_797_sample_completed_] 
        $T[R_iNsTr_8_797_update_start_] 
        $T[R_iNsTr_8_797_update_completed_] 
        // implicit reference
        R_iNsTr_8_797_sample_start_ <-& ($entry)
        R_iNsTr_8_797_sample_completed_ <-& (R_iNsTr_8_797_sample_start_)
        R_iNsTr_8_797_update_start_ <-& (R_iNsTr_8_797_sample_completed_)
        R_iNsTr_8_797_update_completed_ <-& (R_iNsTr_8_797_update_start_)
        // iNsTr_34
        $T[R_iNsTr_34_798_sample_start_] 
        $T[R_iNsTr_34_798_sample_completed_] 
        $T[R_iNsTr_34_798_update_start_] 
        $T[R_iNsTr_34_798_update_completed_] 
        // implicit reference
        R_iNsTr_34_798_sample_start_ <-& (AND_u64_u64_788_update_completed_)
        R_iNsTr_34_798_sample_completed_ <-& (R_iNsTr_34_798_sample_start_)
        R_iNsTr_34_798_update_start_ <-& (R_iNsTr_34_798_sample_completed_)
        R_iNsTr_34_798_update_completed_ <-& (R_iNsTr_34_798_update_start_)
        OR_u64_u64_799_sample_start_ <-& (R_iNsTr_8_797_update_completed_)
        OR_u64_u64_799_sample_start_ <-& (R_iNsTr_34_798_update_completed_)
        ;;[OR_u64_u64_799_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_799_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_799_sample_start_ &-> (OR_u64_u64_799_Sample)
        OR_u64_u64_799_sample_completed_ <-& (OR_u64_u64_799_Sample)
        OR_u64_u64_799_sample_completed_ &-> ($null)
        OR_u64_u64_799_update_start_ &-> (OR_u64_u64_799_Update)
        OR_u64_u64_799_update_completed_ <-& (OR_u64_u64_799_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_21 * iNsTr_35)
        //  file prog.aa, line 302
        // Source expression
        // (iNsTr_21 * iNsTr_35)
        $T[MUL_f64_f64_804_sample_start_] 
        $T[MUL_f64_f64_804_sample_completed_] 
        $T[MUL_f64_f64_804_update_start_] 
        $T[MUL_f64_f64_804_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_802_sample_start_] 
        $T[R_iNsTr_21_802_sample_completed_] 
        $T[R_iNsTr_21_802_update_start_] 
        $T[R_iNsTr_21_802_update_completed_] 
        // implicit reference
        R_iNsTr_21_802_sample_start_ <-& ($entry)
        R_iNsTr_21_802_sample_completed_ <-& (R_iNsTr_21_802_sample_start_)
        R_iNsTr_21_802_update_start_ <-& (R_iNsTr_21_802_sample_completed_)
        R_iNsTr_21_802_update_completed_ <-& (R_iNsTr_21_802_update_start_)
        // iNsTr_35
        $T[R_iNsTr_35_803_sample_start_] 
        $T[R_iNsTr_35_803_sample_completed_] 
        $T[R_iNsTr_35_803_update_start_] 
        $T[R_iNsTr_35_803_update_completed_] 
        // implicit reference
        R_iNsTr_35_803_sample_start_ <-& (SUB_f64_f64_794_update_completed_)
        R_iNsTr_35_803_sample_completed_ <-& (R_iNsTr_35_803_sample_start_)
        R_iNsTr_35_803_update_start_ <-& (R_iNsTr_35_803_sample_completed_)
        R_iNsTr_35_803_update_completed_ <-& (R_iNsTr_35_803_update_start_)
        MUL_f64_f64_804_sample_start_ <-& (R_iNsTr_21_802_update_completed_)
        MUL_f64_f64_804_sample_start_ <-& (R_iNsTr_35_803_update_completed_)
        ;;[MUL_f64_f64_804_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_804_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_804_sample_start_ &-> (MUL_f64_f64_804_Sample)
        MUL_f64_f64_804_sample_completed_ <-& (MUL_f64_f64_804_Sample)
        MUL_f64_f64_804_sample_completed_ &-> ($null)
        MUL_f64_f64_804_update_start_ &-> (MUL_f64_f64_804_Update)
        MUL_f64_f64_804_update_completed_ <-& (MUL_f64_f64_804_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_36 )
        //  file prog.aa, line 303
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_36 )
        $T[type_cast_808_sample_start_] 
        $T[type_cast_808_sample_completed_] 
        $T[type_cast_808_update_start_] 
        $T[type_cast_808_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_807_sample_start_] 
        $T[R_iNsTr_36_807_sample_completed_] 
        $T[R_iNsTr_36_807_update_start_] 
        $T[R_iNsTr_36_807_update_completed_] 
        // implicit reference
        R_iNsTr_36_807_sample_start_ <-& (OR_u64_u64_799_update_completed_)
        R_iNsTr_36_807_sample_completed_ <-& (R_iNsTr_36_807_sample_start_)
        R_iNsTr_36_807_update_start_ <-& (R_iNsTr_36_807_sample_completed_)
        R_iNsTr_36_807_update_completed_ <-& (R_iNsTr_36_807_update_start_)
        type_cast_808_sample_start_ <-& (R_iNsTr_36_807_update_completed_)
        ;;[type_cast_808_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_808_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_808_sample_start_ &-> (type_cast_808_Sample)
        type_cast_808_sample_completed_ <-& (type_cast_808_Sample)
        type_cast_808_sample_completed_ &-> ($null)
        type_cast_808_update_start_ &-> (type_cast_808_Update)
        type_cast_808_update_completed_ <-& (type_cast_808_Update)
        // Target expression
        // (as target) tmp13x_xi
        // tmp13x_xi
        // implicit reference
        // 		iNsTr_38 := (tmp13x_xi * iNsTr_37)
        //  file prog.aa, line 304
        // Source expression
        // (tmp13x_xi * iNsTr_37)
        $T[MUL_f64_f64_813_sample_start_] 
        $T[MUL_f64_f64_813_sample_completed_] 
        $T[MUL_f64_f64_813_update_start_] 
        $T[MUL_f64_f64_813_update_completed_] 
        // tmp13x_xi
        $T[R_tmp13x_xi_811_sample_start_] 
        $T[R_tmp13x_xi_811_sample_completed_] 
        $T[R_tmp13x_xi_811_update_start_] 
        $T[R_tmp13x_xi_811_update_completed_] 
        // implicit reference
        R_tmp13x_xi_811_sample_start_ <-& (type_cast_808_update_completed_)
        R_tmp13x_xi_811_sample_completed_ <-& (R_tmp13x_xi_811_sample_start_)
        R_tmp13x_xi_811_update_start_ <-& (R_tmp13x_xi_811_sample_completed_)
        R_tmp13x_xi_811_update_completed_ <-& (R_tmp13x_xi_811_update_start_)
        // iNsTr_37
        $T[R_iNsTr_37_812_sample_start_] 
        $T[R_iNsTr_37_812_sample_completed_] 
        $T[R_iNsTr_37_812_update_start_] 
        $T[R_iNsTr_37_812_update_completed_] 
        // implicit reference
        R_iNsTr_37_812_sample_start_ <-& (MUL_f64_f64_804_update_completed_)
        R_iNsTr_37_812_sample_completed_ <-& (R_iNsTr_37_812_sample_start_)
        R_iNsTr_37_812_update_start_ <-& (R_iNsTr_37_812_sample_completed_)
        R_iNsTr_37_812_update_completed_ <-& (R_iNsTr_37_812_update_start_)
        MUL_f64_f64_813_sample_start_ <-& (R_tmp13x_xi_811_update_completed_)
        MUL_f64_f64_813_sample_start_ <-& (R_iNsTr_37_812_update_completed_)
        ;;[MUL_f64_f64_813_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_813_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_813_sample_start_ &-> (MUL_f64_f64_813_Sample)
        MUL_f64_f64_813_sample_completed_ <-& (MUL_f64_f64_813_Sample)
        MUL_f64_f64_813_sample_completed_ &-> ($null)
        MUL_f64_f64_813_update_start_ &-> (MUL_f64_f64_813_Update)
        MUL_f64_f64_813_update_completed_ <-& (MUL_f64_f64_813_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_38 )
        //  file prog.aa, line 305
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_38 )
        $T[type_cast_817_sample_start_] 
        $T[type_cast_817_sample_completed_] 
        $T[type_cast_817_update_start_] 
        $T[type_cast_817_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_816_sample_start_] 
        $T[R_iNsTr_38_816_sample_completed_] 
        $T[R_iNsTr_38_816_update_start_] 
        $T[R_iNsTr_38_816_update_completed_] 
        // implicit reference
        R_iNsTr_38_816_sample_start_ <-& (MUL_f64_f64_813_update_completed_)
        R_iNsTr_38_816_sample_completed_ <-& (R_iNsTr_38_816_sample_start_)
        R_iNsTr_38_816_update_start_ <-& (R_iNsTr_38_816_sample_completed_)
        R_iNsTr_38_816_update_completed_ <-& (R_iNsTr_38_816_update_start_)
        type_cast_817_sample_start_ <-& (R_iNsTr_38_816_update_completed_)
        ;;[type_cast_817_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_817_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_817_sample_start_ &-> (type_cast_817_Sample)
        type_cast_817_sample_completed_ <-& (type_cast_817_Sample)
        type_cast_817_sample_completed_ &-> ($null)
        type_cast_817_update_start_ &-> (type_cast_817_Update)
        type_cast_817_update_completed_ <-& (type_cast_817_Update)
        // Target expression
        // (as target) phitmp19x_xi
        // phitmp19x_xi
        // implicit reference
        // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 306
        // Source expression
        // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_823_sample_start_] 
        $T[AND_u64_u64_823_sample_completed_] 
        $T[AND_u64_u64_823_update_start_] 
        $T[AND_u64_u64_823_update_completed_] 
        // phitmp19x_xi
        $T[R_phitmp19x_xi_820_sample_start_] 
        $T[R_phitmp19x_xi_820_sample_completed_] 
        $T[R_phitmp19x_xi_820_update_start_] 
        $T[R_phitmp19x_xi_820_update_completed_] 
        // implicit reference
        R_phitmp19x_xi_820_sample_start_ <-& (type_cast_817_update_completed_)
        R_phitmp19x_xi_820_sample_completed_ <-& (R_phitmp19x_xi_820_sample_start_)
        R_phitmp19x_xi_820_update_start_ <-& (R_phitmp19x_xi_820_sample_completed_)
        R_phitmp19x_xi_820_update_completed_ <-& (R_phitmp19x_xi_820_update_start_)
        AND_u64_u64_823_sample_start_ <-& (R_phitmp19x_xi_820_update_completed_)
        ;;[AND_u64_u64_823_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_823_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_823_sample_start_ &-> (AND_u64_u64_823_Sample)
        AND_u64_u64_823_sample_completed_ <-& (AND_u64_u64_823_Sample)
        AND_u64_u64_823_sample_completed_ &-> ($null)
        AND_u64_u64_823_update_start_ &-> (AND_u64_u64_823_Update)
        AND_u64_u64_823_update_completed_ <-& (AND_u64_u64_823_Update)
        // Target expression
        // (as target) phitmp21x_xi
        // phitmp21x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_783_to_assign_stmt_824__entry__ |-> (assign_stmt_783_to_assign_stmt_824)
      assign_stmt_783_to_assign_stmt_824__exit__ <-| (assign_stmt_783_to_assign_stmt_824)
      ::[assign_stmt_839_to_assign_stmt_858] 
      {
        // 		iNsTr_28 := (tmp15x_xi ^ tmp17x_xi)
        //  file prog.aa, line 312
        // Source expression
        // (tmp15x_xi ^ tmp17x_xi)
        $T[XOR_u64_u64_838_sample_start_] 
        $T[XOR_u64_u64_838_sample_completed_] 
        $T[XOR_u64_u64_838_update_start_] 
        $T[XOR_u64_u64_838_update_completed_] 
        // tmp15x_xi
        $T[R_tmp15x_xi_836_sample_start_] 
        $T[R_tmp15x_xi_836_sample_completed_] 
        $T[R_tmp15x_xi_836_update_start_] 
        $T[R_tmp15x_xi_836_update_completed_] 
        // implicit reference
        R_tmp15x_xi_836_sample_start_ <-& ($entry)
        R_tmp15x_xi_836_sample_completed_ <-& (R_tmp15x_xi_836_sample_start_)
        R_tmp15x_xi_836_update_start_ <-& (R_tmp15x_xi_836_sample_completed_)
        R_tmp15x_xi_836_update_completed_ <-& (R_tmp15x_xi_836_update_start_)
        // tmp17x_xi
        $T[R_tmp17x_xi_837_sample_start_] 
        $T[R_tmp17x_xi_837_sample_completed_] 
        $T[R_tmp17x_xi_837_update_start_] 
        $T[R_tmp17x_xi_837_update_completed_] 
        // implicit reference
        R_tmp17x_xi_837_sample_start_ <-& ($entry)
        R_tmp17x_xi_837_sample_completed_ <-& (R_tmp17x_xi_837_sample_start_)
        R_tmp17x_xi_837_update_start_ <-& (R_tmp17x_xi_837_sample_completed_)
        R_tmp17x_xi_837_update_completed_ <-& (R_tmp17x_xi_837_update_start_)
        XOR_u64_u64_838_sample_start_ <-& (R_tmp15x_xi_836_update_completed_)
        XOR_u64_u64_838_sample_start_ <-& (R_tmp17x_xi_837_update_completed_)
        ;;[XOR_u64_u64_838_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_838_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_838_sample_start_ &-> (XOR_u64_u64_838_Sample)
        XOR_u64_u64_838_sample_completed_ <-& (XOR_u64_u64_838_Sample)
        XOR_u64_u64_838_sample_completed_ &-> ($null)
        XOR_u64_u64_838_update_start_ &-> (XOR_u64_u64_838_Update)
        XOR_u64_u64_838_update_completed_ <-& (XOR_u64_u64_838_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 313
        // Source expression
        // (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_844_sample_start_] 
        $T[AND_u64_u64_844_sample_completed_] 
        $T[AND_u64_u64_844_update_start_] 
        $T[AND_u64_u64_844_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_841_sample_start_] 
        $T[R_iNsTr_28_841_sample_completed_] 
        $T[R_iNsTr_28_841_update_start_] 
        $T[R_iNsTr_28_841_update_completed_] 
        // implicit reference
        R_iNsTr_28_841_sample_start_ <-& (XOR_u64_u64_838_update_completed_)
        R_iNsTr_28_841_sample_completed_ <-& (R_iNsTr_28_841_sample_start_)
        R_iNsTr_28_841_update_start_ <-& (R_iNsTr_28_841_sample_completed_)
        R_iNsTr_28_841_update_completed_ <-& (R_iNsTr_28_841_update_start_)
        AND_u64_u64_844_sample_start_ <-& (R_iNsTr_28_841_update_completed_)
        ;;[AND_u64_u64_844_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_844_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_844_sample_start_ &-> (AND_u64_u64_844_Sample)
        AND_u64_u64_844_sample_completed_ <-& (AND_u64_u64_844_Sample)
        AND_u64_u64_844_sample_completed_ &-> ($null)
        AND_u64_u64_844_update_start_ &-> (AND_u64_u64_844_Update)
        AND_u64_u64_844_update_completed_ <-& (AND_u64_u64_844_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (iNsTr_27 | iNsTr_29)
        //  file prog.aa, line 314
        // Source expression
        // (iNsTr_27 | iNsTr_29)
        $T[OR_u64_u64_849_sample_start_] 
        $T[OR_u64_u64_849_sample_completed_] 
        $T[OR_u64_u64_849_update_start_] 
        $T[OR_u64_u64_849_update_completed_] 
        // iNsTr_27
        $T[R_iNsTr_27_847_sample_start_] 
        $T[R_iNsTr_27_847_sample_completed_] 
        $T[R_iNsTr_27_847_update_start_] 
        $T[R_iNsTr_27_847_update_completed_] 
        // implicit reference
        R_iNsTr_27_847_sample_start_ <-& ($entry)
        R_iNsTr_27_847_sample_completed_ <-& (R_iNsTr_27_847_sample_start_)
        R_iNsTr_27_847_update_start_ <-& (R_iNsTr_27_847_sample_completed_)
        R_iNsTr_27_847_update_completed_ <-& (R_iNsTr_27_847_update_start_)
        // iNsTr_29
        $T[R_iNsTr_29_848_sample_start_] 
        $T[R_iNsTr_29_848_sample_completed_] 
        $T[R_iNsTr_29_848_update_start_] 
        $T[R_iNsTr_29_848_update_completed_] 
        // implicit reference
        R_iNsTr_29_848_sample_start_ <-& (AND_u64_u64_844_update_completed_)
        R_iNsTr_29_848_sample_completed_ <-& (R_iNsTr_29_848_sample_start_)
        R_iNsTr_29_848_update_start_ <-& (R_iNsTr_29_848_sample_completed_)
        R_iNsTr_29_848_update_completed_ <-& (R_iNsTr_29_848_update_start_)
        OR_u64_u64_849_sample_start_ <-& (R_iNsTr_27_847_update_completed_)
        OR_u64_u64_849_sample_start_ <-& (R_iNsTr_29_848_update_completed_)
        ;;[OR_u64_u64_849_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_849_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_849_sample_start_ &-> (OR_u64_u64_849_Sample)
        OR_u64_u64_849_sample_completed_ <-& (OR_u64_u64_849_Sample)
        OR_u64_u64_849_sample_completed_ &-> ($null)
        OR_u64_u64_849_update_start_ &-> (OR_u64_u64_849_Update)
        OR_u64_u64_849_update_completed_ <-& (OR_u64_u64_849_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_30 )
        //  file prog.aa, line 315
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_30 )
        $T[type_cast_853_sample_start_] 
        $T[type_cast_853_sample_completed_] 
        $T[type_cast_853_update_start_] 
        $T[type_cast_853_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_852_sample_start_] 
        $T[R_iNsTr_30_852_sample_completed_] 
        $T[R_iNsTr_30_852_update_start_] 
        $T[R_iNsTr_30_852_update_completed_] 
        // implicit reference
        R_iNsTr_30_852_sample_start_ <-& (OR_u64_u64_849_update_completed_)
        R_iNsTr_30_852_sample_completed_ <-& (R_iNsTr_30_852_sample_start_)
        R_iNsTr_30_852_update_start_ <-& (R_iNsTr_30_852_sample_completed_)
        R_iNsTr_30_852_update_completed_ <-& (R_iNsTr_30_852_update_start_)
        type_cast_853_sample_start_ <-& (R_iNsTr_30_852_update_completed_)
        ;;[type_cast_853_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_853_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_853_sample_start_ &-> (type_cast_853_Sample)
        type_cast_853_sample_completed_ <-& (type_cast_853_Sample)
        type_cast_853_sample_completed_ &-> ($null)
        type_cast_853_update_start_ &-> (type_cast_853_Update)
        type_cast_853_update_completed_ <-& (type_cast_853_Update)
        // Target expression
        // (as target) tmp4x_xi
        // tmp4x_xi
        // implicit reference
        // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
        //  file prog.aa, line 316
        // Source expression
        // ($cast ($float<8,23>) tmp4x_xi )
        $T[type_cast_857_sample_start_] 
        $T[type_cast_857_sample_completed_] 
        $T[type_cast_857_update_start_] 
        $T[type_cast_857_update_completed_] 
        // tmp4x_xi
        $T[R_tmp4x_xi_856_sample_start_] 
        $T[R_tmp4x_xi_856_sample_completed_] 
        $T[R_tmp4x_xi_856_update_start_] 
        $T[R_tmp4x_xi_856_update_completed_] 
        // implicit reference
        R_tmp4x_xi_856_sample_start_ <-& (type_cast_853_update_completed_)
        R_tmp4x_xi_856_sample_completed_ <-& (R_tmp4x_xi_856_sample_start_)
        R_tmp4x_xi_856_update_start_ <-& (R_tmp4x_xi_856_sample_completed_)
        R_tmp4x_xi_856_update_completed_ <-& (R_tmp4x_xi_856_update_start_)
        type_cast_857_sample_start_ <-& (R_tmp4x_xi_856_update_completed_)
        ;;[type_cast_857_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_857_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_857_sample_start_ &-> (type_cast_857_Sample)
        type_cast_857_sample_completed_ <-& (type_cast_857_Sample)
        type_cast_857_sample_completed_ &-> ($null)
        type_cast_857_update_start_ &-> (type_cast_857_Update)
        type_cast_857_update_completed_ <-& (type_cast_857_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_839_to_assign_stmt_858__entry__ |-> (assign_stmt_839_to_assign_stmt_858)
      assign_stmt_839_to_assign_stmt_858__exit__ <-| (assign_stmt_839_to_assign_stmt_858)
      // control-path for merge  
      //  file prog.aa, line 265
      ;;[merge_stmt_645_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_645__entry__ |-> (merge_stmt_645_dead_link)
      merge_stmt_645__exit__ <-| (merge_stmt_645_dead_link)
      //---------------------   merge statement  file prog.aa, line 265  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_645_PhiReqMerge] 
      merge_stmt_645_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_645_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_645_PhiReqMerge |-> (merge_stmt_645_PhiAck)
      merge_stmt_645__exit__  <-| (merge_stmt_645_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 265  --------------------------
      // control-path for merge  
      //  file prog.aa, line 274
      //---------------------   merge statement  file prog.aa, line 274  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        ;;[phi_stmt_677] 
        {
          ||[phi_stmt_677_sources] 
          {
            // sources for 			$phi iNsTr_8 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi )
            ;;[type_cast_680] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_677_req] 
        }
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      ||[bb_1_bb_2_PhiReq] 
      {
        ;;[phi_stmt_677] 
        {
          ||[phi_stmt_677_sources] 
          {
            // sources for 			$phi iNsTr_8 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi )
            ;;[type_cast_680] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_677_req] 
        }
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_676_PhiReqMerge] 
      merge_stmt_676_PhiReqMerge <-| ( bb_0_bb_2_PhiReq  bb_1_bb_2_PhiReq )
      ||[merge_stmt_676_PhiAck] 
      {
        $T [phi_stmt_677_ack] 
      }
      merge_stmt_676_PhiReqMerge |-> (merge_stmt_676_PhiAck)
      merge_stmt_676__exit__  <-| (merge_stmt_676_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 274  --------------------------
      // control-path for merge  
      //  file prog.aa, line 296
      ;;[merge_stmt_778_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_778__entry__ |-> (merge_stmt_778_dead_link)
      merge_stmt_778__exit__ <-| (merge_stmt_778_dead_link)
      //---------------------   merge statement  file prog.aa, line 296  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_778_PhiReqMerge] 
      merge_stmt_778_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_778_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_778_PhiReqMerge |-> (merge_stmt_778_PhiAck)
      merge_stmt_778__exit__  <-| (merge_stmt_778_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 296  --------------------------
      // control-path for merge  
      //  file prog.aa, line 309
      //---------------------   merge statement  file prog.aa, line 309  --------------------------
      ||[bb_2_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_827] 
        {
          ||[phi_stmt_827_sources] 
          {
            // sources for 			$phi iNsTr_27 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_830] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_827_req] 
        }
      }
      bb_2_fdiv32x_xexit |-> (bb_2_fdiv32x_xexit_PhiReq)
      ||[bb_3_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_827] 
        {
          ||[phi_stmt_827_sources] 
          {
            // sources for 			$phi iNsTr_27 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_830] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_827_req] 
        }
      }
      bb_3_fdiv32x_xexit |-> (bb_3_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_826_PhiReqMerge] 
      merge_stmt_826_PhiReqMerge <-| ( bb_2_fdiv32x_xexit_PhiReq  bb_3_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_826_PhiAck] 
      {
        $T [phi_stmt_827_ack] 
      }
      merge_stmt_826_PhiReqMerge |-> (merge_stmt_826_PhiAck)
      merge_stmt_826__exit__  <-| (merge_stmt_826_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 309  --------------------------
      // control-path for merge  
      //  file prog.aa, line 318
      //---------------------   merge statement  file prog.aa, line 318  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_860_PhiReqMerge] 
      merge_stmt_860_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_860_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_860_PhiReqMerge |-> (merge_stmt_860_PhiAck)
      merge_stmt_860__exit__  <-| (merge_stmt_860_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 318  --------------------------
      assign_stmt_599_to_assign_stmt_638__entry__ <-| (branch_block_stmt_593__entry__)
      if_stmt_639__entry__ <-| (assign_stmt_599_to_assign_stmt_638__exit__)
      merge_stmt_645__entry__ <-| (if_stmt_639__exit__)
      assign_stmt_651_to_assign_stmt_674__entry__ <-| (merge_stmt_645__exit__)
      bb_1_bb_2 <-| (assign_stmt_651_to_assign_stmt_674__exit__)
      assign_stmt_690_to_assign_stmt_771__entry__ <-| (merge_stmt_676__exit__)
      if_stmt_772__entry__ <-| (assign_stmt_690_to_assign_stmt_771__exit__)
      merge_stmt_778__entry__ <-| (if_stmt_772__exit__)
      assign_stmt_783_to_assign_stmt_824__entry__ <-| (merge_stmt_778__exit__)
      bb_3_fdiv32x_xexit <-| (assign_stmt_783_to_assign_stmt_824__exit__)
      assign_stmt_839_to_assign_stmt_858__entry__ <-| (merge_stmt_826__exit__)
      return__ <-| (assign_stmt_839_to_assign_stmt_858__exit__)
      merge_stmt_860__exit__ |-> (branch_block_stmt_593__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 265
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 274
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 296
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 309
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 318
    // constant-object-declarations for block %omega_calc%body
    //  file prog.aa, line 250
    // constant-object-declarations for block %omega_calc
    //  file prog.aa, line 245
    // constant-declarations for block %omega_calc%body
    //  file prog.aa, line 250
    // ($bitcast ($float<8,23>) _f8.096000e-01 )
    $constant $W[type_cast_597_wire_constant] : $float<8,23> := _b00111111010011110100000111110010// 8.096000e-01
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_624_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_630_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_636_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 263
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 265
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_649_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_655_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_661_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_672_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 274
    // constant-declarations for phi:  			$phi iNsTr_8 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 275
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_683_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_688_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_694_wire_constant] : $int<64> := _b0011111111101111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f1.882353e+00 )
    $constant $W[type_cast_704_wire_constant] : $float<11,52> := _b0011111111111110000111100001111000101101111010000111000010010111// 1.882353e+00
    // ($bitcast ($float<11,52>) _f2.823529e+00 )
    $constant $W[type_cast_709_wire_constant] : $float<11,52> := _b0100000000000110100101101001011001011111010100100111010111101111// 2.823529e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_720_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_736_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_752_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_764_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 294
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 296
    // ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_787_wire_constant] : $int<64> := _b0000000000001111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_792_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_822_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 309
    // constant-declarations for phi:  			$phi iNsTr_27 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 310
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_833_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_843_wire_constant] : $int<64> := _b1000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 318
    // block %omega_calc%body
    //  file prog.aa, line 250
    // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 253
    // iNsTr_0
    $W[iNsTr_0_599] : $float<8,23>
    // 		iNsTr_1 := (tau_r * flux_rotor)
    //  file prog.aa, line 254
    // iNsTr_1
    $W[iNsTr_1_604] : $float<8,23>
    // 		iNsTr_2 := ($cast ($float<11,52>) iNsTr_0 )
    //  file prog.aa, line 255
    // iNsTr_2
    $W[iNsTr_2_608] : $float<11,52>
    // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
    //  file prog.aa, line 256
    // iNsTr_3
    $W[iNsTr_3_612] : $float<11,52>
    // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_2 )
    //  file prog.aa, line 257
    // tmp17x_xi
    $W[tmp17x_xi_616] : $int<64>
    // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_3 )
    //  file prog.aa, line 258
    // tmp15x_xi
    $W[tmp15x_xi_620] : $int<64>
    // 		iNsTr_4 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 259
    // iNsTr_4
    $W[iNsTr_4_626] : $int<64>
    // 		iNsTr_5 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 260
    // iNsTr_5
    $W[iNsTr_5_632] : $int<64>
    // 		iNsTr_6 := (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 262
    // iNsTr_6
    $W[iNsTr_6_638] : $int<1>
    // if statement  
    //  file prog.aa, line 263
    // 		iNsTr_24 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 267
    // iNsTr_24
    $W[iNsTr_24_651] : $int<64>
    // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 268
    // tmp17x_xmaskx_xi
    $W[tmp17x_xmaskx_xi_657] : $int<64>
    // 		iNsTr_25 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 269
    // iNsTr_25
    $W[iNsTr_25_663] : $int<64>
    // 		phitmpx_xi := (iNsTr_25 - iNsTr_24)
    //  file prog.aa, line 270
    // phitmpx_xi
    $W[phitmpx_xi_668] : $int<64>
    // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 271
    // phitmp20x_xi
    $W[phitmp20x_xi_674] : $int<64>
    // merge-statement  
    //  file prog.aa, line 274
    // 			$phi iNsTr_8 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 275
    // ($cast ($uint<64>) phitmp20x_xi )
    $intermediate $W[type_cast_680_wire] : $int<64>
    // iNsTr_8
    $W[iNsTr_8_677] : $int<64>
    // 		iNsTr_9 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 277
    // iNsTr_9
    $W[iNsTr_9_690] : $int<64>
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 278
    // iNsTr_10
    $W[iNsTr_10_696] : $int<64>
    // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_10 )
    //  file prog.aa, line 279
    // tmp11x_xi
    $W[tmp11x_xi_700] : $float<11,52>
    // 		iNsTr_11 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 280
    // iNsTr_11
    $W[iNsTr_11_706] : $float<11,52>
    // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
    //  file prog.aa, line 281
    // iNsTr_12
    $W[iNsTr_12_712] : $float<11,52>
    // 		iNsTr_13 := (tmp11x_xi * iNsTr_12)
    //  file prog.aa, line 282
    // iNsTr_13
    $W[iNsTr_13_717] : $float<11,52>
    // 		iNsTr_14 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
    //  file prog.aa, line 283
    // iNsTr_14
    $W[iNsTr_14_723] : $float<11,52>
    // 		iNsTr_15 := (iNsTr_12 * iNsTr_14)
    //  file prog.aa, line 284
    // iNsTr_15
    $W[iNsTr_15_728] : $float<11,52>
    // 		iNsTr_16 := (tmp11x_xi * iNsTr_15)
    //  file prog.aa, line 285
    // iNsTr_16
    $W[iNsTr_16_733] : $float<11,52>
    // 		iNsTr_17 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
    //  file prog.aa, line 286
    // iNsTr_17
    $W[iNsTr_17_739] : $float<11,52>
    // 		iNsTr_18 := (iNsTr_15 * iNsTr_17)
    //  file prog.aa, line 287
    // iNsTr_18
    $W[iNsTr_18_744] : $float<11,52>
    // 		iNsTr_19 := (tmp11x_xi * iNsTr_18)
    //  file prog.aa, line 288
    // iNsTr_19
    $W[iNsTr_19_749] : $float<11,52>
    // 		iNsTr_20 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
    //  file prog.aa, line 289
    // iNsTr_20
    $W[iNsTr_20_755] : $float<11,52>
    // 		iNsTr_21 := (iNsTr_18 * iNsTr_20)
    //  file prog.aa, line 290
    // iNsTr_21
    $W[iNsTr_21_760] : $float<11,52>
    // 		iNsTr_22 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 292
    // iNsTr_22
    $W[iNsTr_22_766] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_6 | iNsTr_22)
    //  file prog.aa, line 293
    // orx_xcondx_xi
    $W[orx_xcondx_xi_771] : $int<1>
    // if statement  
    //  file prog.aa, line 294
    // 		iNsTr_33 := (tmp11x_xi * iNsTr_21)
    //  file prog.aa, line 298
    // iNsTr_33
    $W[iNsTr_33_783] : $float<11,52>
    // 		iNsTr_34 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 299
    // iNsTr_34
    $W[iNsTr_34_789] : $int<64>
    // 		iNsTr_35 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
    //  file prog.aa, line 300
    // iNsTr_35
    $W[iNsTr_35_795] : $float<11,52>
    // 		iNsTr_36 := (iNsTr_8 | iNsTr_34)
    //  file prog.aa, line 301
    // iNsTr_36
    $W[iNsTr_36_800] : $int<64>
    // 		iNsTr_37 := (iNsTr_21 * iNsTr_35)
    //  file prog.aa, line 302
    // iNsTr_37
    $W[iNsTr_37_805] : $float<11,52>
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_36 )
    //  file prog.aa, line 303
    // tmp13x_xi
    $W[tmp13x_xi_809] : $float<11,52>
    // 		iNsTr_38 := (tmp13x_xi * iNsTr_37)
    //  file prog.aa, line 304
    // iNsTr_38
    $W[iNsTr_38_814] : $float<11,52>
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_38 )
    //  file prog.aa, line 305
    // phitmp19x_xi
    $W[phitmp19x_xi_818] : $int<64>
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 306
    // phitmp21x_xi
    $W[phitmp21x_xi_824] : $int<64>
    // merge-statement  
    //  file prog.aa, line 309
    // 			$phi iNsTr_27 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 310
    // ($cast ($uint<64>) phitmp21x_xi )
    $intermediate $W[type_cast_830_wire] : $int<64>
    // iNsTr_27
    $W[iNsTr_27_827] : $int<64>
    // 		iNsTr_28 := (tmp15x_xi ^ tmp17x_xi)
    //  file prog.aa, line 312
    // iNsTr_28
    $W[iNsTr_28_839] : $int<64>
    // 		iNsTr_29 := (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 313
    // iNsTr_29
    $W[iNsTr_29_845] : $int<64>
    // 		iNsTr_30 := (iNsTr_27 | iNsTr_29)
    //  file prog.aa, line 314
    // iNsTr_30
    $W[iNsTr_30_850] : $int<64>
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_30 )
    //  file prog.aa, line 315
    // tmp4x_xi
    $W[tmp4x_xi_854] : $float<11,52>
    // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 316
    // ret_val__
    // datapath-instances for block %omega_calc%body
    //  file prog.aa, line 250
    // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 253
    // (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    *[MUL_f32_f32_598_inst] (iq type_cast_597_wire_constant) (iNsTr_0_599) 
    $delay MUL_f32_f32_598_inst 24
    // 		iNsTr_1 := (tau_r * flux_rotor)
    //  file prog.aa, line 254
    // (tau_r * flux_rotor)
    *[MUL_f32_f32_603_inst] (tau_r flux_rotor) (iNsTr_1_604) 
    $delay MUL_f32_f32_603_inst 24
    // 		iNsTr_2 := ($cast ($float<11,52>) iNsTr_0 )
    //  file prog.aa, line 255
    // ($cast ($float<11,52>) iNsTr_0 )
    $F:=$F [type_cast_607_inst] (iNsTr_0_599) (iNsTr_2_608)  
    $delay type_cast_607_inst 1
    // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
    //  file prog.aa, line 256
    // ($cast ($float<11,52>) iNsTr_1 )
    $F:=$F [type_cast_611_inst] (iNsTr_1_604) (iNsTr_3_612)  
    $delay type_cast_611_inst 1
    // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_2 )
    //  file prog.aa, line 257
    // ($bitcast ($uint<64>) iNsTr_2 )
    # := [type_cast_615_inst] (iNsTr_2_608) (tmp17x_xi_616) 
    $delay type_cast_615_inst 1
    // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_3 )
    //  file prog.aa, line 258
    // ($bitcast ($uint<64>) iNsTr_3 )
    # := [type_cast_619_inst] (iNsTr_3_612) (tmp15x_xi_620) 
    $delay type_cast_619_inst 1
    // 		iNsTr_4 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 259
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_625_inst] (tmp17x_xi_616 type_cast_624_wire_constant) (iNsTr_4_626) 
    $delay AND_u64_u64_625_inst 1
    // 		iNsTr_5 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 260
    // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_631_inst] (tmp15x_xi_620 type_cast_630_wire_constant) (iNsTr_5_632) 
    $delay AND_u64_u64_631_inst 1
    // 		iNsTr_6 := (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 262
    // (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_637_inst] (iNsTr_4_626 type_cast_636_wire_constant) (iNsTr_6_638) 
    $delay EQ_u64_u1_637_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 263
    ==0? [if_stmt_639_branch] (iNsTr_6_638)
    // 		iNsTr_24 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 267
    // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_650_inst] (tmp15x_xi_620 type_cast_649_wire_constant) (iNsTr_24_651) 
    $delay AND_u64_u64_650_inst 1
    // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 268
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_656_inst] (tmp17x_xi_616 type_cast_655_wire_constant) (tmp17x_xmaskx_xi_657) 
    $delay AND_u64_u64_656_inst 1
    // 		iNsTr_25 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 269
    // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    +[ADD_u64_u64_662_inst] (tmp17x_xmaskx_xi_657 type_cast_661_wire_constant) (iNsTr_25_663) 
    $delay ADD_u64_u64_662_inst 1
    // 		phitmpx_xi := (iNsTr_25 - iNsTr_24)
    //  file prog.aa, line 270
    // (iNsTr_25 - iNsTr_24)
    -[SUB_u64_u64_667_inst] (iNsTr_25_663 iNsTr_24_651) (phitmpx_xi_668) 
    $delay SUB_u64_u64_667_inst 1
    // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 271
    // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_673_inst] (phitmpx_xi_668 type_cast_672_wire_constant) (phitmp20x_xi_674) 
    $delay AND_u64_u64_673_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 274
    // 			$phi iNsTr_8 := 			  ($cast ($uint<64>) phitmp20x_xi ) $on bb_1_bb_2			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_0_bb_2 // type of target is $uint<64>
    //  file prog.aa, line 275
    // ($cast ($uint<64>) phitmp20x_xi )
    # := [type_cast_680_inst] (phitmp20x_xi_674) (type_cast_680_wire) 
    $delay type_cast_680_inst 1
    $phi [phi_stmt_677] (type_cast_680_wire type_cast_683_wire_constant) ( iNsTr_8_677 )
    // 		iNsTr_9 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 277
    // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    |[OR_u64_u64_689_inst] (tmp15x_xi_620 type_cast_688_wire_constant) (iNsTr_9_690) 
    $delay OR_u64_u64_689_inst 1
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 278
    // (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_695_inst] (iNsTr_9_690 type_cast_694_wire_constant) (iNsTr_10_696) 
    $delay AND_u64_u64_695_inst 1
    // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_10 )
    //  file prog.aa, line 279
    // ($bitcast ($float<11,52>) iNsTr_10 )
    # := [type_cast_699_inst] (iNsTr_10_696) (tmp11x_xi_700) 
    $delay type_cast_699_inst 1
    // 		iNsTr_11 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 280
    // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    *[MUL_f64_f64_705_inst] (tmp11x_xi_700 type_cast_704_wire_constant) (iNsTr_11_706) 
    $delay MUL_f64_f64_705_inst 24
    // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
    //  file prog.aa, line 281
    // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
    -[SUB_f64_f64_711_inst] (type_cast_709_wire_constant iNsTr_11_706) (iNsTr_12_712) 
    $delay SUB_f64_f64_711_inst 24
    // 		iNsTr_13 := (tmp11x_xi * iNsTr_12)
    //  file prog.aa, line 282
    // (tmp11x_xi * iNsTr_12)
    *[MUL_f64_f64_716_inst] (tmp11x_xi_700 iNsTr_12_712) (iNsTr_13_717) 
    $delay MUL_f64_f64_716_inst 24
    // 		iNsTr_14 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
    //  file prog.aa, line 283
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
    -[SUB_f64_f64_722_inst] (type_cast_720_wire_constant iNsTr_13_717) (iNsTr_14_723) 
    $delay SUB_f64_f64_722_inst 24
    // 		iNsTr_15 := (iNsTr_12 * iNsTr_14)
    //  file prog.aa, line 284
    // (iNsTr_12 * iNsTr_14)
    *[MUL_f64_f64_727_inst] (iNsTr_12_712 iNsTr_14_723) (iNsTr_15_728) 
    $delay MUL_f64_f64_727_inst 24
    // 		iNsTr_16 := (tmp11x_xi * iNsTr_15)
    //  file prog.aa, line 285
    // (tmp11x_xi * iNsTr_15)
    *[MUL_f64_f64_732_inst] (tmp11x_xi_700 iNsTr_15_728) (iNsTr_16_733) 
    $delay MUL_f64_f64_732_inst 24
    // 		iNsTr_17 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
    //  file prog.aa, line 286
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
    -[SUB_f64_f64_738_inst] (type_cast_736_wire_constant iNsTr_16_733) (iNsTr_17_739) 
    $delay SUB_f64_f64_738_inst 24
    // 		iNsTr_18 := (iNsTr_15 * iNsTr_17)
    //  file prog.aa, line 287
    // (iNsTr_15 * iNsTr_17)
    *[MUL_f64_f64_743_inst] (iNsTr_15_728 iNsTr_17_739) (iNsTr_18_744) 
    $delay MUL_f64_f64_743_inst 24
    // 		iNsTr_19 := (tmp11x_xi * iNsTr_18)
    //  file prog.aa, line 288
    // (tmp11x_xi * iNsTr_18)
    *[MUL_f64_f64_748_inst] (tmp11x_xi_700 iNsTr_18_744) (iNsTr_19_749) 
    $delay MUL_f64_f64_748_inst 24
    // 		iNsTr_20 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
    //  file prog.aa, line 289
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
    -[SUB_f64_f64_754_inst] (type_cast_752_wire_constant iNsTr_19_749) (iNsTr_20_755) 
    $delay SUB_f64_f64_754_inst 24
    // 		iNsTr_21 := (iNsTr_18 * iNsTr_20)
    //  file prog.aa, line 290
    // (iNsTr_18 * iNsTr_20)
    *[MUL_f64_f64_759_inst] (iNsTr_18_744 iNsTr_20_755) (iNsTr_21_760) 
    $delay MUL_f64_f64_759_inst 24
    // 		iNsTr_22 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 292
    // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_765_inst] (iNsTr_5_632 type_cast_764_wire_constant) (iNsTr_22_766) 
    $delay EQ_u64_u1_765_inst 1
    // 		orx_xcondx_xi := (iNsTr_6 | iNsTr_22)
    //  file prog.aa, line 293
    // (iNsTr_6 | iNsTr_22)
    |[OR_u1_u1_770_inst] (iNsTr_6_638 iNsTr_22_766) (orx_xcondx_xi_771) 
    $delay OR_u1_u1_770_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 294
    ==0? [if_stmt_772_branch] (orx_xcondx_xi_771)
    // 		iNsTr_33 := (tmp11x_xi * iNsTr_21)
    //  file prog.aa, line 298
    // (tmp11x_xi * iNsTr_21)
    *[MUL_f64_f64_782_inst] (tmp11x_xi_700 iNsTr_21_760) (iNsTr_33_783) 
    $delay MUL_f64_f64_782_inst 24
    // 		iNsTr_34 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 299
    // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_788_inst] (tmp17x_xi_616 type_cast_787_wire_constant) (iNsTr_34_789) 
    $delay AND_u64_u64_788_inst 1
    // 		iNsTr_35 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
    //  file prog.aa, line 300
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
    -[SUB_f64_f64_794_inst] (type_cast_792_wire_constant iNsTr_33_783) (iNsTr_35_795) 
    $delay SUB_f64_f64_794_inst 24
    // 		iNsTr_36 := (iNsTr_8 | iNsTr_34)
    //  file prog.aa, line 301
    // (iNsTr_8 | iNsTr_34)
    |[OR_u64_u64_799_inst] (iNsTr_8_677 iNsTr_34_789) (iNsTr_36_800) 
    $delay OR_u64_u64_799_inst 1
    // 		iNsTr_37 := (iNsTr_21 * iNsTr_35)
    //  file prog.aa, line 302
    // (iNsTr_21 * iNsTr_35)
    *[MUL_f64_f64_804_inst] (iNsTr_21_760 iNsTr_35_795) (iNsTr_37_805) 
    $delay MUL_f64_f64_804_inst 24
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_36 )
    //  file prog.aa, line 303
    // ($bitcast ($float<11,52>) iNsTr_36 )
    # := [type_cast_808_inst] (iNsTr_36_800) (tmp13x_xi_809) 
    $delay type_cast_808_inst 1
    // 		iNsTr_38 := (tmp13x_xi * iNsTr_37)
    //  file prog.aa, line 304
    // (tmp13x_xi * iNsTr_37)
    *[MUL_f64_f64_813_inst] (tmp13x_xi_809 iNsTr_37_805) (iNsTr_38_814) 
    $delay MUL_f64_f64_813_inst 24
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_38 )
    //  file prog.aa, line 305
    // ($bitcast ($uint<64>) iNsTr_38 )
    # := [type_cast_817_inst] (iNsTr_38_814) (phitmp19x_xi_818) 
    $delay type_cast_817_inst 1
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 306
    // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_823_inst] (phitmp19x_xi_818 type_cast_822_wire_constant) (phitmp21x_xi_824) 
    $delay AND_u64_u64_823_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 309
    // 			$phi iNsTr_27 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on bb_3_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_2_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 310
    // ($cast ($uint<64>) phitmp21x_xi )
    # := [type_cast_830_inst] (phitmp21x_xi_824) (type_cast_830_wire) 
    $delay type_cast_830_inst 1
    $phi [phi_stmt_827] (type_cast_830_wire type_cast_833_wire_constant) ( iNsTr_27_827 )
    // 		iNsTr_28 := (tmp15x_xi ^ tmp17x_xi)
    //  file prog.aa, line 312
    // (tmp15x_xi ^ tmp17x_xi)
    ^[XOR_u64_u64_838_inst] (tmp15x_xi_620 tmp17x_xi_616) (iNsTr_28_839) 
    $delay XOR_u64_u64_838_inst 1
    // 		iNsTr_29 := (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 313
    // (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_844_inst] (iNsTr_28_839 type_cast_843_wire_constant) (iNsTr_29_845) 
    $delay AND_u64_u64_844_inst 1
    // 		iNsTr_30 := (iNsTr_27 | iNsTr_29)
    //  file prog.aa, line 314
    // (iNsTr_27 | iNsTr_29)
    |[OR_u64_u64_849_inst] (iNsTr_27_827 iNsTr_29_845) (iNsTr_30_850) 
    $delay OR_u64_u64_849_inst 1
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_30 )
    //  file prog.aa, line 315
    // ($bitcast ($float<11,52>) iNsTr_30 )
    # := [type_cast_853_inst] (iNsTr_30_850) (tmp4x_xi_854) 
    $delay type_cast_853_inst 1
    // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 316
    // ($cast ($float<8,23>) tmp4x_xi )
    $F:=$F [type_cast_857_inst] (tmp4x_xi_854) (ret_val__)  
    $delay type_cast_857_inst 1
  }
  // end data-path
  // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  //  file prog.aa, line 253
  // (iq * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  MUL_f32_f32_598_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_598_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_598_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_598_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_598_Update/ca)
  // 		iNsTr_1 := (tau_r * flux_rotor)
  //  file prog.aa, line 254
  // (tau_r * flux_rotor)
  MUL_f32_f32_603_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_603_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_603_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_603_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/MUL_f32_f32_603_Update/ca)
  // 		iNsTr_2 := ($cast ($float<11,52>) iNsTr_0 )
  //  file prog.aa, line 255
  // ($cast ($float<11,52>) iNsTr_0 )
  type_cast_607_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_607_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_607_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_607_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_607_Update/ca)
  // 		iNsTr_3 := ($cast ($float<11,52>) iNsTr_1 )
  //  file prog.aa, line 256
  // ($cast ($float<11,52>) iNsTr_1 )
  type_cast_611_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_611_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_611_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_611_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_611_Update/ca)
  // 		tmp17x_xi := ($bitcast ($uint<64>) iNsTr_2 )
  //  file prog.aa, line 257
  // ($bitcast ($uint<64>) iNsTr_2 )
  type_cast_615_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_615_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_615_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_615_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_615_Update/ca)
  // 		tmp15x_xi := ($bitcast ($uint<64>) iNsTr_3 )
  //  file prog.aa, line 258
  // ($bitcast ($uint<64>) iNsTr_3 )
  type_cast_619_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_619_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_619_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_619_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/type_cast_619_Update/ca)
  // 		iNsTr_4 := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 259
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_625_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_625_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_625_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_625_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_625_Update/ca)
  // 		iNsTr_5 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 260
  // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_631_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_631_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_631_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_631_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/AND_u64_u64_631_Update/ca)
  // 		iNsTr_6 := (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 262
  // (iNsTr_4 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_637_inst <=> (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/EQ_u64_u1_637_Sample/rr branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/EQ_u64_u1_637_Update/cr) (branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/EQ_u64_u1_637_Sample/ra branch_block_stmt_593/assign_stmt_599_to_assign_stmt_638/EQ_u64_u1_637_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 263
  if_stmt_639_branch <=> (branch_block_stmt_593/if_stmt_639_eval_test/branch_req) (branch_block_stmt_593/if_stmt_639_else_link/else_choice_transition branch_block_stmt_593/if_stmt_639_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 265
  // 		iNsTr_24 := (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 267
  // (tmp15x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_650_inst <=> (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_650_Sample/rr branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_650_Update/cr) (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_650_Sample/ra branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_650_Update/ca)
  // 		tmp17x_xmaskx_xi := (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 268
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_656_inst <=> (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_656_Sample/rr branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_656_Update/cr) (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_656_Sample/ra branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_656_Update/ca)
  // 		iNsTr_25 := (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 269
  // (tmp17x_xmaskx_xi + ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  ADD_u64_u64_662_inst <=> (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/ADD_u64_u64_662_Sample/rr branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/ADD_u64_u64_662_Update/cr) (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/ADD_u64_u64_662_Sample/ra branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/ADD_u64_u64_662_Update/ca)
  // 		phitmpx_xi := (iNsTr_25 - iNsTr_24)
  //  file prog.aa, line 270
  // (iNsTr_25 - iNsTr_24)
  SUB_u64_u64_667_inst <=> (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/SUB_u64_u64_667_Sample/rr branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/SUB_u64_u64_667_Update/cr) (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/SUB_u64_u64_667_Sample/ra branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/SUB_u64_u64_667_Update/ca)
  // 		phitmp20x_xi := (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 271
  // (phitmpx_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_673_inst <=> (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_673_Sample/rr branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_673_Update/cr) (branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_673_Sample/ra branch_block_stmt_593/assign_stmt_651_to_assign_stmt_674/AND_u64_u64_673_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 274
  // ($cast ($uint<64>) phitmp20x_xi )
  type_cast_680_inst <=> (branch_block_stmt_593/bb_1_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_sources/type_cast_680/SplitProtocol/Sample/rr branch_block_stmt_593/bb_1_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_sources/type_cast_680/SplitProtocol/Update/cr) (branch_block_stmt_593/bb_1_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_sources/type_cast_680/SplitProtocol/Sample/ra branch_block_stmt_593/bb_1_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_sources/type_cast_680/SplitProtocol/Update/ca)
  phi_stmt_677 <=> (branch_block_stmt_593/bb_1_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_req branch_block_stmt_593/bb_0_bb_2_PhiReq/phi_stmt_677/phi_stmt_677_req) (branch_block_stmt_593/merge_stmt_676_PhiAck/phi_stmt_677_ack)
  // 		iNsTr_9 := (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 277
  // (tmp15x_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  OR_u64_u64_689_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u64_u64_689_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u64_u64_689_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u64_u64_689_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u64_u64_689_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 278
  // (iNsTr_9 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_695_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/AND_u64_u64_695_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/AND_u64_u64_695_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/AND_u64_u64_695_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/AND_u64_u64_695_Update/ca)
  // 		tmp11x_xi := ($bitcast ($float<11,52>) iNsTr_10 )
  //  file prog.aa, line 279
  // ($bitcast ($float<11,52>) iNsTr_10 )
  type_cast_699_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/type_cast_699_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/type_cast_699_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/type_cast_699_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/type_cast_699_Update/ca)
  // 		iNsTr_11 := (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  //  file prog.aa, line 280
  // (tmp11x_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  MUL_f64_f64_705_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_705_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_705_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_705_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_705_Update/ca)
  // 		iNsTr_12 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
  //  file prog.aa, line 281
  // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_11)
  SUB_f64_f64_711_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_711_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_711_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_711_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_711_Update/ca)
  // 		iNsTr_13 := (tmp11x_xi * iNsTr_12)
  //  file prog.aa, line 282
  // (tmp11x_xi * iNsTr_12)
  MUL_f64_f64_716_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_716_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_716_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_716_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_716_Update/ca)
  // 		iNsTr_14 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
  //  file prog.aa, line 283
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_13)
  SUB_f64_f64_722_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_722_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_722_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_722_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_722_Update/ca)
  // 		iNsTr_15 := (iNsTr_12 * iNsTr_14)
  //  file prog.aa, line 284
  // (iNsTr_12 * iNsTr_14)
  MUL_f64_f64_727_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_727_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_727_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_727_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_727_Update/ca)
  // 		iNsTr_16 := (tmp11x_xi * iNsTr_15)
  //  file prog.aa, line 285
  // (tmp11x_xi * iNsTr_15)
  MUL_f64_f64_732_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_732_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_732_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_732_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_732_Update/ca)
  // 		iNsTr_17 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
  //  file prog.aa, line 286
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_16)
  SUB_f64_f64_738_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_738_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_738_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_738_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_738_Update/ca)
  // 		iNsTr_18 := (iNsTr_15 * iNsTr_17)
  //  file prog.aa, line 287
  // (iNsTr_15 * iNsTr_17)
  MUL_f64_f64_743_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_743_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_743_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_743_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_743_Update/ca)
  // 		iNsTr_19 := (tmp11x_xi * iNsTr_18)
  //  file prog.aa, line 288
  // (tmp11x_xi * iNsTr_18)
  MUL_f64_f64_748_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_748_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_748_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_748_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_748_Update/ca)
  // 		iNsTr_20 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
  //  file prog.aa, line 289
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_19)
  SUB_f64_f64_754_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_754_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_754_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_754_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/SUB_f64_f64_754_Update/ca)
  // 		iNsTr_21 := (iNsTr_18 * iNsTr_20)
  //  file prog.aa, line 290
  // (iNsTr_18 * iNsTr_20)
  MUL_f64_f64_759_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_759_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_759_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_759_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/MUL_f64_f64_759_Update/ca)
  // 		iNsTr_22 := (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 292
  // (iNsTr_5 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_765_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/EQ_u64_u1_765_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/EQ_u64_u1_765_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/EQ_u64_u1_765_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/EQ_u64_u1_765_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_6 | iNsTr_22)
  //  file prog.aa, line 293
  // (iNsTr_6 | iNsTr_22)
  OR_u1_u1_770_inst <=> (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u1_u1_770_Sample/rr branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u1_u1_770_Update/cr) (branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u1_u1_770_Sample/ra branch_block_stmt_593/assign_stmt_690_to_assign_stmt_771/OR_u1_u1_770_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 294
  if_stmt_772_branch <=> (branch_block_stmt_593/if_stmt_772_eval_test/branch_req) (branch_block_stmt_593/if_stmt_772_else_link/else_choice_transition branch_block_stmt_593/if_stmt_772_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 296
  // 		iNsTr_33 := (tmp11x_xi * iNsTr_21)
  //  file prog.aa, line 298
  // (tmp11x_xi * iNsTr_21)
  MUL_f64_f64_782_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_782_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_782_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_782_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_782_Update/ca)
  // 		iNsTr_34 := (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 299
  // (tmp17x_xi & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_788_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_788_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_788_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_788_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_788_Update/ca)
  // 		iNsTr_35 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
  //  file prog.aa, line 300
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_33)
  SUB_f64_f64_794_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/SUB_f64_f64_794_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/SUB_f64_f64_794_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/SUB_f64_f64_794_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/SUB_f64_f64_794_Update/ca)
  // 		iNsTr_36 := (iNsTr_8 | iNsTr_34)
  //  file prog.aa, line 301
  // (iNsTr_8 | iNsTr_34)
  OR_u64_u64_799_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/OR_u64_u64_799_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/OR_u64_u64_799_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/OR_u64_u64_799_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/OR_u64_u64_799_Update/ca)
  // 		iNsTr_37 := (iNsTr_21 * iNsTr_35)
  //  file prog.aa, line 302
  // (iNsTr_21 * iNsTr_35)
  MUL_f64_f64_804_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_804_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_804_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_804_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_804_Update/ca)
  // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_36 )
  //  file prog.aa, line 303
  // ($bitcast ($float<11,52>) iNsTr_36 )
  type_cast_808_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_808_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_808_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_808_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_808_Update/ca)
  // 		iNsTr_38 := (tmp13x_xi * iNsTr_37)
  //  file prog.aa, line 304
  // (tmp13x_xi * iNsTr_37)
  MUL_f64_f64_813_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_813_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_813_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_813_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/MUL_f64_f64_813_Update/ca)
  // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_38 )
  //  file prog.aa, line 305
  // ($bitcast ($uint<64>) iNsTr_38 )
  type_cast_817_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_817_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_817_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_817_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/type_cast_817_Update/ca)
  // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 306
  // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_823_inst <=> (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_823_Sample/rr branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_823_Update/cr) (branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_823_Sample/ra branch_block_stmt_593/assign_stmt_783_to_assign_stmt_824/AND_u64_u64_823_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 309
  // ($cast ($uint<64>) phitmp21x_xi )
  type_cast_830_inst <=> (branch_block_stmt_593/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_sources/type_cast_830/SplitProtocol/Sample/rr branch_block_stmt_593/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_sources/type_cast_830/SplitProtocol/Update/cr) (branch_block_stmt_593/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_sources/type_cast_830/SplitProtocol/Sample/ra branch_block_stmt_593/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_sources/type_cast_830/SplitProtocol/Update/ca)
  phi_stmt_827 <=> (branch_block_stmt_593/bb_3_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_req branch_block_stmt_593/bb_2_fdiv32x_xexit_PhiReq/phi_stmt_827/phi_stmt_827_req) (branch_block_stmt_593/merge_stmt_826_PhiAck/phi_stmt_827_ack)
  // 		iNsTr_28 := (tmp15x_xi ^ tmp17x_xi)
  //  file prog.aa, line 312
  // (tmp15x_xi ^ tmp17x_xi)
  XOR_u64_u64_838_inst <=> (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/XOR_u64_u64_838_Sample/rr branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/XOR_u64_u64_838_Update/cr) (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/XOR_u64_u64_838_Sample/ra branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/XOR_u64_u64_838_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 313
  // (iNsTr_28 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_844_inst <=> (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/AND_u64_u64_844_Sample/rr branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/AND_u64_u64_844_Update/cr) (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/AND_u64_u64_844_Sample/ra branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/AND_u64_u64_844_Update/ca)
  // 		iNsTr_30 := (iNsTr_27 | iNsTr_29)
  //  file prog.aa, line 314
  // (iNsTr_27 | iNsTr_29)
  OR_u64_u64_849_inst <=> (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/OR_u64_u64_849_Sample/rr branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/OR_u64_u64_849_Update/cr) (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/OR_u64_u64_849_Sample/ra branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/OR_u64_u64_849_Update/ca)
  // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_30 )
  //  file prog.aa, line 315
  // ($bitcast ($float<11,52>) iNsTr_30 )
  type_cast_853_inst <=> (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_853_Sample/rr branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_853_Update/cr) (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_853_Sample/ra branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_853_Update/ca)
  // 		ret_val__ := ($cast ($float<8,23>) tmp4x_xi )
  //  file prog.aa, line 316
  // ($cast ($float<8,23>) tmp4x_xi )
  type_cast_857_inst <=> (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_857_Sample/rr branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_857_Update/cr) (branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_857_Sample/ra branch_block_stmt_593/assign_stmt_839_to_assign_stmt_858/type_cast_857_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 318
}
$module [rotor_flux_calc] 
{
  $in del_t:$float<8,23>
  // can point into  foreign( $void )
  Lm:$float<8,23>
  // can point into  foreign( $void )
  id:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor_prev:$float<8,23>
  // can point into  foreign( $void )
  tau_new:$float<8,23>
  // can point into  foreign( $void )
  tau_r:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %rotor_flux_calc
  //  file prog.aa, line 229
  // pipe-declarations for block %rotor_flux_calc%body
  //  file prog.aa, line 234
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 242
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_559] // Branch Block  file prog.aa, line 234
    {
      $P [branch_block_stmt_559__entry__]
      branch_block_stmt_559__entry__ <-| ($entry)
      $P [branch_block_stmt_559__exit__]
      branch_block_stmt_559__exit__ |-> ($exit)
      $P [assign_stmt_565_to_assign_stmt_582__entry__] 
      $P [assign_stmt_565_to_assign_stmt_582__exit__] 
      $P [return__]
      $P [merge_stmt_584__exit__] 
      ::[assign_stmt_565_to_assign_stmt_582] 
      {
        // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
        //  file prog.aa, line 237
        // Source expression
        // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
        $T[MUL_f32_f32_564_sample_start_] 
        $T[MUL_f32_f32_564_sample_completed_] 
        $T[MUL_f32_f32_564_update_start_] 
        $T[MUL_f32_f32_564_update_completed_] 
        // flux_rotor_prev
        $T[R_flux_rotor_prev_561_sample_start_] 
        $T[R_flux_rotor_prev_561_sample_completed_] 
        $T[R_flux_rotor_prev_561_update_start_] 
        $T[R_flux_rotor_prev_561_update_completed_] 
        // reference to interface object
        R_flux_rotor_prev_561_sample_start_ <-& ($entry)
        R_flux_rotor_prev_561_sample_completed_ <-& (R_flux_rotor_prev_561_sample_start_)
        R_flux_rotor_prev_561_update_start_ <-& (R_flux_rotor_prev_561_sample_completed_)
        R_flux_rotor_prev_561_update_completed_ <-& (R_flux_rotor_prev_561_update_start_)
        MUL_f32_f32_564_sample_start_ <-& (R_flux_rotor_prev_561_update_completed_)
        ;;[MUL_f32_f32_564_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_564_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_564_sample_start_ &-> (MUL_f32_f32_564_Sample)
        MUL_f32_f32_564_sample_completed_ <-& (MUL_f32_f32_564_Sample)
        MUL_f32_f32_564_sample_completed_ &-> ($null)
        MUL_f32_f32_564_update_start_ &-> (MUL_f32_f32_564_Update)
        MUL_f32_f32_564_update_completed_ <-& (MUL_f32_f32_564_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        //  file prog.aa, line 238
        // Source expression
        // (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        $T[MUL_f32_f32_570_sample_start_] 
        $T[MUL_f32_f32_570_sample_completed_] 
        $T[MUL_f32_f32_570_update_start_] 
        $T[MUL_f32_f32_570_update_completed_] 
        // id
        $T[R_id_567_sample_start_] 
        $T[R_id_567_sample_completed_] 
        $T[R_id_567_update_start_] 
        $T[R_id_567_update_completed_] 
        // reference to interface object
        R_id_567_sample_start_ <-& ($entry)
        R_id_567_sample_completed_ <-& (R_id_567_sample_start_)
        R_id_567_update_start_ <-& (R_id_567_sample_completed_)
        R_id_567_update_completed_ <-& (R_id_567_update_start_)
        MUL_f32_f32_570_sample_start_ <-& (R_id_567_update_completed_)
        ;;[MUL_f32_f32_570_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_570_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_570_sample_start_ &-> (MUL_f32_f32_570_Sample)
        MUL_f32_f32_570_sample_completed_ <-& (MUL_f32_f32_570_Sample)
        MUL_f32_f32_570_sample_completed_ &-> ($null)
        MUL_f32_f32_570_update_start_ &-> (MUL_f32_f32_570_Update)
        MUL_f32_f32_570_update_completed_ <-& (MUL_f32_f32_570_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
        //  file prog.aa, line 239
        // Source expression
        // (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
        $T[MUL_f32_f32_576_sample_start_] 
        $T[MUL_f32_f32_576_sample_completed_] 
        $T[MUL_f32_f32_576_update_start_] 
        $T[MUL_f32_f32_576_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_573_sample_start_] 
        $T[R_iNsTr_1_573_sample_completed_] 
        $T[R_iNsTr_1_573_update_start_] 
        $T[R_iNsTr_1_573_update_completed_] 
        // implicit reference
        R_iNsTr_1_573_sample_start_ <-& (MUL_f32_f32_570_update_completed_)
        R_iNsTr_1_573_sample_completed_ <-& (R_iNsTr_1_573_sample_start_)
        R_iNsTr_1_573_update_start_ <-& (R_iNsTr_1_573_sample_completed_)
        R_iNsTr_1_573_update_completed_ <-& (R_iNsTr_1_573_update_start_)
        MUL_f32_f32_576_sample_start_ <-& (R_iNsTr_1_573_update_completed_)
        ;;[MUL_f32_f32_576_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_576_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_576_sample_start_ &-> (MUL_f32_f32_576_Sample)
        MUL_f32_f32_576_sample_completed_ <-& (MUL_f32_f32_576_Sample)
        MUL_f32_f32_576_sample_completed_ &-> ($null)
        MUL_f32_f32_576_update_start_ &-> (MUL_f32_f32_576_Update)
        MUL_f32_f32_576_update_completed_ <-& (MUL_f32_f32_576_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		ret_val__ := (iNsTr_2 + iNsTr_0)
        //  file prog.aa, line 240
        // Source expression
        // (iNsTr_2 + iNsTr_0)
        $T[ADD_f32_f32_581_sample_start_] 
        $T[ADD_f32_f32_581_sample_completed_] 
        $T[ADD_f32_f32_581_update_start_] 
        $T[ADD_f32_f32_581_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_579_sample_start_] 
        $T[R_iNsTr_2_579_sample_completed_] 
        $T[R_iNsTr_2_579_update_start_] 
        $T[R_iNsTr_2_579_update_completed_] 
        // implicit reference
        R_iNsTr_2_579_sample_start_ <-& (MUL_f32_f32_576_update_completed_)
        R_iNsTr_2_579_sample_completed_ <-& (R_iNsTr_2_579_sample_start_)
        R_iNsTr_2_579_update_start_ <-& (R_iNsTr_2_579_sample_completed_)
        R_iNsTr_2_579_update_completed_ <-& (R_iNsTr_2_579_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_580_sample_start_] 
        $T[R_iNsTr_0_580_sample_completed_] 
        $T[R_iNsTr_0_580_update_start_] 
        $T[R_iNsTr_0_580_update_completed_] 
        // implicit reference
        R_iNsTr_0_580_sample_start_ <-& (MUL_f32_f32_564_update_completed_)
        R_iNsTr_0_580_sample_completed_ <-& (R_iNsTr_0_580_sample_start_)
        R_iNsTr_0_580_update_start_ <-& (R_iNsTr_0_580_sample_completed_)
        R_iNsTr_0_580_update_completed_ <-& (R_iNsTr_0_580_update_start_)
        ADD_f32_f32_581_sample_start_ <-& (R_iNsTr_2_579_update_completed_)
        ADD_f32_f32_581_sample_start_ <-& (R_iNsTr_0_580_update_completed_)
        ;;[ADD_f32_f32_581_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_581_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_581_sample_start_ &-> (ADD_f32_f32_581_Sample)
        ADD_f32_f32_581_sample_completed_ <-& (ADD_f32_f32_581_Sample)
        ADD_f32_f32_581_sample_completed_ &-> ($null)
        ADD_f32_f32_581_update_start_ &-> (ADD_f32_f32_581_Update)
        ADD_f32_f32_581_update_completed_ <-& (ADD_f32_f32_581_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_565_to_assign_stmt_582__entry__ |-> (assign_stmt_565_to_assign_stmt_582)
      assign_stmt_565_to_assign_stmt_582__exit__ <-| (assign_stmt_565_to_assign_stmt_582)
      // control-path for merge  
      //  file prog.aa, line 242
      //---------------------   merge statement  file prog.aa, line 242  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_584_PhiReqMerge] 
      merge_stmt_584_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_584_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_584_PhiReqMerge |-> (merge_stmt_584_PhiAck)
      merge_stmt_584__exit__  <-| (merge_stmt_584_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 242  --------------------------
      assign_stmt_565_to_assign_stmt_582__entry__ <-| (branch_block_stmt_559__entry__)
      return__ <-| (assign_stmt_565_to_assign_stmt_582__exit__)
      merge_stmt_584__exit__ |-> (branch_block_stmt_559__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 242
    // constant-object-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 234
    // constant-object-declarations for block %rotor_flux_calc
    //  file prog.aa, line 229
    // constant-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 234
    // ($bitcast ($float<8,23>) _f9.995000e-01 )
    $constant $W[type_cast_563_wire_constant] : $float<8,23> := _b00111111011111111101111100111011// 9.995000e-01
    // ($bitcast ($float<8,23>) _f8.096000e-01 )
    $constant $W[type_cast_569_wire_constant] : $float<8,23> := _b00111111010011110100000111110010// 8.096000e-01
    // ($bitcast ($float<8,23>) _f5.000000e-04 )
    $constant $W[type_cast_575_wire_constant] : $float<8,23> := _b00111010000000110001001001101111// 5.000000e-04
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 242
    // block %rotor_flux_calc%body
    //  file prog.aa, line 234
    // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    //  file prog.aa, line 237
    // iNsTr_0
    $W[iNsTr_0_565] : $float<8,23>
    // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 238
    // iNsTr_1
    $W[iNsTr_1_571] : $float<8,23>
    // 		iNsTr_2 := (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    //  file prog.aa, line 239
    // iNsTr_2
    $W[iNsTr_2_577] : $float<8,23>
    // 		ret_val__ := (iNsTr_2 + iNsTr_0)
    //  file prog.aa, line 240
    // ret_val__
    // datapath-instances for block %rotor_flux_calc%body
    //  file prog.aa, line 234
    // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    //  file prog.aa, line 237
    // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    *[MUL_f32_f32_564_inst] (flux_rotor_prev type_cast_563_wire_constant) (iNsTr_0_565) 
    $delay MUL_f32_f32_564_inst 24
    // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 238
    // (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    *[MUL_f32_f32_570_inst] (id type_cast_569_wire_constant) (iNsTr_1_571) 
    $delay MUL_f32_f32_570_inst 24
    // 		iNsTr_2 := (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    //  file prog.aa, line 239
    // (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    *[MUL_f32_f32_576_inst] (iNsTr_1_571 type_cast_575_wire_constant) (iNsTr_2_577) 
    $delay MUL_f32_f32_576_inst 24
    // 		ret_val__ := (iNsTr_2 + iNsTr_0)
    //  file prog.aa, line 240
    // (iNsTr_2 + iNsTr_0)
    +[ADD_f32_f32_581_inst] (iNsTr_2_577 iNsTr_0_565) (ret_val__) 
    $delay ADD_f32_f32_581_inst 24
  }
  // end data-path
  // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
  //  file prog.aa, line 237
  // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995000e-01 ))
  MUL_f32_f32_564_inst <=> (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_564_Sample/rr branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_564_Update/cr) (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_564_Sample/ra branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_564_Update/ca)
  // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  //  file prog.aa, line 238
  // (id * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  MUL_f32_f32_570_inst <=> (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_570_Sample/rr branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_570_Update/cr) (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_570_Sample/ra branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_570_Update/ca)
  // 		iNsTr_2 := (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
  //  file prog.aa, line 239
  // (iNsTr_1 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
  MUL_f32_f32_576_inst <=> (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_576_Sample/rr branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_576_Update/cr) (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_576_Sample/ra branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/MUL_f32_f32_576_Update/ca)
  // 		ret_val__ := (iNsTr_2 + iNsTr_0)
  //  file prog.aa, line 240
  // (iNsTr_2 + iNsTr_0)
  ADD_f32_f32_581_inst <=> (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/ADD_f32_f32_581_Sample/rr branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/ADD_f32_f32_581_Update/cr) (branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/ADD_f32_f32_581_Sample/ra branch_block_stmt_559/assign_stmt_565_to_assign_stmt_582/ADD_f32_f32_581_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 242
}
$module [setBit64] 
{
  $in reg:$int<64>
  // can point into  foreign( $void )
  pos:$int<8>
  // can point into  foreign( $void )
  value:$int<8>
  // can point into  foreign( $void )
  $out ret_val__:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %setBit64
  //  file prog.aa, line 73
  // pipe-declarations for block %setBit64%body
  //  file prog.aa, line 78
  // pipe-declarations for block %setBit64%body%
  //  file prog.aa, line 90
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_181] // Branch Block  file prog.aa, line 78
    {
      $P [branch_block_stmt_181__entry__]
      branch_block_stmt_181__entry__ <-| ($entry)
      $P [branch_block_stmt_181__exit__]
      branch_block_stmt_181__exit__ |-> ($exit)
      $P [assign_stmt_185_to_assign_stmt_222__entry__] 
      $P [assign_stmt_185_to_assign_stmt_222__exit__] 
      $P [return__]
      $P [merge_stmt_224__exit__] 
      ::[assign_stmt_185_to_assign_stmt_222] 
      {
        // 		iNsTr_0 := ($cast ($uint<64>) value )
        //  file prog.aa, line 81
        // Source expression
        // ($cast ($uint<64>) value )
        $T[type_cast_184_sample_start_] 
        $T[type_cast_184_sample_completed_] 
        $T[type_cast_184_update_start_] 
        $T[type_cast_184_update_completed_] 
        // value
        $T[R_value_183_sample_start_] 
        $T[R_value_183_sample_completed_] 
        $T[R_value_183_update_start_] 
        $T[R_value_183_update_completed_] 
        // reference to interface object
        R_value_183_sample_start_ <-& ($entry)
        R_value_183_sample_completed_ <-& (R_value_183_sample_start_)
        R_value_183_update_start_ <-& (R_value_183_sample_completed_)
        R_value_183_update_completed_ <-& (R_value_183_update_start_)
        type_cast_184_sample_start_ <-& (R_value_183_update_completed_)
        ;;[type_cast_184_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_184_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_184_sample_start_ &-> (type_cast_184_Sample)
        type_cast_184_sample_completed_ <-& (type_cast_184_Sample)
        type_cast_184_sample_completed_ &-> ($null)
        type_cast_184_update_start_ &-> (type_cast_184_Update)
        type_cast_184_update_completed_ <-& (type_cast_184_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := ($cast ($uint<64>) pos )
        //  file prog.aa, line 82
        // Source expression
        // ($cast ($uint<64>) pos )
        $T[type_cast_188_sample_start_] 
        $T[type_cast_188_sample_completed_] 
        $T[type_cast_188_update_start_] 
        $T[type_cast_188_update_completed_] 
        // pos
        $T[R_pos_187_sample_start_] 
        $T[R_pos_187_sample_completed_] 
        $T[R_pos_187_update_start_] 
        $T[R_pos_187_update_completed_] 
        // reference to interface object
        R_pos_187_sample_start_ <-& ($entry)
        R_pos_187_sample_completed_ <-& (R_pos_187_sample_start_)
        R_pos_187_update_start_ <-& (R_pos_187_sample_completed_)
        R_pos_187_update_completed_ <-& (R_pos_187_update_start_)
        type_cast_188_sample_start_ <-& (R_pos_187_update_completed_)
        ;;[type_cast_188_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_188_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_188_sample_start_ &-> (type_cast_188_Sample)
        type_cast_188_sample_completed_ <-& (type_cast_188_Sample)
        type_cast_188_sample_completed_ &-> ($null)
        type_cast_188_update_start_ &-> (type_cast_188_Update)
        type_cast_188_update_completed_ <-& (type_cast_188_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.aa, line 83
        // Source expression
        // (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[AND_u64_u64_194_sample_start_] 
        $T[AND_u64_u64_194_sample_completed_] 
        $T[AND_u64_u64_194_update_start_] 
        $T[AND_u64_u64_194_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_191_sample_start_] 
        $T[R_iNsTr_0_191_sample_completed_] 
        $T[R_iNsTr_0_191_update_start_] 
        $T[R_iNsTr_0_191_update_completed_] 
        // implicit reference
        R_iNsTr_0_191_sample_start_ <-& (type_cast_184_update_completed_)
        R_iNsTr_0_191_sample_completed_ <-& (R_iNsTr_0_191_sample_start_)
        R_iNsTr_0_191_update_start_ <-& (R_iNsTr_0_191_sample_completed_)
        R_iNsTr_0_191_update_completed_ <-& (R_iNsTr_0_191_update_start_)
        AND_u64_u64_194_sample_start_ <-& (R_iNsTr_0_191_update_completed_)
        ;;[AND_u64_u64_194_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_194_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_194_sample_start_ &-> (AND_u64_u64_194_Sample)
        AND_u64_u64_194_sample_completed_ <-& (AND_u64_u64_194_Sample)
        AND_u64_u64_194_sample_completed_ &-> ($null)
        AND_u64_u64_194_update_start_ &-> (AND_u64_u64_194_Update)
        AND_u64_u64_194_update_completed_ <-& (AND_u64_u64_194_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 << iNsTr_1)
        //  file prog.aa, line 84
        // Source expression
        // (iNsTr_2 << iNsTr_1)
        $T[SHL_u64_u64_199_sample_start_] 
        $T[SHL_u64_u64_199_sample_completed_] 
        $T[SHL_u64_u64_199_update_start_] 
        $T[SHL_u64_u64_199_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_197_sample_start_] 
        $T[R_iNsTr_2_197_sample_completed_] 
        $T[R_iNsTr_2_197_update_start_] 
        $T[R_iNsTr_2_197_update_completed_] 
        // implicit reference
        R_iNsTr_2_197_sample_start_ <-& (AND_u64_u64_194_update_completed_)
        R_iNsTr_2_197_sample_completed_ <-& (R_iNsTr_2_197_sample_start_)
        R_iNsTr_2_197_update_start_ <-& (R_iNsTr_2_197_sample_completed_)
        R_iNsTr_2_197_update_completed_ <-& (R_iNsTr_2_197_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_198_sample_start_] 
        $T[R_iNsTr_1_198_sample_completed_] 
        $T[R_iNsTr_1_198_update_start_] 
        $T[R_iNsTr_1_198_update_completed_] 
        // implicit reference
        R_iNsTr_1_198_sample_start_ <-& (type_cast_188_update_completed_)
        R_iNsTr_1_198_sample_completed_ <-& (R_iNsTr_1_198_sample_start_)
        R_iNsTr_1_198_update_start_ <-& (R_iNsTr_1_198_sample_completed_)
        R_iNsTr_1_198_update_completed_ <-& (R_iNsTr_1_198_update_start_)
        SHL_u64_u64_199_sample_start_ <-& (R_iNsTr_2_197_update_completed_)
        SHL_u64_u64_199_sample_start_ <-& (R_iNsTr_1_198_update_completed_)
        ;;[SHL_u64_u64_199_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_199_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_199_sample_start_ &-> (SHL_u64_u64_199_Sample)
        SHL_u64_u64_199_sample_completed_ <-& (SHL_u64_u64_199_Sample)
        SHL_u64_u64_199_sample_completed_ &-> ($null)
        SHL_u64_u64_199_update_start_ &-> (SHL_u64_u64_199_Update)
        SHL_u64_u64_199_update_completed_ <-& (SHL_u64_u64_199_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
        //  file prog.aa, line 85
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
        $T[SHL_u64_u64_205_sample_start_] 
        $T[SHL_u64_u64_205_sample_completed_] 
        $T[SHL_u64_u64_205_update_start_] 
        $T[SHL_u64_u64_205_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_204_sample_start_] 
        $T[R_iNsTr_1_204_sample_completed_] 
        $T[R_iNsTr_1_204_update_start_] 
        $T[R_iNsTr_1_204_update_completed_] 
        // implicit reference
        R_iNsTr_1_204_sample_start_ <-& (type_cast_188_update_completed_)
        R_iNsTr_1_204_sample_completed_ <-& (R_iNsTr_1_204_sample_start_)
        R_iNsTr_1_204_update_start_ <-& (R_iNsTr_1_204_sample_completed_)
        R_iNsTr_1_204_update_completed_ <-& (R_iNsTr_1_204_update_start_)
        SHL_u64_u64_205_sample_start_ <-& (R_iNsTr_1_204_update_completed_)
        ;;[SHL_u64_u64_205_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_205_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_205_sample_start_ &-> (SHL_u64_u64_205_Sample)
        SHL_u64_u64_205_sample_completed_ <-& (SHL_u64_u64_205_Sample)
        SHL_u64_u64_205_sample_completed_ &-> ($null)
        SHL_u64_u64_205_update_start_ &-> (SHL_u64_u64_205_Update)
        SHL_u64_u64_205_update_completed_ <-& (SHL_u64_u64_205_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 86
        // Source expression
        // (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
        $T[XOR_u64_u64_211_sample_start_] 
        $T[XOR_u64_u64_211_sample_completed_] 
        $T[XOR_u64_u64_211_update_start_] 
        $T[XOR_u64_u64_211_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_208_sample_start_] 
        $T[R_iNsTr_4_208_sample_completed_] 
        $T[R_iNsTr_4_208_update_start_] 
        $T[R_iNsTr_4_208_update_completed_] 
        // implicit reference
        R_iNsTr_4_208_sample_start_ <-& (SHL_u64_u64_205_update_completed_)
        R_iNsTr_4_208_sample_completed_ <-& (R_iNsTr_4_208_sample_start_)
        R_iNsTr_4_208_update_start_ <-& (R_iNsTr_4_208_sample_completed_)
        R_iNsTr_4_208_update_completed_ <-& (R_iNsTr_4_208_update_start_)
        XOR_u64_u64_211_sample_start_ <-& (R_iNsTr_4_208_update_completed_)
        ;;[XOR_u64_u64_211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_211_sample_start_ &-> (XOR_u64_u64_211_Sample)
        XOR_u64_u64_211_sample_completed_ <-& (XOR_u64_u64_211_Sample)
        XOR_u64_u64_211_sample_completed_ &-> ($null)
        XOR_u64_u64_211_update_start_ &-> (XOR_u64_u64_211_Update)
        XOR_u64_u64_211_update_completed_ <-& (XOR_u64_u64_211_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & reg)
        //  file prog.aa, line 87
        // Source expression
        // (iNsTr_5 & reg)
        $T[AND_u64_u64_216_sample_start_] 
        $T[AND_u64_u64_216_sample_completed_] 
        $T[AND_u64_u64_216_update_start_] 
        $T[AND_u64_u64_216_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_214_sample_start_] 
        $T[R_iNsTr_5_214_sample_completed_] 
        $T[R_iNsTr_5_214_update_start_] 
        $T[R_iNsTr_5_214_update_completed_] 
        // implicit reference
        R_iNsTr_5_214_sample_start_ <-& (XOR_u64_u64_211_update_completed_)
        R_iNsTr_5_214_sample_completed_ <-& (R_iNsTr_5_214_sample_start_)
        R_iNsTr_5_214_update_start_ <-& (R_iNsTr_5_214_sample_completed_)
        R_iNsTr_5_214_update_completed_ <-& (R_iNsTr_5_214_update_start_)
        // reg
        $T[R_reg_215_sample_start_] 
        $T[R_reg_215_sample_completed_] 
        $T[R_reg_215_update_start_] 
        $T[R_reg_215_update_completed_] 
        // reference to interface object
        R_reg_215_sample_start_ <-& ($entry)
        R_reg_215_sample_completed_ <-& (R_reg_215_sample_start_)
        R_reg_215_update_start_ <-& (R_reg_215_sample_completed_)
        R_reg_215_update_completed_ <-& (R_reg_215_update_start_)
        AND_u64_u64_216_sample_start_ <-& (R_iNsTr_5_214_update_completed_)
        AND_u64_u64_216_sample_start_ <-& (R_reg_215_update_completed_)
        ;;[AND_u64_u64_216_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_216_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_216_sample_start_ &-> (AND_u64_u64_216_Sample)
        AND_u64_u64_216_sample_completed_ <-& (AND_u64_u64_216_Sample)
        AND_u64_u64_216_sample_completed_ &-> ($null)
        AND_u64_u64_216_update_start_ &-> (AND_u64_u64_216_Update)
        AND_u64_u64_216_update_completed_ <-& (AND_u64_u64_216_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		ret_val__ := (iNsTr_6 | iNsTr_3)
        //  file prog.aa, line 88
        // Source expression
        // (iNsTr_6 | iNsTr_3)
        $T[OR_u64_u64_221_sample_start_] 
        $T[OR_u64_u64_221_sample_completed_] 
        $T[OR_u64_u64_221_update_start_] 
        $T[OR_u64_u64_221_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_219_sample_start_] 
        $T[R_iNsTr_6_219_sample_completed_] 
        $T[R_iNsTr_6_219_update_start_] 
        $T[R_iNsTr_6_219_update_completed_] 
        // implicit reference
        R_iNsTr_6_219_sample_start_ <-& (AND_u64_u64_216_update_completed_)
        R_iNsTr_6_219_sample_completed_ <-& (R_iNsTr_6_219_sample_start_)
        R_iNsTr_6_219_update_start_ <-& (R_iNsTr_6_219_sample_completed_)
        R_iNsTr_6_219_update_completed_ <-& (R_iNsTr_6_219_update_start_)
        // iNsTr_3
        $T[R_iNsTr_3_220_sample_start_] 
        $T[R_iNsTr_3_220_sample_completed_] 
        $T[R_iNsTr_3_220_update_start_] 
        $T[R_iNsTr_3_220_update_completed_] 
        // implicit reference
        R_iNsTr_3_220_sample_start_ <-& (SHL_u64_u64_199_update_completed_)
        R_iNsTr_3_220_sample_completed_ <-& (R_iNsTr_3_220_sample_start_)
        R_iNsTr_3_220_update_start_ <-& (R_iNsTr_3_220_sample_completed_)
        R_iNsTr_3_220_update_completed_ <-& (R_iNsTr_3_220_update_start_)
        OR_u64_u64_221_sample_start_ <-& (R_iNsTr_6_219_update_completed_)
        OR_u64_u64_221_sample_start_ <-& (R_iNsTr_3_220_update_completed_)
        ;;[OR_u64_u64_221_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_221_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_221_sample_start_ &-> (OR_u64_u64_221_Sample)
        OR_u64_u64_221_sample_completed_ <-& (OR_u64_u64_221_Sample)
        OR_u64_u64_221_sample_completed_ &-> ($null)
        OR_u64_u64_221_update_start_ &-> (OR_u64_u64_221_Update)
        OR_u64_u64_221_update_completed_ <-& (OR_u64_u64_221_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_185_to_assign_stmt_222__entry__ |-> (assign_stmt_185_to_assign_stmt_222)
      assign_stmt_185_to_assign_stmt_222__exit__ <-| (assign_stmt_185_to_assign_stmt_222)
      // control-path for merge  
      //  file prog.aa, line 90
      //---------------------   merge statement  file prog.aa, line 90  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_224_PhiReqMerge] 
      merge_stmt_224_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_224_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_224_PhiReqMerge |-> (merge_stmt_224_PhiAck)
      merge_stmt_224__exit__  <-| (merge_stmt_224_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 90  --------------------------
      assign_stmt_185_to_assign_stmt_222__entry__ <-| (branch_block_stmt_181__entry__)
      return__ <-| (assign_stmt_185_to_assign_stmt_222__exit__)
      merge_stmt_224__exit__ |-> (branch_block_stmt_181__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setBit64%body%
    //  file prog.aa, line 90
    // constant-object-declarations for block %setBit64%body
    //  file prog.aa, line 78
    // constant-object-declarations for block %setBit64
    //  file prog.aa, line 73
    // constant-declarations for block %setBit64%body
    //  file prog.aa, line 78
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_193_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_203_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_210_wire_constant] : $int<64> := _b1111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %setBit64%body%
    //  file prog.aa, line 90
    // block %setBit64%body
    //  file prog.aa, line 78
    // 		iNsTr_0 := ($cast ($uint<64>) value )
    //  file prog.aa, line 81
    // iNsTr_0
    $W[iNsTr_0_185] : $int<64>
    // 		iNsTr_1 := ($cast ($uint<64>) pos )
    //  file prog.aa, line 82
    // iNsTr_1
    $W[iNsTr_1_189] : $int<64>
    // 		iNsTr_2 := (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.aa, line 83
    // iNsTr_2
    $W[iNsTr_2_195] : $int<64>
    // 		iNsTr_3 := (iNsTr_2 << iNsTr_1)
    //  file prog.aa, line 84
    // iNsTr_3
    $W[iNsTr_3_200] : $int<64>
    // 		iNsTr_4 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
    //  file prog.aa, line 85
    // iNsTr_4
    $W[iNsTr_4_206] : $int<64>
    // 		iNsTr_5 := (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 86
    // iNsTr_5
    $W[iNsTr_5_212] : $int<64>
    // 		iNsTr_6 := (iNsTr_5 & reg)
    //  file prog.aa, line 87
    // iNsTr_6
    $W[iNsTr_6_217] : $int<64>
    // 		ret_val__ := (iNsTr_6 | iNsTr_3)
    //  file prog.aa, line 88
    // ret_val__
    // datapath-instances for block %setBit64%body
    //  file prog.aa, line 78
    // 		iNsTr_0 := ($cast ($uint<64>) value )
    //  file prog.aa, line 81
    // ($cast ($uint<64>) value )
    # := [type_cast_184_inst] (value) (iNsTr_0_185) 
    $delay type_cast_184_inst 1
    // 		iNsTr_1 := ($cast ($uint<64>) pos )
    //  file prog.aa, line 82
    // ($cast ($uint<64>) pos )
    # := [type_cast_188_inst] (pos) (iNsTr_1_189) 
    $delay type_cast_188_inst 1
    // 		iNsTr_2 := (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.aa, line 83
    // (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    &[AND_u64_u64_194_inst] (iNsTr_0_185 type_cast_193_wire_constant) (iNsTr_2_195) 
    $delay AND_u64_u64_194_inst 1
    // 		iNsTr_3 := (iNsTr_2 << iNsTr_1)
    //  file prog.aa, line 84
    // (iNsTr_2 << iNsTr_1)
    <<[SHL_u64_u64_199_inst] (iNsTr_2_195 iNsTr_1_189) (iNsTr_3_200) 
    $delay SHL_u64_u64_199_inst 1
    // 		iNsTr_4 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
    //  file prog.aa, line 85
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
    <<[SHL_u64_u64_205_inst] (type_cast_203_wire_constant iNsTr_1_189) (iNsTr_4_206) 
    $delay SHL_u64_u64_205_inst 1
    // 		iNsTr_5 := (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 86
    // (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    ^[XOR_u64_u64_211_inst] (iNsTr_4_206 type_cast_210_wire_constant) (iNsTr_5_212) 
    $delay XOR_u64_u64_211_inst 1
    // 		iNsTr_6 := (iNsTr_5 & reg)
    //  file prog.aa, line 87
    // (iNsTr_5 & reg)
    &[AND_u64_u64_216_inst] (iNsTr_5_212 reg) (iNsTr_6_217) 
    $delay AND_u64_u64_216_inst 1
    // 		ret_val__ := (iNsTr_6 | iNsTr_3)
    //  file prog.aa, line 88
    // (iNsTr_6 | iNsTr_3)
    |[OR_u64_u64_221_inst] (iNsTr_6_217 iNsTr_3_200) (ret_val__) 
    $delay OR_u64_u64_221_inst 1
  }
  // end data-path
  // 		iNsTr_0 := ($cast ($uint<64>) value )
  //  file prog.aa, line 81
  // ($cast ($uint<64>) value )
  type_cast_184_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_184_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_184_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_184_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_184_Update/ca)
  // 		iNsTr_1 := ($cast ($uint<64>) pos )
  //  file prog.aa, line 82
  // ($cast ($uint<64>) pos )
  type_cast_188_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_188_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_188_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_188_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/type_cast_188_Update/ca)
  // 		iNsTr_2 := (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.aa, line 83
  // (iNsTr_0 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  AND_u64_u64_194_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_194_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_194_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_194_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_194_Update/ca)
  // 		iNsTr_3 := (iNsTr_2 << iNsTr_1)
  //  file prog.aa, line 84
  // (iNsTr_2 << iNsTr_1)
  SHL_u64_u64_199_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_199_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_199_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_199_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_199_Update/ca)
  // 		iNsTr_4 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
  //  file prog.aa, line 85
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) << iNsTr_1)
  SHL_u64_u64_205_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_205_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_205_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_205_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/SHL_u64_u64_205_Update/ca)
  // 		iNsTr_5 := (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 86
  // (iNsTr_4 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
  XOR_u64_u64_211_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/XOR_u64_u64_211_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/XOR_u64_u64_211_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/XOR_u64_u64_211_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/XOR_u64_u64_211_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & reg)
  //  file prog.aa, line 87
  // (iNsTr_5 & reg)
  AND_u64_u64_216_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_216_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_216_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_216_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/AND_u64_u64_216_Update/ca)
  // 		ret_val__ := (iNsTr_6 | iNsTr_3)
  //  file prog.aa, line 88
  // (iNsTr_6 | iNsTr_3)
  OR_u64_u64_221_inst <=> (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/OR_u64_u64_221_Sample/rr branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/OR_u64_u64_221_Update/cr) (branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/OR_u64_u64_221_Sample/ra branch_block_stmt_181/assign_stmt_185_to_assign_stmt_222/OR_u64_u64_221_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 90
}
$module [setSlice64] 
{
  $in reg:$int<64>
  // can point into  foreign( $void )
  h:$int<8>
  // can point into  foreign( $void )
  l:$int<8>
  // can point into  foreign( $void )
  value:$int<64>
  // can point into  foreign( $void )
  $out ret_val__:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %setSlice64
  //  file prog.aa, line 49
  // pipe-declarations for block %setSlice64%body
  //  file prog.aa, line 54
  // pipe-declarations for block %setSlice64%body%
  //  file prog.aa, line 70
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_109] // Branch Block  file prog.aa, line 54
    {
      $P [branch_block_stmt_109__entry__]
      branch_block_stmt_109__entry__ <-| ($entry)
      $P [branch_block_stmt_109__exit__]
      branch_block_stmt_109__exit__ |-> ($exit)
      $P [assign_stmt_113_to_assign_stmt_171__entry__] 
      $P [assign_stmt_113_to_assign_stmt_171__exit__] 
      $P [return__]
      $P [merge_stmt_173__exit__] 
      ::[assign_stmt_113_to_assign_stmt_171] 
      {
        // 		iNsTr_0 := ($cast ($uint<64>) h )
        //  file prog.aa, line 57
        // Source expression
        // ($cast ($uint<64>) h )
        $T[type_cast_112_sample_start_] 
        $T[type_cast_112_sample_completed_] 
        $T[type_cast_112_update_start_] 
        $T[type_cast_112_update_completed_] 
        // h
        $T[R_h_111_sample_start_] 
        $T[R_h_111_sample_completed_] 
        $T[R_h_111_update_start_] 
        $T[R_h_111_update_completed_] 
        // reference to interface object
        R_h_111_sample_start_ <-& ($entry)
        R_h_111_sample_completed_ <-& (R_h_111_sample_start_)
        R_h_111_update_start_ <-& (R_h_111_sample_completed_)
        R_h_111_update_completed_ <-& (R_h_111_update_start_)
        type_cast_112_sample_start_ <-& (R_h_111_update_completed_)
        ;;[type_cast_112_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_112_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_112_sample_start_ &-> (type_cast_112_Sample)
        type_cast_112_sample_completed_ <-& (type_cast_112_Sample)
        type_cast_112_sample_completed_ &-> ($null)
        type_cast_112_update_start_ &-> (type_cast_112_Update)
        type_cast_112_update_completed_ <-& (type_cast_112_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := ($cast ($uint<64>) l )
        //  file prog.aa, line 58
        // Source expression
        // ($cast ($uint<64>) l )
        $T[type_cast_116_sample_start_] 
        $T[type_cast_116_sample_completed_] 
        $T[type_cast_116_update_start_] 
        $T[type_cast_116_update_completed_] 
        // l
        $T[R_l_115_sample_start_] 
        $T[R_l_115_sample_completed_] 
        $T[R_l_115_update_start_] 
        $T[R_l_115_update_completed_] 
        // reference to interface object
        R_l_115_sample_start_ <-& ($entry)
        R_l_115_sample_completed_ <-& (R_l_115_sample_start_)
        R_l_115_update_start_ <-& (R_l_115_sample_completed_)
        R_l_115_update_completed_ <-& (R_l_115_update_start_)
        type_cast_116_sample_start_ <-& (R_l_115_update_completed_)
        ;;[type_cast_116_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_116_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_116_sample_start_ &-> (type_cast_116_Sample)
        type_cast_116_sample_completed_ <-& (type_cast_116_Sample)
        type_cast_116_sample_completed_ &-> ($null)
        type_cast_116_update_start_ &-> (type_cast_116_Update)
        type_cast_116_update_completed_ <-& (type_cast_116_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        //  file prog.aa, line 59
        // Source expression
        // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
        $T[SUB_u64_u64_122_sample_start_] 
        $T[SUB_u64_u64_122_sample_completed_] 
        $T[SUB_u64_u64_122_update_start_] 
        $T[SUB_u64_u64_122_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_121_sample_start_] 
        $T[R_iNsTr_0_121_sample_completed_] 
        $T[R_iNsTr_0_121_update_start_] 
        $T[R_iNsTr_0_121_update_completed_] 
        // implicit reference
        R_iNsTr_0_121_sample_start_ <-& (type_cast_112_update_completed_)
        R_iNsTr_0_121_sample_completed_ <-& (R_iNsTr_0_121_sample_start_)
        R_iNsTr_0_121_update_start_ <-& (R_iNsTr_0_121_sample_completed_)
        R_iNsTr_0_121_update_completed_ <-& (R_iNsTr_0_121_update_start_)
        SUB_u64_u64_122_sample_start_ <-& (R_iNsTr_0_121_update_completed_)
        ;;[SUB_u64_u64_122_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_122_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_122_sample_start_ &-> (SUB_u64_u64_122_Sample)
        SUB_u64_u64_122_sample_completed_ <-& (SUB_u64_u64_122_Sample)
        SUB_u64_u64_122_sample_completed_ &-> ($null)
        SUB_u64_u64_122_update_start_ &-> (SUB_u64_u64_122_Update)
        SUB_u64_u64_122_update_completed_ <-& (SUB_u64_u64_122_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
        //  file prog.aa, line 60
        // Source expression
        // (iNsTr_2 + iNsTr_1)
        $T[ADD_u64_u64_127_sample_start_] 
        $T[ADD_u64_u64_127_sample_completed_] 
        $T[ADD_u64_u64_127_update_start_] 
        $T[ADD_u64_u64_127_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_125_sample_start_] 
        $T[R_iNsTr_2_125_sample_completed_] 
        $T[R_iNsTr_2_125_update_start_] 
        $T[R_iNsTr_2_125_update_completed_] 
        // implicit reference
        R_iNsTr_2_125_sample_start_ <-& (SUB_u64_u64_122_update_completed_)
        R_iNsTr_2_125_sample_completed_ <-& (R_iNsTr_2_125_sample_start_)
        R_iNsTr_2_125_update_start_ <-& (R_iNsTr_2_125_sample_completed_)
        R_iNsTr_2_125_update_completed_ <-& (R_iNsTr_2_125_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_126_sample_start_] 
        $T[R_iNsTr_1_126_sample_completed_] 
        $T[R_iNsTr_1_126_update_start_] 
        $T[R_iNsTr_1_126_update_completed_] 
        // implicit reference
        R_iNsTr_1_126_sample_start_ <-& (type_cast_116_update_completed_)
        R_iNsTr_1_126_sample_completed_ <-& (R_iNsTr_1_126_sample_start_)
        R_iNsTr_1_126_update_start_ <-& (R_iNsTr_1_126_sample_completed_)
        R_iNsTr_1_126_update_completed_ <-& (R_iNsTr_1_126_update_start_)
        ADD_u64_u64_127_sample_start_ <-& (R_iNsTr_2_125_update_completed_)
        ADD_u64_u64_127_sample_start_ <-& (R_iNsTr_1_126_update_completed_)
        ;;[ADD_u64_u64_127_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_127_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_127_sample_start_ &-> (ADD_u64_u64_127_Sample)
        ADD_u64_u64_127_sample_completed_ <-& (ADD_u64_u64_127_Sample)
        ADD_u64_u64_127_sample_completed_ &-> ($null)
        ADD_u64_u64_127_update_start_ &-> (ADD_u64_u64_127_Update)
        ADD_u64_u64_127_update_completed_ <-& (ADD_u64_u64_127_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        //  file prog.aa, line 61
        // Source expression
        // (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
        $T[AND_u64_u64_133_sample_start_] 
        $T[AND_u64_u64_133_sample_completed_] 
        $T[AND_u64_u64_133_update_start_] 
        $T[AND_u64_u64_133_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_130_sample_start_] 
        $T[R_iNsTr_3_130_sample_completed_] 
        $T[R_iNsTr_3_130_update_start_] 
        $T[R_iNsTr_3_130_update_completed_] 
        // implicit reference
        R_iNsTr_3_130_sample_start_ <-& (ADD_u64_u64_127_update_completed_)
        R_iNsTr_3_130_sample_completed_ <-& (R_iNsTr_3_130_sample_start_)
        R_iNsTr_3_130_update_start_ <-& (R_iNsTr_3_130_sample_completed_)
        R_iNsTr_3_130_update_completed_ <-& (R_iNsTr_3_130_update_start_)
        AND_u64_u64_133_sample_start_ <-& (R_iNsTr_3_130_update_completed_)
        ;;[AND_u64_u64_133_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_133_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_133_sample_start_ &-> (AND_u64_u64_133_Sample)
        AND_u64_u64_133_sample_completed_ <-& (AND_u64_u64_133_Sample)
        AND_u64_u64_133_sample_completed_ &-> ($null)
        AND_u64_u64_133_update_start_ &-> (AND_u64_u64_133_Update)
        AND_u64_u64_133_update_completed_ <-& (AND_u64_u64_133_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
        //  file prog.aa, line 62
        // Source expression
        // (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
        $T[LSHR_u64_u64_139_sample_start_] 
        $T[LSHR_u64_u64_139_sample_completed_] 
        $T[LSHR_u64_u64_139_update_start_] 
        $T[LSHR_u64_u64_139_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_138_sample_start_] 
        $T[R_iNsTr_4_138_sample_completed_] 
        $T[R_iNsTr_4_138_update_start_] 
        $T[R_iNsTr_4_138_update_completed_] 
        // implicit reference
        R_iNsTr_4_138_sample_start_ <-& (AND_u64_u64_133_update_completed_)
        R_iNsTr_4_138_sample_completed_ <-& (R_iNsTr_4_138_sample_start_)
        R_iNsTr_4_138_update_start_ <-& (R_iNsTr_4_138_sample_completed_)
        R_iNsTr_4_138_update_completed_ <-& (R_iNsTr_4_138_update_start_)
        LSHR_u64_u64_139_sample_start_ <-& (R_iNsTr_4_138_update_completed_)
        ;;[LSHR_u64_u64_139_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u64_u64_139_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u64_u64_139_sample_start_ &-> (LSHR_u64_u64_139_Sample)
        LSHR_u64_u64_139_sample_completed_ <-& (LSHR_u64_u64_139_Sample)
        LSHR_u64_u64_139_sample_completed_ &-> ($null)
        LSHR_u64_u64_139_update_start_ &-> (LSHR_u64_u64_139_Update)
        LSHR_u64_u64_139_update_completed_ <-& (LSHR_u64_u64_139_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & value)
        //  file prog.aa, line 63
        // Source expression
        // (iNsTr_5 & value)
        $T[AND_u64_u64_144_sample_start_] 
        $T[AND_u64_u64_144_sample_completed_] 
        $T[AND_u64_u64_144_update_start_] 
        $T[AND_u64_u64_144_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_142_sample_start_] 
        $T[R_iNsTr_5_142_sample_completed_] 
        $T[R_iNsTr_5_142_update_start_] 
        $T[R_iNsTr_5_142_update_completed_] 
        // implicit reference
        R_iNsTr_5_142_sample_start_ <-& (LSHR_u64_u64_139_update_completed_)
        R_iNsTr_5_142_sample_completed_ <-& (R_iNsTr_5_142_sample_start_)
        R_iNsTr_5_142_update_start_ <-& (R_iNsTr_5_142_sample_completed_)
        R_iNsTr_5_142_update_completed_ <-& (R_iNsTr_5_142_update_start_)
        // value
        $T[R_value_143_sample_start_] 
        $T[R_value_143_sample_completed_] 
        $T[R_value_143_update_start_] 
        $T[R_value_143_update_completed_] 
        // reference to interface object
        R_value_143_sample_start_ <-& ($entry)
        R_value_143_sample_completed_ <-& (R_value_143_sample_start_)
        R_value_143_update_start_ <-& (R_value_143_sample_completed_)
        R_value_143_update_completed_ <-& (R_value_143_update_start_)
        AND_u64_u64_144_sample_start_ <-& (R_iNsTr_5_142_update_completed_)
        AND_u64_u64_144_sample_start_ <-& (R_value_143_update_completed_)
        ;;[AND_u64_u64_144_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_144_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_144_sample_start_ &-> (AND_u64_u64_144_Sample)
        AND_u64_u64_144_sample_completed_ <-& (AND_u64_u64_144_Sample)
        AND_u64_u64_144_sample_completed_ &-> ($null)
        AND_u64_u64_144_update_start_ &-> (AND_u64_u64_144_Update)
        AND_u64_u64_144_update_completed_ <-& (AND_u64_u64_144_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_6 << iNsTr_1)
        //  file prog.aa, line 64
        // Source expression
        // (iNsTr_6 << iNsTr_1)
        $T[SHL_u64_u64_149_sample_start_] 
        $T[SHL_u64_u64_149_sample_completed_] 
        $T[SHL_u64_u64_149_update_start_] 
        $T[SHL_u64_u64_149_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_147_sample_start_] 
        $T[R_iNsTr_6_147_sample_completed_] 
        $T[R_iNsTr_6_147_update_start_] 
        $T[R_iNsTr_6_147_update_completed_] 
        // implicit reference
        R_iNsTr_6_147_sample_start_ <-& (AND_u64_u64_144_update_completed_)
        R_iNsTr_6_147_sample_completed_ <-& (R_iNsTr_6_147_sample_start_)
        R_iNsTr_6_147_update_start_ <-& (R_iNsTr_6_147_sample_completed_)
        R_iNsTr_6_147_update_completed_ <-& (R_iNsTr_6_147_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_148_sample_start_] 
        $T[R_iNsTr_1_148_sample_completed_] 
        $T[R_iNsTr_1_148_update_start_] 
        $T[R_iNsTr_1_148_update_completed_] 
        // implicit reference
        R_iNsTr_1_148_sample_start_ <-& (type_cast_116_update_completed_)
        R_iNsTr_1_148_sample_completed_ <-& (R_iNsTr_1_148_sample_start_)
        R_iNsTr_1_148_update_start_ <-& (R_iNsTr_1_148_sample_completed_)
        R_iNsTr_1_148_update_completed_ <-& (R_iNsTr_1_148_update_start_)
        SHL_u64_u64_149_sample_start_ <-& (R_iNsTr_6_147_update_completed_)
        SHL_u64_u64_149_sample_start_ <-& (R_iNsTr_1_148_update_completed_)
        ;;[SHL_u64_u64_149_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_149_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_149_sample_start_ &-> (SHL_u64_u64_149_Sample)
        SHL_u64_u64_149_sample_completed_ <-& (SHL_u64_u64_149_Sample)
        SHL_u64_u64_149_sample_completed_ &-> ($null)
        SHL_u64_u64_149_update_start_ &-> (SHL_u64_u64_149_Update)
        SHL_u64_u64_149_update_completed_ <-& (SHL_u64_u64_149_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_5 << iNsTr_1)
        //  file prog.aa, line 65
        // Source expression
        // (iNsTr_5 << iNsTr_1)
        $T[SHL_u64_u64_154_sample_start_] 
        $T[SHL_u64_u64_154_sample_completed_] 
        $T[SHL_u64_u64_154_update_start_] 
        $T[SHL_u64_u64_154_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_152_sample_start_] 
        $T[R_iNsTr_5_152_sample_completed_] 
        $T[R_iNsTr_5_152_update_start_] 
        $T[R_iNsTr_5_152_update_completed_] 
        // implicit reference
        R_iNsTr_5_152_sample_start_ <-& (LSHR_u64_u64_139_update_completed_)
        R_iNsTr_5_152_sample_completed_ <-& (R_iNsTr_5_152_sample_start_)
        R_iNsTr_5_152_update_start_ <-& (R_iNsTr_5_152_sample_completed_)
        R_iNsTr_5_152_update_completed_ <-& (R_iNsTr_5_152_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_153_sample_start_] 
        $T[R_iNsTr_1_153_sample_completed_] 
        $T[R_iNsTr_1_153_update_start_] 
        $T[R_iNsTr_1_153_update_completed_] 
        // implicit reference
        R_iNsTr_1_153_sample_start_ <-& (type_cast_116_update_completed_)
        R_iNsTr_1_153_sample_completed_ <-& (R_iNsTr_1_153_sample_start_)
        R_iNsTr_1_153_update_start_ <-& (R_iNsTr_1_153_sample_completed_)
        R_iNsTr_1_153_update_completed_ <-& (R_iNsTr_1_153_update_start_)
        SHL_u64_u64_154_sample_start_ <-& (R_iNsTr_5_152_update_completed_)
        SHL_u64_u64_154_sample_start_ <-& (R_iNsTr_1_153_update_completed_)
        ;;[SHL_u64_u64_154_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u64_u64_154_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u64_u64_154_sample_start_ &-> (SHL_u64_u64_154_Sample)
        SHL_u64_u64_154_sample_completed_ <-& (SHL_u64_u64_154_Sample)
        SHL_u64_u64_154_sample_completed_ &-> ($null)
        SHL_u64_u64_154_update_start_ &-> (SHL_u64_u64_154_Update)
        SHL_u64_u64_154_update_completed_ <-& (SHL_u64_u64_154_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 66
        // Source expression
        // (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
        $T[XOR_u64_u64_160_sample_start_] 
        $T[XOR_u64_u64_160_sample_completed_] 
        $T[XOR_u64_u64_160_update_start_] 
        $T[XOR_u64_u64_160_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_157_sample_start_] 
        $T[R_iNsTr_8_157_sample_completed_] 
        $T[R_iNsTr_8_157_update_start_] 
        $T[R_iNsTr_8_157_update_completed_] 
        // implicit reference
        R_iNsTr_8_157_sample_start_ <-& (SHL_u64_u64_154_update_completed_)
        R_iNsTr_8_157_sample_completed_ <-& (R_iNsTr_8_157_sample_start_)
        R_iNsTr_8_157_update_start_ <-& (R_iNsTr_8_157_sample_completed_)
        R_iNsTr_8_157_update_completed_ <-& (R_iNsTr_8_157_update_start_)
        XOR_u64_u64_160_sample_start_ <-& (R_iNsTr_8_157_update_completed_)
        ;;[XOR_u64_u64_160_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_160_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_160_sample_start_ &-> (XOR_u64_u64_160_Sample)
        XOR_u64_u64_160_sample_completed_ <-& (XOR_u64_u64_160_Sample)
        XOR_u64_u64_160_sample_completed_ &-> ($null)
        XOR_u64_u64_160_update_start_ &-> (XOR_u64_u64_160_Update)
        XOR_u64_u64_160_update_completed_ <-& (XOR_u64_u64_160_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 & reg)
        //  file prog.aa, line 67
        // Source expression
        // (iNsTr_9 & reg)
        $T[AND_u64_u64_165_sample_start_] 
        $T[AND_u64_u64_165_sample_completed_] 
        $T[AND_u64_u64_165_update_start_] 
        $T[AND_u64_u64_165_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_163_sample_start_] 
        $T[R_iNsTr_9_163_sample_completed_] 
        $T[R_iNsTr_9_163_update_start_] 
        $T[R_iNsTr_9_163_update_completed_] 
        // implicit reference
        R_iNsTr_9_163_sample_start_ <-& (XOR_u64_u64_160_update_completed_)
        R_iNsTr_9_163_sample_completed_ <-& (R_iNsTr_9_163_sample_start_)
        R_iNsTr_9_163_update_start_ <-& (R_iNsTr_9_163_sample_completed_)
        R_iNsTr_9_163_update_completed_ <-& (R_iNsTr_9_163_update_start_)
        // reg
        $T[R_reg_164_sample_start_] 
        $T[R_reg_164_sample_completed_] 
        $T[R_reg_164_update_start_] 
        $T[R_reg_164_update_completed_] 
        // reference to interface object
        R_reg_164_sample_start_ <-& ($entry)
        R_reg_164_sample_completed_ <-& (R_reg_164_sample_start_)
        R_reg_164_update_start_ <-& (R_reg_164_sample_completed_)
        R_reg_164_update_completed_ <-& (R_reg_164_update_start_)
        AND_u64_u64_165_sample_start_ <-& (R_iNsTr_9_163_update_completed_)
        AND_u64_u64_165_sample_start_ <-& (R_reg_164_update_completed_)
        ;;[AND_u64_u64_165_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_165_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_165_sample_start_ &-> (AND_u64_u64_165_Sample)
        AND_u64_u64_165_sample_completed_ <-& (AND_u64_u64_165_Sample)
        AND_u64_u64_165_sample_completed_ &-> ($null)
        AND_u64_u64_165_update_start_ &-> (AND_u64_u64_165_Update)
        AND_u64_u64_165_update_completed_ <-& (AND_u64_u64_165_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		ret_val__ := (iNsTr_10 | iNsTr_7)
        //  file prog.aa, line 68
        // Source expression
        // (iNsTr_10 | iNsTr_7)
        $T[OR_u64_u64_170_sample_start_] 
        $T[OR_u64_u64_170_sample_completed_] 
        $T[OR_u64_u64_170_update_start_] 
        $T[OR_u64_u64_170_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_168_sample_start_] 
        $T[R_iNsTr_10_168_sample_completed_] 
        $T[R_iNsTr_10_168_update_start_] 
        $T[R_iNsTr_10_168_update_completed_] 
        // implicit reference
        R_iNsTr_10_168_sample_start_ <-& (AND_u64_u64_165_update_completed_)
        R_iNsTr_10_168_sample_completed_ <-& (R_iNsTr_10_168_sample_start_)
        R_iNsTr_10_168_update_start_ <-& (R_iNsTr_10_168_sample_completed_)
        R_iNsTr_10_168_update_completed_ <-& (R_iNsTr_10_168_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_169_sample_start_] 
        $T[R_iNsTr_7_169_sample_completed_] 
        $T[R_iNsTr_7_169_update_start_] 
        $T[R_iNsTr_7_169_update_completed_] 
        // implicit reference
        R_iNsTr_7_169_sample_start_ <-& (SHL_u64_u64_149_update_completed_)
        R_iNsTr_7_169_sample_completed_ <-& (R_iNsTr_7_169_sample_start_)
        R_iNsTr_7_169_update_start_ <-& (R_iNsTr_7_169_sample_completed_)
        R_iNsTr_7_169_update_completed_ <-& (R_iNsTr_7_169_update_start_)
        OR_u64_u64_170_sample_start_ <-& (R_iNsTr_10_168_update_completed_)
        OR_u64_u64_170_sample_start_ <-& (R_iNsTr_7_169_update_completed_)
        ;;[OR_u64_u64_170_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_170_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_170_sample_start_ &-> (OR_u64_u64_170_Sample)
        OR_u64_u64_170_sample_completed_ <-& (OR_u64_u64_170_Sample)
        OR_u64_u64_170_sample_completed_ &-> ($null)
        OR_u64_u64_170_update_start_ &-> (OR_u64_u64_170_Update)
        OR_u64_u64_170_update_completed_ <-& (OR_u64_u64_170_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_113_to_assign_stmt_171__entry__ |-> (assign_stmt_113_to_assign_stmt_171)
      assign_stmt_113_to_assign_stmt_171__exit__ <-| (assign_stmt_113_to_assign_stmt_171)
      // control-path for merge  
      //  file prog.aa, line 70
      //---------------------   merge statement  file prog.aa, line 70  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_173_PhiReqMerge] 
      merge_stmt_173_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_173_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_173_PhiReqMerge |-> (merge_stmt_173_PhiAck)
      merge_stmt_173__exit__  <-| (merge_stmt_173_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 70  --------------------------
      assign_stmt_113_to_assign_stmt_171__entry__ <-| (branch_block_stmt_109__entry__)
      return__ <-| (assign_stmt_113_to_assign_stmt_171__exit__)
      merge_stmt_173__exit__ |-> (branch_block_stmt_109__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setSlice64%body%
    //  file prog.aa, line 70
    // constant-object-declarations for block %setSlice64%body
    //  file prog.aa, line 54
    // constant-object-declarations for block %setSlice64
    //  file prog.aa, line 49
    // constant-declarations for block %setSlice64%body
    //  file prog.aa, line 54
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  )
    $constant $W[type_cast_120_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111111// 63
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  )
    $constant $W[type_cast_132_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_137_wire_constant] : $int<64> := _b1111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_159_wire_constant] : $int<64> := _b1111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %setSlice64%body%
    //  file prog.aa, line 70
    // block %setSlice64%body
    //  file prog.aa, line 54
    // 		iNsTr_0 := ($cast ($uint<64>) h )
    //  file prog.aa, line 57
    // iNsTr_0
    $W[iNsTr_0_113] : $int<64>
    // 		iNsTr_1 := ($cast ($uint<64>) l )
    //  file prog.aa, line 58
    // iNsTr_1
    $W[iNsTr_1_117] : $int<64>
    // 		iNsTr_2 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 59
    // iNsTr_2
    $W[iNsTr_2_123] : $int<64>
    // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
    //  file prog.aa, line 60
    // iNsTr_3
    $W[iNsTr_3_128] : $int<64>
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 61
    // iNsTr_4
    $W[iNsTr_4_134] : $int<64>
    // 		iNsTr_5 := (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
    //  file prog.aa, line 62
    // iNsTr_5
    $W[iNsTr_5_140] : $int<64>
    // 		iNsTr_6 := (iNsTr_5 & value)
    //  file prog.aa, line 63
    // iNsTr_6
    $W[iNsTr_6_145] : $int<64>
    // 		iNsTr_7 := (iNsTr_6 << iNsTr_1)
    //  file prog.aa, line 64
    // iNsTr_7
    $W[iNsTr_7_150] : $int<64>
    // 		iNsTr_8 := (iNsTr_5 << iNsTr_1)
    //  file prog.aa, line 65
    // iNsTr_8
    $W[iNsTr_8_155] : $int<64>
    // 		iNsTr_9 := (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 66
    // iNsTr_9
    $W[iNsTr_9_161] : $int<64>
    // 		iNsTr_10 := (iNsTr_9 & reg)
    //  file prog.aa, line 67
    // iNsTr_10
    $W[iNsTr_10_166] : $int<64>
    // 		ret_val__ := (iNsTr_10 | iNsTr_7)
    //  file prog.aa, line 68
    // ret_val__
    // datapath-instances for block %setSlice64%body
    //  file prog.aa, line 54
    // 		iNsTr_0 := ($cast ($uint<64>) h )
    //  file prog.aa, line 57
    // ($cast ($uint<64>) h )
    # := [type_cast_112_inst] (h) (iNsTr_0_113) 
    $delay type_cast_112_inst 1
    // 		iNsTr_1 := ($cast ($uint<64>) l )
    //  file prog.aa, line 58
    // ($cast ($uint<64>) l )
    # := [type_cast_116_inst] (l) (iNsTr_1_117) 
    $delay type_cast_116_inst 1
    // 		iNsTr_2 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    //  file prog.aa, line 59
    // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
    -[SUB_u64_u64_122_inst] (type_cast_120_wire_constant iNsTr_0_113) (iNsTr_2_123) 
    $delay SUB_u64_u64_122_inst 1
    // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
    //  file prog.aa, line 60
    // (iNsTr_2 + iNsTr_1)
    +[ADD_u64_u64_127_inst] (iNsTr_2_123 iNsTr_1_117) (iNsTr_3_128) 
    $delay ADD_u64_u64_127_inst 1
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    //  file prog.aa, line 61
    // (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
    &[AND_u64_u64_133_inst] (iNsTr_3_128 type_cast_132_wire_constant) (iNsTr_4_134) 
    $delay AND_u64_u64_133_inst 1
    // 		iNsTr_5 := (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
    //  file prog.aa, line 62
    // (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
    >>[LSHR_u64_u64_139_inst] (type_cast_137_wire_constant iNsTr_4_134) (iNsTr_5_140) 
    $delay LSHR_u64_u64_139_inst 1
    // 		iNsTr_6 := (iNsTr_5 & value)
    //  file prog.aa, line 63
    // (iNsTr_5 & value)
    &[AND_u64_u64_144_inst] (iNsTr_5_140 value) (iNsTr_6_145) 
    $delay AND_u64_u64_144_inst 1
    // 		iNsTr_7 := (iNsTr_6 << iNsTr_1)
    //  file prog.aa, line 64
    // (iNsTr_6 << iNsTr_1)
    <<[SHL_u64_u64_149_inst] (iNsTr_6_145 iNsTr_1_117) (iNsTr_7_150) 
    $delay SHL_u64_u64_149_inst 1
    // 		iNsTr_8 := (iNsTr_5 << iNsTr_1)
    //  file prog.aa, line 65
    // (iNsTr_5 << iNsTr_1)
    <<[SHL_u64_u64_154_inst] (iNsTr_5_140 iNsTr_1_117) (iNsTr_8_155) 
    $delay SHL_u64_u64_154_inst 1
    // 		iNsTr_9 := (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 66
    // (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
    ^[XOR_u64_u64_160_inst] (iNsTr_8_155 type_cast_159_wire_constant) (iNsTr_9_161) 
    $delay XOR_u64_u64_160_inst 1
    // 		iNsTr_10 := (iNsTr_9 & reg)
    //  file prog.aa, line 67
    // (iNsTr_9 & reg)
    &[AND_u64_u64_165_inst] (iNsTr_9_161 reg) (iNsTr_10_166) 
    $delay AND_u64_u64_165_inst 1
    // 		ret_val__ := (iNsTr_10 | iNsTr_7)
    //  file prog.aa, line 68
    // (iNsTr_10 | iNsTr_7)
    |[OR_u64_u64_170_inst] (iNsTr_10_166 iNsTr_7_150) (ret_val__) 
    $delay OR_u64_u64_170_inst 1
  }
  // end data-path
  // 		iNsTr_0 := ($cast ($uint<64>) h )
  //  file prog.aa, line 57
  // ($cast ($uint<64>) h )
  type_cast_112_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_112_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_112_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_112_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_112_Update/ca)
  // 		iNsTr_1 := ($cast ($uint<64>) l )
  //  file prog.aa, line 58
  // ($cast ($uint<64>) l )
  type_cast_116_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_116_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_116_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_116_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/type_cast_116_Update/ca)
  // 		iNsTr_2 := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  //  file prog.aa, line 59
  // (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111111  ) - iNsTr_0)
  SUB_u64_u64_122_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SUB_u64_u64_122_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SUB_u64_u64_122_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SUB_u64_u64_122_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SUB_u64_u64_122_Update/ca)
  // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
  //  file prog.aa, line 60
  // (iNsTr_2 + iNsTr_1)
  ADD_u64_u64_127_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/ADD_u64_u64_127_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/ADD_u64_u64_127_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/ADD_u64_u64_127_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/ADD_u64_u64_127_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  //  file prog.aa, line 61
  // (iNsTr_3 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111111  ))
  AND_u64_u64_133_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_133_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_133_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_133_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_133_Update/ca)
  // 		iNsTr_5 := (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
  //  file prog.aa, line 62
  // (($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ) >> iNsTr_4)
  LSHR_u64_u64_139_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/LSHR_u64_u64_139_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/LSHR_u64_u64_139_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/LSHR_u64_u64_139_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/LSHR_u64_u64_139_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & value)
  //  file prog.aa, line 63
  // (iNsTr_5 & value)
  AND_u64_u64_144_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_144_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_144_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_144_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_144_Update/ca)
  // 		iNsTr_7 := (iNsTr_6 << iNsTr_1)
  //  file prog.aa, line 64
  // (iNsTr_6 << iNsTr_1)
  SHL_u64_u64_149_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_149_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_149_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_149_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_149_Update/ca)
  // 		iNsTr_8 := (iNsTr_5 << iNsTr_1)
  //  file prog.aa, line 65
  // (iNsTr_5 << iNsTr_1)
  SHL_u64_u64_154_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_154_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_154_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_154_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/SHL_u64_u64_154_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 66
  // (iNsTr_8 ^ ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  ))
  XOR_u64_u64_160_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/XOR_u64_u64_160_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/XOR_u64_u64_160_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/XOR_u64_u64_160_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/XOR_u64_u64_160_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 & reg)
  //  file prog.aa, line 67
  // (iNsTr_9 & reg)
  AND_u64_u64_165_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_165_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_165_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_165_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/AND_u64_u64_165_Update/ca)
  // 		ret_val__ := (iNsTr_10 | iNsTr_7)
  //  file prog.aa, line 68
  // (iNsTr_10 | iNsTr_7)
  OR_u64_u64_170_inst <=> (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/OR_u64_u64_170_Sample/rr branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/OR_u64_u64_170_Update/cr) (branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/OR_u64_u64_170_Sample/ra branch_block_stmt_109/assign_stmt_113_to_assign_stmt_171/OR_u64_u64_170_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 70
}
$module [theta_calc] 
{
  $in omega_r:$float<8,23>
  // can point into  foreign( $void )
  omega_m:$float<8,23>
  // can point into  foreign( $void )
  del_t:$float<8,23>
  // can point into  foreign( $void )
  theta_prev:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %theta_calc
  //  file prog.aa, line 321
  // pipe-declarations for block %theta_calc%body
  //  file prog.aa, line 326
  // pipe-declarations for block %theta_calc%body%
  //  file prog.aa, line 332
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_869] // Branch Block  file prog.aa, line 326
    {
      $P [branch_block_stmt_869__entry__]
      branch_block_stmt_869__entry__ <-| ($entry)
      $P [branch_block_stmt_869__exit__]
      branch_block_stmt_869__exit__ |-> ($exit)
      $P [assign_stmt_874_to_assign_stmt_879__entry__] 
      $P [assign_stmt_874_to_assign_stmt_879__exit__] 
      $P [return__]
      $P [merge_stmt_881__exit__] 
      ::[assign_stmt_874_to_assign_stmt_879] 
      {
        // 		iNsTr_0 := (omega_m * del_t)
        //  file prog.aa, line 329
        // Source expression
        // (omega_m * del_t)
        $T[MUL_f32_f32_873_sample_start_] 
        $T[MUL_f32_f32_873_sample_completed_] 
        $T[MUL_f32_f32_873_update_start_] 
        $T[MUL_f32_f32_873_update_completed_] 
        // omega_m
        $T[R_omega_m_871_sample_start_] 
        $T[R_omega_m_871_sample_completed_] 
        $T[R_omega_m_871_update_start_] 
        $T[R_omega_m_871_update_completed_] 
        // reference to interface object
        R_omega_m_871_sample_start_ <-& ($entry)
        R_omega_m_871_sample_completed_ <-& (R_omega_m_871_sample_start_)
        R_omega_m_871_update_start_ <-& (R_omega_m_871_sample_completed_)
        R_omega_m_871_update_completed_ <-& (R_omega_m_871_update_start_)
        // del_t
        $T[R_del_t_872_sample_start_] 
        $T[R_del_t_872_sample_completed_] 
        $T[R_del_t_872_update_start_] 
        $T[R_del_t_872_update_completed_] 
        // reference to interface object
        R_del_t_872_sample_start_ <-& ($entry)
        R_del_t_872_sample_completed_ <-& (R_del_t_872_sample_start_)
        R_del_t_872_update_start_ <-& (R_del_t_872_sample_completed_)
        R_del_t_872_update_completed_ <-& (R_del_t_872_update_start_)
        MUL_f32_f32_873_sample_start_ <-& (R_omega_m_871_update_completed_)
        MUL_f32_f32_873_sample_start_ <-& (R_del_t_872_update_completed_)
        ;;[MUL_f32_f32_873_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_873_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_873_sample_start_ &-> (MUL_f32_f32_873_Sample)
        MUL_f32_f32_873_sample_completed_ <-& (MUL_f32_f32_873_Sample)
        MUL_f32_f32_873_sample_completed_ &-> ($null)
        MUL_f32_f32_873_update_start_ &-> (MUL_f32_f32_873_Update)
        MUL_f32_f32_873_update_completed_ <-& (MUL_f32_f32_873_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		ret_val__ := (iNsTr_0 + theta_prev)
        //  file prog.aa, line 330
        // Source expression
        // (iNsTr_0 + theta_prev)
        $T[ADD_f32_f32_878_sample_start_] 
        $T[ADD_f32_f32_878_sample_completed_] 
        $T[ADD_f32_f32_878_update_start_] 
        $T[ADD_f32_f32_878_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_876_sample_start_] 
        $T[R_iNsTr_0_876_sample_completed_] 
        $T[R_iNsTr_0_876_update_start_] 
        $T[R_iNsTr_0_876_update_completed_] 
        // implicit reference
        R_iNsTr_0_876_sample_start_ <-& (MUL_f32_f32_873_update_completed_)
        R_iNsTr_0_876_sample_completed_ <-& (R_iNsTr_0_876_sample_start_)
        R_iNsTr_0_876_update_start_ <-& (R_iNsTr_0_876_sample_completed_)
        R_iNsTr_0_876_update_completed_ <-& (R_iNsTr_0_876_update_start_)
        // theta_prev
        $T[R_theta_prev_877_sample_start_] 
        $T[R_theta_prev_877_sample_completed_] 
        $T[R_theta_prev_877_update_start_] 
        $T[R_theta_prev_877_update_completed_] 
        // reference to interface object
        R_theta_prev_877_sample_start_ <-& ($entry)
        R_theta_prev_877_sample_completed_ <-& (R_theta_prev_877_sample_start_)
        R_theta_prev_877_update_start_ <-& (R_theta_prev_877_sample_completed_)
        R_theta_prev_877_update_completed_ <-& (R_theta_prev_877_update_start_)
        ADD_f32_f32_878_sample_start_ <-& (R_iNsTr_0_876_update_completed_)
        ADD_f32_f32_878_sample_start_ <-& (R_theta_prev_877_update_completed_)
        ;;[ADD_f32_f32_878_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_878_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_878_sample_start_ &-> (ADD_f32_f32_878_Sample)
        ADD_f32_f32_878_sample_completed_ <-& (ADD_f32_f32_878_Sample)
        ADD_f32_f32_878_sample_completed_ &-> ($null)
        ADD_f32_f32_878_update_start_ &-> (ADD_f32_f32_878_Update)
        ADD_f32_f32_878_update_completed_ <-& (ADD_f32_f32_878_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_874_to_assign_stmt_879__entry__ |-> (assign_stmt_874_to_assign_stmt_879)
      assign_stmt_874_to_assign_stmt_879__exit__ <-| (assign_stmt_874_to_assign_stmt_879)
      // control-path for merge  
      //  file prog.aa, line 332
      //---------------------   merge statement  file prog.aa, line 332  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_881_PhiReqMerge] 
      merge_stmt_881_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_881_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_881_PhiReqMerge |-> (merge_stmt_881_PhiAck)
      merge_stmt_881__exit__  <-| (merge_stmt_881_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 332  --------------------------
      assign_stmt_874_to_assign_stmt_879__entry__ <-| (branch_block_stmt_869__entry__)
      return__ <-| (assign_stmt_874_to_assign_stmt_879__exit__)
      merge_stmt_881__exit__ |-> (branch_block_stmt_869__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %theta_calc%body%
    //  file prog.aa, line 332
    // constant-object-declarations for block %theta_calc%body
    //  file prog.aa, line 326
    // constant-object-declarations for block %theta_calc
    //  file prog.aa, line 321
    // constant-declarations for block %theta_calc%body
    //  file prog.aa, line 326
    // constant-declarations for block %theta_calc%body%
    //  file prog.aa, line 332
    // block %theta_calc%body
    //  file prog.aa, line 326
    // 		iNsTr_0 := (omega_m * del_t)
    //  file prog.aa, line 329
    // iNsTr_0
    $W[iNsTr_0_874] : $float<8,23>
    // 		ret_val__ := (iNsTr_0 + theta_prev)
    //  file prog.aa, line 330
    // ret_val__
    // datapath-instances for block %theta_calc%body
    //  file prog.aa, line 326
    // 		iNsTr_0 := (omega_m * del_t)
    //  file prog.aa, line 329
    // (omega_m * del_t)
    *[MUL_f32_f32_873_inst] (omega_m del_t) (iNsTr_0_874) 
    $delay MUL_f32_f32_873_inst 24
    // 		ret_val__ := (iNsTr_0 + theta_prev)
    //  file prog.aa, line 330
    // (iNsTr_0 + theta_prev)
    +[ADD_f32_f32_878_inst] (iNsTr_0_874 theta_prev) (ret_val__) 
    $delay ADD_f32_f32_878_inst 24
  }
  // end data-path
  // 		iNsTr_0 := (omega_m * del_t)
  //  file prog.aa, line 329
  // (omega_m * del_t)
  MUL_f32_f32_873_inst <=> (branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/MUL_f32_f32_873_Sample/rr branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/MUL_f32_f32_873_Update/cr) (branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/MUL_f32_f32_873_Sample/ra branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/MUL_f32_f32_873_Update/ca)
  // 		ret_val__ := (iNsTr_0 + theta_prev)
  //  file prog.aa, line 330
  // (iNsTr_0 + theta_prev)
  ADD_f32_f32_878_inst <=> (branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/ADD_f32_f32_878_Sample/rr branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/ADD_f32_f32_878_Update/cr) (branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/ADD_f32_f32_878_Sample/ra branch_block_stmt_869/assign_stmt_874_to_assign_stmt_879/ADD_f32_f32_878_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 332
}
$module [vector_control_daemon] 
{
  // pipe-declarations for block %vector_control_daemon
  //  file prog.aa, line 412
  // pipe-declarations for block %vector_control_daemon%body
  //  file prog.aa, line 417
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 422
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 439
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 444
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 450
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 455
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 467
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 473
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 477
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 486
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 492
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 499
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 507
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 513
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 520
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 526
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 533
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 540
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 555
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 564
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 586
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 599
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 615
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 621
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 625
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 634
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 640
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 649
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 659
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1166] // Branch Block  file prog.aa, line 417
    {
      $P [branch_block_stmt_1166__entry__]
      branch_block_stmt_1166__entry__ <-| ($entry)
      $P [branch_block_stmt_1166__exit__]
      branch_block_stmt_1166__exit__ |-> ($exit)
      $P [bb_0_bb_1]
      $P [merge_stmt_1168__exit__] 
      $P [assign_stmt_1214__entry__] 
      $P [assign_stmt_1214__exit__] 
      $P [assign_stmt_1217__entry__] 
      $P [assign_stmt_1217__exit__] 
      $P [assign_stmt_1220__entry__] 
      $P [assign_stmt_1220__exit__] 
      $P [assign_stmt_1223__entry__] 
      $P [assign_stmt_1223__exit__] 
      $P [assign_stmt_1226__entry__] 
      $P [assign_stmt_1226__exit__] 
      $P [assign_stmt_1231__entry__] 
      $P [assign_stmt_1231__exit__] 
      $P [if_stmt_1232__entry__] 
      $P [if_stmt_1232__exit__] 
      $P [merge_stmt_1238__entry__] 
      $P [merge_stmt_1238__exit__] 
      $P [assign_stmt_1244__entry__] 
      $P [assign_stmt_1244__exit__] 
      $P [bb_2_bb_5]
      $P [merge_stmt_1246__exit__] 
      $P [assign_stmt_1251__entry__] 
      $P [assign_stmt_1251__exit__] 
      $P [if_stmt_1252__entry__] 
      $P [if_stmt_1252__exit__] 
      $P [merge_stmt_1258__entry__] 
      $P [merge_stmt_1258__exit__] 
      $P [assign_stmt_1264__entry__] 
      $P [assign_stmt_1264__exit__] 
      $P [bb_4_bb_5]
      $P [merge_stmt_1266__exit__] 
      $P [assign_stmt_1280_to_assign_stmt_1307__entry__] 
      $P [assign_stmt_1280_to_assign_stmt_1307__exit__] 
      $P [if_stmt_1308__entry__] 
      $P [if_stmt_1308__exit__] 
      $P [merge_stmt_1314__entry__] 
      $P [merge_stmt_1314__exit__] 
      $P [assign_stmt_1320__entry__] 
      $P [assign_stmt_1320__exit__] 
      $P [if_stmt_1321__entry__] 
      $P [if_stmt_1321__exit__] 
      $P [merge_stmt_1327__entry__] 
      $P [merge_stmt_1327__exit__] 
      $P [bb_7_bb_8]
      $P [merge_stmt_1329__exit__] 
      $P [assign_stmt_1346_to_assign_stmt_1357__entry__] 
      $P [assign_stmt_1346_to_assign_stmt_1357__exit__] 
      $P [if_stmt_1358__entry__] 
      $P [if_stmt_1358__exit__] 
      $P [merge_stmt_1364__entry__] 
      $P [merge_stmt_1364__exit__] 
      $P [assign_stmt_1370__entry__] 
      $P [assign_stmt_1370__exit__] 
      $P [if_stmt_1371__entry__] 
      $P [if_stmt_1371__exit__] 
      $P [merge_stmt_1377__entry__] 
      $P [merge_stmt_1377__exit__] 
      $P [assign_stmt_1383_to_assign_stmt_1391__entry__] 
      $P [assign_stmt_1383_to_assign_stmt_1391__exit__] 
      $P [bb_10_bb_11]
      $P [merge_stmt_1393__exit__] 
      $P [assign_stmt_1408_to_assign_stmt_1414__entry__] 
      $P [assign_stmt_1408_to_assign_stmt_1414__exit__] 
      $P [if_stmt_1415__entry__] 
      $P [if_stmt_1415__exit__] 
      $P [merge_stmt_1421__entry__] 
      $P [merge_stmt_1421__exit__] 
      $P [assign_stmt_1427__entry__] 
      $P [assign_stmt_1427__exit__] 
      $P [if_stmt_1428__entry__] 
      $P [if_stmt_1428__exit__] 
      $P [merge_stmt_1434__entry__] 
      $P [merge_stmt_1434__exit__] 
      $P [assign_stmt_1440_to_assign_stmt_1452__entry__] 
      $P [assign_stmt_1440_to_assign_stmt_1452__exit__] 
      $P [bb_13_bb_17]
      $P [merge_stmt_1454__exit__] 
      $P [assign_stmt_1460__entry__] 
      $P [assign_stmt_1460__exit__] 
      $P [if_stmt_1461__entry__] 
      $P [if_stmt_1461__exit__] 
      $P [merge_stmt_1467__entry__] 
      $P [merge_stmt_1467__exit__] 
      $P [assign_stmt_1473_to_assign_stmt_1485__entry__] 
      $P [assign_stmt_1473_to_assign_stmt_1485__exit__] 
      $P [bb_15_bb_17]
      $P [merge_stmt_1487__exit__] 
      $P [assign_stmt_1493_to_assign_stmt_1505__entry__] 
      $P [assign_stmt_1493_to_assign_stmt_1505__exit__] 
      $P [bb_16_bb_17]
      $P [merge_stmt_1507__exit__] 
      $P [assign_stmt_1524_to_assign_stmt_1567__entry__] 
      $P [assign_stmt_1524_to_assign_stmt_1567__exit__] 
      $P [if_stmt_1568__entry__] 
      $P [if_stmt_1568__exit__] 
      $P [merge_stmt_1574__entry__] 
      $P [merge_stmt_1574__exit__] 
      $P [assign_stmt_1580_to_assign_stmt_1603__entry__] 
      $P [assign_stmt_1580_to_assign_stmt_1603__exit__] 
      $P [bb_18_bb_19]
      $P [merge_stmt_1605__exit__] 
      $P [assign_stmt_1619_to_assign_stmt_1700__entry__] 
      $P [assign_stmt_1619_to_assign_stmt_1700__exit__] 
      $P [if_stmt_1701__entry__] 
      $P [if_stmt_1701__exit__] 
      $P [merge_stmt_1707__entry__] 
      $P [merge_stmt_1707__exit__] 
      $P [assign_stmt_1712_to_assign_stmt_1753__entry__] 
      $P [assign_stmt_1712_to_assign_stmt_1753__exit__] 
      $P [bb_20_iq_err_calcx_xexit]
      $P [merge_stmt_1755__exit__] 
      $P [assign_stmt_1768_to_assign_stmt_1815__entry__] 
      $P [assign_stmt_1768_to_assign_stmt_1815__exit__] 
      $P [if_stmt_1816__entry__] 
      $P [if_stmt_1816__exit__] 
      $P [merge_stmt_1822__entry__] 
      $P [merge_stmt_1822__exit__] 
      $P [assign_stmt_1828__entry__] 
      $P [assign_stmt_1828__exit__] 
      $P [if_stmt_1829__entry__] 
      $P [if_stmt_1829__exit__] 
      $P [merge_stmt_1835__entry__] 
      $P [merge_stmt_1835__exit__] 
      $P [bb_23_bb_24]
      $P [merge_stmt_1837__exit__] 
      $P [assign_stmt_1854_to_assign_stmt_1865__entry__] 
      $P [assign_stmt_1854_to_assign_stmt_1865__exit__] 
      $P [if_stmt_1866__entry__] 
      $P [if_stmt_1866__exit__] 
      $P [merge_stmt_1872__entry__] 
      $P [merge_stmt_1872__exit__] 
      $P [assign_stmt_1878__entry__] 
      $P [assign_stmt_1878__exit__] 
      $P [if_stmt_1879__entry__] 
      $P [if_stmt_1879__exit__] 
      $P [merge_stmt_1885__entry__] 
      $P [merge_stmt_1885__exit__] 
      $P [assign_stmt_1889_to_assign_stmt_1905__entry__] 
      $P [assign_stmt_1889_to_assign_stmt_1905__exit__] 
      $P [if_stmt_1906__entry__] 
      $P [if_stmt_1906__exit__] 
      $P [merge_stmt_1912__entry__] 
      $P [merge_stmt_1912__exit__] 
      $P [assign_stmt_1929_to_assign_stmt_1949__entry__] 
      $P [assign_stmt_1929_to_assign_stmt_1949__exit__] 
      $P [xx_xthread12_fdiv32x_xexit]
      $P [merge_stmt_1951__exit__] 
      $P [assign_stmt_1971_to_assign_stmt_1984__entry__] 
      $P [assign_stmt_1971_to_assign_stmt_1984__exit__] 
      $P [assign_stmt_1987__entry__] 
      $P [assign_stmt_1987__exit__] 
      $P [assign_stmt_1990__entry__] 
      $P [assign_stmt_1990__exit__] 
      $P [assign_stmt_1993__entry__] 
      $P [assign_stmt_1993__exit__] 
      $P [assign_stmt_1996__entry__] 
      $P [assign_stmt_1996__exit__] 
      $P [assign_stmt_2002_to_assign_stmt_2014__entry__] 
      $P [assign_stmt_2002_to_assign_stmt_2014__exit__] 
      $P [fdiv32x_xexit_bb_1]
      ::[assign_stmt_1214] 
      {
        // 		iNsTr_2 := in_data1
        //  file prog.aa, line 430
        // Source expression
        // in_data1
        $T[RPIPE_in_data1_1213_sample_start_] 
        $T[RPIPE_in_data1_1213_sample_completed_] 
        $T[RPIPE_in_data1_1213_update_start_] 
        $T[RPIPE_in_data1_1213_update_completed_] 
        ;;[RPIPE_in_data1_1213_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data1_1213_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data1_1213_sample_start_ &-> (RPIPE_in_data1_1213_Sample)
        RPIPE_in_data1_1213_sample_completed_ <-& (RPIPE_in_data1_1213_Sample)
        RPIPE_in_data1_1213_sample_completed_ &-> ($null)
        RPIPE_in_data1_1213_update_start_ &-> (RPIPE_in_data1_1213_Update)
        RPIPE_in_data1_1213_update_completed_ <-& (RPIPE_in_data1_1213_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // barrier: 		iNsTr_2 := in_data1
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data1
      }
      assign_stmt_1214__entry__ |-> (assign_stmt_1214)
      assign_stmt_1214__exit__ <-| (assign_stmt_1214)
      ::[assign_stmt_1217] 
      {
        // 		iNsTr_4 := in_data2
        //  file prog.aa, line 431
        // Source expression
        // in_data2
        $T[RPIPE_in_data2_1216_sample_start_] 
        $T[RPIPE_in_data2_1216_sample_completed_] 
        $T[RPIPE_in_data2_1216_update_start_] 
        $T[RPIPE_in_data2_1216_update_completed_] 
        ;;[RPIPE_in_data2_1216_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data2_1216_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data2_1216_sample_start_ &-> (RPIPE_in_data2_1216_Sample)
        RPIPE_in_data2_1216_sample_completed_ <-& (RPIPE_in_data2_1216_Sample)
        RPIPE_in_data2_1216_sample_completed_ &-> ($null)
        RPIPE_in_data2_1216_update_start_ &-> (RPIPE_in_data2_1216_Update)
        RPIPE_in_data2_1216_update_completed_ <-& (RPIPE_in_data2_1216_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // barrier: 		iNsTr_4 := in_data2
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data2
      }
      assign_stmt_1217__entry__ |-> (assign_stmt_1217)
      assign_stmt_1217__exit__ <-| (assign_stmt_1217)
      ::[assign_stmt_1220] 
      {
        // 		iNsTr_6 := in_data3
        //  file prog.aa, line 432
        // Source expression
        // in_data3
        $T[RPIPE_in_data3_1219_sample_start_] 
        $T[RPIPE_in_data3_1219_sample_completed_] 
        $T[RPIPE_in_data3_1219_update_start_] 
        $T[RPIPE_in_data3_1219_update_completed_] 
        ;;[RPIPE_in_data3_1219_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data3_1219_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data3_1219_sample_start_ &-> (RPIPE_in_data3_1219_Sample)
        RPIPE_in_data3_1219_sample_completed_ <-& (RPIPE_in_data3_1219_Sample)
        RPIPE_in_data3_1219_sample_completed_ &-> ($null)
        RPIPE_in_data3_1219_update_start_ &-> (RPIPE_in_data3_1219_Update)
        RPIPE_in_data3_1219_update_completed_ <-& (RPIPE_in_data3_1219_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // barrier: 		iNsTr_6 := in_data3
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data3
      }
      assign_stmt_1220__entry__ |-> (assign_stmt_1220)
      assign_stmt_1220__exit__ <-| (assign_stmt_1220)
      ::[assign_stmt_1223] 
      {
        // 		iNsTr_8 := in_data4
        //  file prog.aa, line 433
        // Source expression
        // in_data4
        $T[RPIPE_in_data4_1222_sample_start_] 
        $T[RPIPE_in_data4_1222_sample_completed_] 
        $T[RPIPE_in_data4_1222_update_start_] 
        $T[RPIPE_in_data4_1222_update_completed_] 
        ;;[RPIPE_in_data4_1222_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data4_1222_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data4_1222_sample_start_ &-> (RPIPE_in_data4_1222_Sample)
        RPIPE_in_data4_1222_sample_completed_ <-& (RPIPE_in_data4_1222_Sample)
        RPIPE_in_data4_1222_sample_completed_ &-> ($null)
        RPIPE_in_data4_1222_update_start_ &-> (RPIPE_in_data4_1222_Update)
        RPIPE_in_data4_1222_update_completed_ <-& (RPIPE_in_data4_1222_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // barrier: 		iNsTr_8 := in_data4
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data4
      }
      assign_stmt_1223__entry__ |-> (assign_stmt_1223)
      assign_stmt_1223__exit__ <-| (assign_stmt_1223)
      ::[assign_stmt_1226] 
      {
        // 		iNsTr_10 := in_data5
        //  file prog.aa, line 434
        // Source expression
        // in_data5
        $T[RPIPE_in_data5_1225_sample_start_] 
        $T[RPIPE_in_data5_1225_sample_completed_] 
        $T[RPIPE_in_data5_1225_update_start_] 
        $T[RPIPE_in_data5_1225_update_completed_] 
        ;;[RPIPE_in_data5_1225_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data5_1225_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data5_1225_sample_start_ &-> (RPIPE_in_data5_1225_Sample)
        RPIPE_in_data5_1225_sample_completed_ <-& (RPIPE_in_data5_1225_Sample)
        RPIPE_in_data5_1225_sample_completed_ &-> ($null)
        RPIPE_in_data5_1225_update_start_ &-> (RPIPE_in_data5_1225_Update)
        RPIPE_in_data5_1225_update_completed_ <-& (RPIPE_in_data5_1225_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // barrier: 		iNsTr_10 := in_data5
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data5
      }
      assign_stmt_1226__entry__ |-> (assign_stmt_1226)
      assign_stmt_1226__exit__ <-| (assign_stmt_1226)
      ::[assign_stmt_1231] 
      {
        // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
        //  file prog.aa, line 436
        // Source expression
        // (speed_refx_x1 < iNsTr_8)
        $T[SLT_f32_u1_1230_sample_start_] 
        $T[SLT_f32_u1_1230_sample_completed_] 
        $T[SLT_f32_u1_1230_update_start_] 
        $T[SLT_f32_u1_1230_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1228_sample_start_] 
        $T[R_speed_refx_x1_1228_sample_completed_] 
        $T[R_speed_refx_x1_1228_update_start_] 
        $T[R_speed_refx_x1_1228_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1228_sample_start_ <-& ($entry)
        R_speed_refx_x1_1228_sample_completed_ <-& (R_speed_refx_x1_1228_sample_start_)
        R_speed_refx_x1_1228_update_start_ <-& (R_speed_refx_x1_1228_sample_completed_)
        R_speed_refx_x1_1228_update_completed_ <-& (R_speed_refx_x1_1228_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1229_sample_start_] 
        $T[R_iNsTr_8_1229_sample_completed_] 
        $T[R_iNsTr_8_1229_update_start_] 
        $T[R_iNsTr_8_1229_update_completed_] 
        // implicit reference
        R_iNsTr_8_1229_sample_start_ <-& ($entry)
        R_iNsTr_8_1229_sample_completed_ <-& (R_iNsTr_8_1229_sample_start_)
        R_iNsTr_8_1229_update_start_ <-& (R_iNsTr_8_1229_sample_completed_)
        R_iNsTr_8_1229_update_completed_ <-& (R_iNsTr_8_1229_update_start_)
        SLT_f32_u1_1230_sample_start_ <-& (R_speed_refx_x1_1228_update_completed_)
        SLT_f32_u1_1230_sample_start_ <-& (R_iNsTr_8_1229_update_completed_)
        ;;[SLT_f32_u1_1230_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1230_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1230_sample_start_ &-> (SLT_f32_u1_1230_Sample)
        SLT_f32_u1_1230_sample_completed_ <-& (SLT_f32_u1_1230_Sample)
        SLT_f32_u1_1230_sample_completed_ &-> ($null)
        SLT_f32_u1_1230_update_start_ &-> (SLT_f32_u1_1230_Update)
        SLT_f32_u1_1230_update_completed_ <-& (SLT_f32_u1_1230_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1231__entry__ |-> (assign_stmt_1231)
      assign_stmt_1231__exit__ <-| (assign_stmt_1231)
      // if-statement  
      //  file prog.aa, line 437
      ;;[if_stmt_1232_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1232__entry__ |-> (if_stmt_1232_dead_link)
      if_stmt_1232__exit__ <-| (if_stmt_1232_dead_link)
      ;;[if_stmt_1232_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1232__entry__ |-> (if_stmt_1232_eval_test)
      $P [R_iNsTr_11_1233_place]
      R_iNsTr_11_1233_place <-| (if_stmt_1232_eval_test)
      ;;[if_stmt_1232_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1232_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_11_1233_place |-> (if_stmt_1232_if_link if_stmt_1232_else_link)
      $P [bb_1_bb_2]
      bb_1_bb_2 <-| (if_stmt_1232_if_link)
      $P [bb_1_bb_3]
      bb_1_bb_3 <-| (if_stmt_1232_else_link)
      ::[assign_stmt_1244] 
      {
        // 		iNsTr_13 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
        //  file prog.aa, line 441
        // Source expression
        // (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
        $T[ADD_f32_f32_1243_sample_start_] 
        $T[ADD_f32_f32_1243_sample_completed_] 
        $T[ADD_f32_f32_1243_update_start_] 
        $T[ADD_f32_f32_1243_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1240_sample_start_] 
        $T[R_speed_refx_x1_1240_sample_completed_] 
        $T[R_speed_refx_x1_1240_update_start_] 
        $T[R_speed_refx_x1_1240_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1240_sample_start_ <-& ($entry)
        R_speed_refx_x1_1240_sample_completed_ <-& (R_speed_refx_x1_1240_sample_start_)
        R_speed_refx_x1_1240_update_start_ <-& (R_speed_refx_x1_1240_sample_completed_)
        R_speed_refx_x1_1240_update_completed_ <-& (R_speed_refx_x1_1240_update_start_)
        ADD_f32_f32_1243_sample_start_ <-& (R_speed_refx_x1_1240_update_completed_)
        ;;[ADD_f32_f32_1243_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1243_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1243_sample_start_ &-> (ADD_f32_f32_1243_Sample)
        ADD_f32_f32_1243_sample_completed_ <-& (ADD_f32_f32_1243_Sample)
        ADD_f32_f32_1243_sample_completed_ &-> ($null)
        ADD_f32_f32_1243_update_start_ &-> (ADD_f32_f32_1243_Update)
        ADD_f32_f32_1243_update_completed_ <-& (ADD_f32_f32_1243_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1244__entry__ |-> (assign_stmt_1244)
      assign_stmt_1244__exit__ <-| (assign_stmt_1244)
      ::[assign_stmt_1251] 
      {
        // 		iNsTr_15 := (speed_refx_x1 > iNsTr_8)
        //  file prog.aa, line 447
        // Source expression
        // (speed_refx_x1 > iNsTr_8)
        $T[SGT_f32_u1_1250_sample_start_] 
        $T[SGT_f32_u1_1250_sample_completed_] 
        $T[SGT_f32_u1_1250_update_start_] 
        $T[SGT_f32_u1_1250_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1248_sample_start_] 
        $T[R_speed_refx_x1_1248_sample_completed_] 
        $T[R_speed_refx_x1_1248_update_start_] 
        $T[R_speed_refx_x1_1248_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1248_sample_start_ <-& ($entry)
        R_speed_refx_x1_1248_sample_completed_ <-& (R_speed_refx_x1_1248_sample_start_)
        R_speed_refx_x1_1248_update_start_ <-& (R_speed_refx_x1_1248_sample_completed_)
        R_speed_refx_x1_1248_update_completed_ <-& (R_speed_refx_x1_1248_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1249_sample_start_] 
        $T[R_iNsTr_8_1249_sample_completed_] 
        $T[R_iNsTr_8_1249_update_start_] 
        $T[R_iNsTr_8_1249_update_completed_] 
        // implicit reference
        R_iNsTr_8_1249_sample_start_ <-& ($entry)
        R_iNsTr_8_1249_sample_completed_ <-& (R_iNsTr_8_1249_sample_start_)
        R_iNsTr_8_1249_update_start_ <-& (R_iNsTr_8_1249_sample_completed_)
        R_iNsTr_8_1249_update_completed_ <-& (R_iNsTr_8_1249_update_start_)
        SGT_f32_u1_1250_sample_start_ <-& (R_speed_refx_x1_1248_update_completed_)
        SGT_f32_u1_1250_sample_start_ <-& (R_iNsTr_8_1249_update_completed_)
        ;;[SGT_f32_u1_1250_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1250_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1250_sample_start_ &-> (SGT_f32_u1_1250_Sample)
        SGT_f32_u1_1250_sample_completed_ <-& (SGT_f32_u1_1250_Sample)
        SGT_f32_u1_1250_sample_completed_ &-> ($null)
        SGT_f32_u1_1250_update_start_ &-> (SGT_f32_u1_1250_Update)
        SGT_f32_u1_1250_update_completed_ <-& (SGT_f32_u1_1250_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1251__entry__ |-> (assign_stmt_1251)
      assign_stmt_1251__exit__ <-| (assign_stmt_1251)
      // if-statement  
      //  file prog.aa, line 448
      ;;[if_stmt_1252_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1252__entry__ |-> (if_stmt_1252_dead_link)
      if_stmt_1252__exit__ <-| (if_stmt_1252_dead_link)
      ;;[if_stmt_1252_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1252__entry__ |-> (if_stmt_1252_eval_test)
      $P [R_iNsTr_15_1253_place]
      R_iNsTr_15_1253_place <-| (if_stmt_1252_eval_test)
      ;;[if_stmt_1252_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1252_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_15_1253_place |-> (if_stmt_1252_if_link if_stmt_1252_else_link)
      $P [bb_3_bb_4]
      bb_3_bb_4 <-| (if_stmt_1252_if_link)
      $P [bb_3_bb_5]
      bb_3_bb_5 <-| (if_stmt_1252_else_link)
      ::[assign_stmt_1264] 
      {
        // 		iNsTr_24 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
        //  file prog.aa, line 452
        // Source expression
        // (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
        $T[ADD_f32_f32_1263_sample_start_] 
        $T[ADD_f32_f32_1263_sample_completed_] 
        $T[ADD_f32_f32_1263_update_start_] 
        $T[ADD_f32_f32_1263_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1260_sample_start_] 
        $T[R_speed_refx_x1_1260_sample_completed_] 
        $T[R_speed_refx_x1_1260_update_start_] 
        $T[R_speed_refx_x1_1260_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1260_sample_start_ <-& ($entry)
        R_speed_refx_x1_1260_sample_completed_ <-& (R_speed_refx_x1_1260_sample_start_)
        R_speed_refx_x1_1260_update_start_ <-& (R_speed_refx_x1_1260_sample_completed_)
        R_speed_refx_x1_1260_update_completed_ <-& (R_speed_refx_x1_1260_update_start_)
        ADD_f32_f32_1263_sample_start_ <-& (R_speed_refx_x1_1260_update_completed_)
        ;;[ADD_f32_f32_1263_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1263_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1263_sample_start_ &-> (ADD_f32_f32_1263_Sample)
        ADD_f32_f32_1263_sample_completed_ <-& (ADD_f32_f32_1263_Sample)
        ADD_f32_f32_1263_sample_completed_ &-> ($null)
        ADD_f32_f32_1263_update_start_ &-> (ADD_f32_f32_1263_Update)
        ADD_f32_f32_1263_update_completed_ <-& (ADD_f32_f32_1263_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1264__entry__ |-> (assign_stmt_1264)
      assign_stmt_1264__exit__ <-| (assign_stmt_1264)
      ::[assign_stmt_1280_to_assign_stmt_1307] 
      {
        // 		iNsTr_17 := (speed_refx_x0 - iNsTr_6)
        //  file prog.aa, line 458
        // Source expression
        // (speed_refx_x0 - iNsTr_6)
        $T[SUB_f32_f32_1279_sample_start_] 
        $T[SUB_f32_f32_1279_sample_completed_] 
        $T[SUB_f32_f32_1279_update_start_] 
        $T[SUB_f32_f32_1279_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1277_sample_start_] 
        $T[R_speed_refx_x0_1277_sample_completed_] 
        $T[R_speed_refx_x0_1277_update_start_] 
        $T[R_speed_refx_x0_1277_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1277_sample_start_ <-& ($entry)
        R_speed_refx_x0_1277_sample_completed_ <-& (R_speed_refx_x0_1277_sample_start_)
        R_speed_refx_x0_1277_update_start_ <-& (R_speed_refx_x0_1277_sample_completed_)
        R_speed_refx_x0_1277_update_completed_ <-& (R_speed_refx_x0_1277_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_1278_sample_start_] 
        $T[R_iNsTr_6_1278_sample_completed_] 
        $T[R_iNsTr_6_1278_update_start_] 
        $T[R_iNsTr_6_1278_update_completed_] 
        // implicit reference
        R_iNsTr_6_1278_sample_start_ <-& ($entry)
        R_iNsTr_6_1278_sample_completed_ <-& (R_iNsTr_6_1278_sample_start_)
        R_iNsTr_6_1278_update_start_ <-& (R_iNsTr_6_1278_sample_completed_)
        R_iNsTr_6_1278_update_completed_ <-& (R_iNsTr_6_1278_update_start_)
        SUB_f32_f32_1279_sample_start_ <-& (R_speed_refx_x0_1277_update_completed_)
        SUB_f32_f32_1279_sample_start_ <-& (R_iNsTr_6_1278_update_completed_)
        ;;[SUB_f32_f32_1279_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_1279_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_1279_sample_start_ &-> (SUB_f32_f32_1279_Sample)
        SUB_f32_f32_1279_sample_completed_ <-& (SUB_f32_f32_1279_Sample)
        SUB_f32_f32_1279_sample_completed_ &-> ($null)
        SUB_f32_f32_1279_update_start_ &-> (SUB_f32_f32_1279_Update)
        SUB_f32_f32_1279_update_completed_ <-& (SUB_f32_f32_1279_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 459
        // Source expression
        // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_1285_sample_start_] 
        $T[MUL_f32_f32_1285_sample_completed_] 
        $T[MUL_f32_f32_1285_update_start_] 
        $T[MUL_f32_f32_1285_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1282_sample_start_] 
        $T[R_iNsTr_17_1282_sample_completed_] 
        $T[R_iNsTr_17_1282_update_start_] 
        $T[R_iNsTr_17_1282_update_completed_] 
        // implicit reference
        R_iNsTr_17_1282_sample_start_ <-& (SUB_f32_f32_1279_update_completed_)
        R_iNsTr_17_1282_sample_completed_ <-& (R_iNsTr_17_1282_sample_start_)
        R_iNsTr_17_1282_update_start_ <-& (R_iNsTr_17_1282_sample_completed_)
        R_iNsTr_17_1282_update_completed_ <-& (R_iNsTr_17_1282_update_start_)
        MUL_f32_f32_1285_sample_start_ <-& (R_iNsTr_17_1282_update_completed_)
        ;;[MUL_f32_f32_1285_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1285_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1285_sample_start_ &-> (MUL_f32_f32_1285_Sample)
        MUL_f32_f32_1285_sample_completed_ <-& (MUL_f32_f32_1285_Sample)
        MUL_f32_f32_1285_sample_completed_ &-> ($null)
        MUL_f32_f32_1285_update_start_ &-> (MUL_f32_f32_1285_Update)
        MUL_f32_f32_1285_update_completed_ <-& (MUL_f32_f32_1285_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (iNsTr_18 + int_speed_err_temp_2x_x0)
        //  file prog.aa, line 460
        // Source expression
        // (iNsTr_18 + int_speed_err_temp_2x_x0)
        $T[ADD_f32_f32_1290_sample_start_] 
        $T[ADD_f32_f32_1290_sample_completed_] 
        $T[ADD_f32_f32_1290_update_start_] 
        $T[ADD_f32_f32_1290_update_completed_] 
        // iNsTr_18
        $T[R_iNsTr_18_1288_sample_start_] 
        $T[R_iNsTr_18_1288_sample_completed_] 
        $T[R_iNsTr_18_1288_update_start_] 
        $T[R_iNsTr_18_1288_update_completed_] 
        // implicit reference
        R_iNsTr_18_1288_sample_start_ <-& (MUL_f32_f32_1285_update_completed_)
        R_iNsTr_18_1288_sample_completed_ <-& (R_iNsTr_18_1288_sample_start_)
        R_iNsTr_18_1288_update_start_ <-& (R_iNsTr_18_1288_sample_completed_)
        R_iNsTr_18_1288_update_completed_ <-& (R_iNsTr_18_1288_update_start_)
        // int_speed_err_temp_2x_x0
        $T[R_int_speed_err_temp_2x_x0_1289_sample_start_] 
        $T[R_int_speed_err_temp_2x_x0_1289_sample_completed_] 
        $T[R_int_speed_err_temp_2x_x0_1289_update_start_] 
        $T[R_int_speed_err_temp_2x_x0_1289_update_completed_] 
        // implicit reference
        R_int_speed_err_temp_2x_x0_1289_sample_start_ <-& ($entry)
        R_int_speed_err_temp_2x_x0_1289_sample_completed_ <-& (R_int_speed_err_temp_2x_x0_1289_sample_start_)
        R_int_speed_err_temp_2x_x0_1289_update_start_ <-& (R_int_speed_err_temp_2x_x0_1289_sample_completed_)
        R_int_speed_err_temp_2x_x0_1289_update_completed_ <-& (R_int_speed_err_temp_2x_x0_1289_update_start_)
        ADD_f32_f32_1290_sample_start_ <-& (R_iNsTr_18_1288_update_completed_)
        ADD_f32_f32_1290_sample_start_ <-& (R_int_speed_err_temp_2x_x0_1289_update_completed_)
        ;;[ADD_f32_f32_1290_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1290_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1290_sample_start_ &-> (ADD_f32_f32_1290_Sample)
        ADD_f32_f32_1290_sample_completed_ <-& (ADD_f32_f32_1290_Sample)
        ADD_f32_f32_1290_sample_completed_ &-> ($null)
        ADD_f32_f32_1290_update_start_ &-> (ADD_f32_f32_1290_Update)
        ADD_f32_f32_1290_update_completed_ <-& (ADD_f32_f32_1290_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
        //  file prog.aa, line 461
        // Source expression
        // (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
        $T[MUL_f32_f32_1296_sample_start_] 
        $T[MUL_f32_f32_1296_sample_completed_] 
        $T[MUL_f32_f32_1296_update_start_] 
        $T[MUL_f32_f32_1296_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_1293_sample_start_] 
        $T[R_iNsTr_19_1293_sample_completed_] 
        $T[R_iNsTr_19_1293_update_start_] 
        $T[R_iNsTr_19_1293_update_completed_] 
        // implicit reference
        R_iNsTr_19_1293_sample_start_ <-& (ADD_f32_f32_1290_update_completed_)
        R_iNsTr_19_1293_sample_completed_ <-& (R_iNsTr_19_1293_sample_start_)
        R_iNsTr_19_1293_update_start_ <-& (R_iNsTr_19_1293_sample_completed_)
        R_iNsTr_19_1293_update_completed_ <-& (R_iNsTr_19_1293_update_start_)
        MUL_f32_f32_1296_sample_start_ <-& (R_iNsTr_19_1293_update_completed_)
        ;;[MUL_f32_f32_1296_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1296_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1296_sample_start_ &-> (MUL_f32_f32_1296_Sample)
        MUL_f32_f32_1296_sample_completed_ <-& (MUL_f32_f32_1296_Sample)
        MUL_f32_f32_1296_sample_completed_ &-> ($null)
        MUL_f32_f32_1296_update_start_ &-> (MUL_f32_f32_1296_Update)
        MUL_f32_f32_1296_update_completed_ <-& (MUL_f32_f32_1296_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := ($cast ($float<11,52>) iNsTr_20 )
        //  file prog.aa, line 462
        // Source expression
        // ($cast ($float<11,52>) iNsTr_20 )
        $T[type_cast_1300_sample_start_] 
        $T[type_cast_1300_sample_completed_] 
        $T[type_cast_1300_update_start_] 
        $T[type_cast_1300_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_1299_sample_start_] 
        $T[R_iNsTr_20_1299_sample_completed_] 
        $T[R_iNsTr_20_1299_update_start_] 
        $T[R_iNsTr_20_1299_update_completed_] 
        // implicit reference
        R_iNsTr_20_1299_sample_start_ <-& (MUL_f32_f32_1296_update_completed_)
        R_iNsTr_20_1299_sample_completed_ <-& (R_iNsTr_20_1299_sample_start_)
        R_iNsTr_20_1299_update_start_ <-& (R_iNsTr_20_1299_sample_completed_)
        R_iNsTr_20_1299_update_completed_ <-& (R_iNsTr_20_1299_update_start_)
        type_cast_1300_sample_start_ <-& (R_iNsTr_20_1299_update_completed_)
        ;;[type_cast_1300_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1300_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1300_sample_start_ &-> (type_cast_1300_Sample)
        type_cast_1300_sample_completed_ <-& (type_cast_1300_Sample)
        type_cast_1300_sample_completed_ &-> ($null)
        type_cast_1300_update_start_ &-> (type_cast_1300_Update)
        type_cast_1300_update_completed_ <-& (type_cast_1300_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
        //  file prog.aa, line 464
        // Source expression
        // (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
        $T[SLT_f64_u1_1306_sample_start_] 
        $T[SLT_f64_u1_1306_sample_completed_] 
        $T[SLT_f64_u1_1306_update_start_] 
        $T[SLT_f64_u1_1306_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1303_sample_start_] 
        $T[R_iNsTr_21_1303_sample_completed_] 
        $T[R_iNsTr_21_1303_update_start_] 
        $T[R_iNsTr_21_1303_update_completed_] 
        // implicit reference
        R_iNsTr_21_1303_sample_start_ <-& (type_cast_1300_update_completed_)
        R_iNsTr_21_1303_sample_completed_ <-& (R_iNsTr_21_1303_sample_start_)
        R_iNsTr_21_1303_update_start_ <-& (R_iNsTr_21_1303_sample_completed_)
        R_iNsTr_21_1303_update_completed_ <-& (R_iNsTr_21_1303_update_start_)
        SLT_f64_u1_1306_sample_start_ <-& (R_iNsTr_21_1303_update_completed_)
        ;;[SLT_f64_u1_1306_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_1306_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_1306_sample_start_ &-> (SLT_f64_u1_1306_Sample)
        SLT_f64_u1_1306_sample_completed_ <-& (SLT_f64_u1_1306_Sample)
        SLT_f64_u1_1306_sample_completed_ &-> ($null)
        SLT_f64_u1_1306_update_start_ &-> (SLT_f64_u1_1306_Update)
        SLT_f64_u1_1306_update_completed_ <-& (SLT_f64_u1_1306_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1280_to_assign_stmt_1307__entry__ |-> (assign_stmt_1280_to_assign_stmt_1307)
      assign_stmt_1280_to_assign_stmt_1307__exit__ <-| (assign_stmt_1280_to_assign_stmt_1307)
      // if-statement  
      //  file prog.aa, line 465
      ;;[if_stmt_1308_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1308__entry__ |-> (if_stmt_1308_dead_link)
      if_stmt_1308__exit__ <-| (if_stmt_1308_dead_link)
      ;;[if_stmt_1308_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1308__entry__ |-> (if_stmt_1308_eval_test)
      $P [R_iNsTr_22_1309_place]
      R_iNsTr_22_1309_place <-| (if_stmt_1308_eval_test)
      ;;[if_stmt_1308_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1308_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_22_1309_place |-> (if_stmt_1308_if_link if_stmt_1308_else_link)
      $P [bb_5_bb_8]
      bb_5_bb_8 <-| (if_stmt_1308_if_link)
      $P [bb_5_bb_6]
      bb_5_bb_6 <-| (if_stmt_1308_else_link)
      ::[assign_stmt_1320] 
      {
        // 		iNsTr_30 := (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
        //  file prog.aa, line 470
        // Source expression
        // (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
        $T[SGT_f64_u1_1319_sample_start_] 
        $T[SGT_f64_u1_1319_sample_completed_] 
        $T[SGT_f64_u1_1319_update_start_] 
        $T[SGT_f64_u1_1319_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1316_sample_start_] 
        $T[R_iNsTr_21_1316_sample_completed_] 
        $T[R_iNsTr_21_1316_update_start_] 
        $T[R_iNsTr_21_1316_update_completed_] 
        // implicit reference
        R_iNsTr_21_1316_sample_start_ <-& ($entry)
        R_iNsTr_21_1316_sample_completed_ <-& (R_iNsTr_21_1316_sample_start_)
        R_iNsTr_21_1316_update_start_ <-& (R_iNsTr_21_1316_sample_completed_)
        R_iNsTr_21_1316_update_completed_ <-& (R_iNsTr_21_1316_update_start_)
        SGT_f64_u1_1319_sample_start_ <-& (R_iNsTr_21_1316_update_completed_)
        ;;[SGT_f64_u1_1319_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_1319_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_1319_sample_start_ &-> (SGT_f64_u1_1319_Sample)
        SGT_f64_u1_1319_sample_completed_ <-& (SGT_f64_u1_1319_Sample)
        SGT_f64_u1_1319_sample_completed_ &-> ($null)
        SGT_f64_u1_1319_update_start_ &-> (SGT_f64_u1_1319_Update)
        SGT_f64_u1_1319_update_completed_ <-& (SGT_f64_u1_1319_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1320__entry__ |-> (assign_stmt_1320)
      assign_stmt_1320__exit__ <-| (assign_stmt_1320)
      // if-statement  
      //  file prog.aa, line 471
      ;;[if_stmt_1321_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1321__entry__ |-> (if_stmt_1321_dead_link)
      if_stmt_1321__exit__ <-| (if_stmt_1321_dead_link)
      ;;[if_stmt_1321_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1321__entry__ |-> (if_stmt_1321_eval_test)
      $P [R_iNsTr_30_1322_place]
      R_iNsTr_30_1322_place <-| (if_stmt_1321_eval_test)
      ;;[if_stmt_1321_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1321_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_30_1322_place |-> (if_stmt_1321_if_link if_stmt_1321_else_link)
      $P [bb_6_bb_8]
      bb_6_bb_8 <-| (if_stmt_1321_if_link)
      $P [bb_6_bb_7]
      bb_6_bb_7 <-| (if_stmt_1321_else_link)
      ::[assign_stmt_1346_to_assign_stmt_1357] 
      {
        // 		iNsTr_26 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
        //  file prog.aa, line 480
        // Source expression
        // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
        $T[MUL_f32_f32_1345_sample_start_] 
        $T[MUL_f32_f32_1345_sample_completed_] 
        $T[MUL_f32_f32_1345_update_start_] 
        $T[MUL_f32_f32_1345_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1342_sample_start_] 
        $T[R_iNsTr_17_1342_sample_completed_] 
        $T[R_iNsTr_17_1342_update_start_] 
        $T[R_iNsTr_17_1342_update_completed_] 
        // implicit reference
        R_iNsTr_17_1342_sample_start_ <-& ($entry)
        R_iNsTr_17_1342_sample_completed_ <-& (R_iNsTr_17_1342_sample_start_)
        R_iNsTr_17_1342_update_start_ <-& (R_iNsTr_17_1342_sample_completed_)
        R_iNsTr_17_1342_update_completed_ <-& (R_iNsTr_17_1342_update_start_)
        MUL_f32_f32_1345_sample_start_ <-& (R_iNsTr_17_1342_update_completed_)
        ;;[MUL_f32_f32_1345_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1345_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1345_sample_start_ &-> (MUL_f32_f32_1345_Sample)
        MUL_f32_f32_1345_sample_completed_ <-& (MUL_f32_f32_1345_Sample)
        MUL_f32_f32_1345_sample_completed_ &-> ($null)
        MUL_f32_f32_1345_update_start_ &-> (MUL_f32_f32_1345_Update)
        MUL_f32_f32_1345_update_completed_ <-& (MUL_f32_f32_1345_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		iNsTr_27 := (int_speed_errx_x0 + iNsTr_26)
        //  file prog.aa, line 481
        // Source expression
        // (int_speed_errx_x0 + iNsTr_26)
        $T[ADD_f32_f32_1350_sample_start_] 
        $T[ADD_f32_f32_1350_sample_completed_] 
        $T[ADD_f32_f32_1350_update_start_] 
        $T[ADD_f32_f32_1350_update_completed_] 
        // int_speed_errx_x0
        $T[R_int_speed_errx_x0_1348_sample_start_] 
        $T[R_int_speed_errx_x0_1348_sample_completed_] 
        $T[R_int_speed_errx_x0_1348_update_start_] 
        $T[R_int_speed_errx_x0_1348_update_completed_] 
        // implicit reference
        R_int_speed_errx_x0_1348_sample_start_ <-& ($entry)
        R_int_speed_errx_x0_1348_sample_completed_ <-& (R_int_speed_errx_x0_1348_sample_start_)
        R_int_speed_errx_x0_1348_update_start_ <-& (R_int_speed_errx_x0_1348_sample_completed_)
        R_int_speed_errx_x0_1348_update_completed_ <-& (R_int_speed_errx_x0_1348_update_start_)
        // iNsTr_26
        $T[R_iNsTr_26_1349_sample_start_] 
        $T[R_iNsTr_26_1349_sample_completed_] 
        $T[R_iNsTr_26_1349_update_start_] 
        $T[R_iNsTr_26_1349_update_completed_] 
        // implicit reference
        R_iNsTr_26_1349_sample_start_ <-& (MUL_f32_f32_1345_update_completed_)
        R_iNsTr_26_1349_sample_completed_ <-& (R_iNsTr_26_1349_sample_start_)
        R_iNsTr_26_1349_update_start_ <-& (R_iNsTr_26_1349_sample_completed_)
        R_iNsTr_26_1349_update_completed_ <-& (R_iNsTr_26_1349_update_start_)
        ADD_f32_f32_1350_sample_start_ <-& (R_int_speed_errx_x0_1348_update_completed_)
        ADD_f32_f32_1350_sample_start_ <-& (R_iNsTr_26_1349_update_completed_)
        ;;[ADD_f32_f32_1350_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1350_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1350_sample_start_ &-> (ADD_f32_f32_1350_Sample)
        ADD_f32_f32_1350_sample_completed_ <-& (ADD_f32_f32_1350_Sample)
        ADD_f32_f32_1350_sample_completed_ &-> ($null)
        ADD_f32_f32_1350_update_start_ &-> (ADD_f32_f32_1350_Update)
        ADD_f32_f32_1350_update_completed_ <-& (ADD_f32_f32_1350_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // 		iNsTr_28 := (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
        //  file prog.aa, line 483
        // Source expression
        // (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
        $T[SLT_f32_u1_1356_sample_start_] 
        $T[SLT_f32_u1_1356_sample_completed_] 
        $T[SLT_f32_u1_1356_update_start_] 
        $T[SLT_f32_u1_1356_update_completed_] 
        // iNsTr_27
        $T[R_iNsTr_27_1353_sample_start_] 
        $T[R_iNsTr_27_1353_sample_completed_] 
        $T[R_iNsTr_27_1353_update_start_] 
        $T[R_iNsTr_27_1353_update_completed_] 
        // implicit reference
        R_iNsTr_27_1353_sample_start_ <-& (ADD_f32_f32_1350_update_completed_)
        R_iNsTr_27_1353_sample_completed_ <-& (R_iNsTr_27_1353_sample_start_)
        R_iNsTr_27_1353_update_start_ <-& (R_iNsTr_27_1353_sample_completed_)
        R_iNsTr_27_1353_update_completed_ <-& (R_iNsTr_27_1353_update_start_)
        SLT_f32_u1_1356_sample_start_ <-& (R_iNsTr_27_1353_update_completed_)
        ;;[SLT_f32_u1_1356_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1356_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1356_sample_start_ &-> (SLT_f32_u1_1356_Sample)
        SLT_f32_u1_1356_sample_completed_ <-& (SLT_f32_u1_1356_Sample)
        SLT_f32_u1_1356_sample_completed_ &-> ($null)
        SLT_f32_u1_1356_update_start_ &-> (SLT_f32_u1_1356_Update)
        SLT_f32_u1_1356_update_completed_ <-& (SLT_f32_u1_1356_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1346_to_assign_stmt_1357__entry__ |-> (assign_stmt_1346_to_assign_stmt_1357)
      assign_stmt_1346_to_assign_stmt_1357__exit__ <-| (assign_stmt_1346_to_assign_stmt_1357)
      // if-statement  
      //  file prog.aa, line 484
      ;;[if_stmt_1358_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1358__entry__ |-> (if_stmt_1358_dead_link)
      if_stmt_1358__exit__ <-| (if_stmt_1358_dead_link)
      ;;[if_stmt_1358_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1358__entry__ |-> (if_stmt_1358_eval_test)
      $P [R_iNsTr_28_1359_place]
      R_iNsTr_28_1359_place <-| (if_stmt_1358_eval_test)
      ;;[if_stmt_1358_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1358_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_28_1359_place |-> (if_stmt_1358_if_link if_stmt_1358_else_link)
      $P [bb_8_bb_11]
      bb_8_bb_11 <-| (if_stmt_1358_if_link)
      $P [bb_8_bb_9]
      bb_8_bb_9 <-| (if_stmt_1358_else_link)
      ::[assign_stmt_1370] 
      {
        // 		iNsTr_35 := (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
        //  file prog.aa, line 489
        // Source expression
        // (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
        $T[SGT_f32_u1_1369_sample_start_] 
        $T[SGT_f32_u1_1369_sample_completed_] 
        $T[SGT_f32_u1_1369_update_start_] 
        $T[SGT_f32_u1_1369_update_completed_] 
        // iNsTr_27
        $T[R_iNsTr_27_1366_sample_start_] 
        $T[R_iNsTr_27_1366_sample_completed_] 
        $T[R_iNsTr_27_1366_update_start_] 
        $T[R_iNsTr_27_1366_update_completed_] 
        // implicit reference
        R_iNsTr_27_1366_sample_start_ <-& ($entry)
        R_iNsTr_27_1366_sample_completed_ <-& (R_iNsTr_27_1366_sample_start_)
        R_iNsTr_27_1366_update_start_ <-& (R_iNsTr_27_1366_sample_completed_)
        R_iNsTr_27_1366_update_completed_ <-& (R_iNsTr_27_1366_update_start_)
        SGT_f32_u1_1369_sample_start_ <-& (R_iNsTr_27_1366_update_completed_)
        ;;[SGT_f32_u1_1369_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1369_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1369_sample_start_ &-> (SGT_f32_u1_1369_Sample)
        SGT_f32_u1_1369_sample_completed_ <-& (SGT_f32_u1_1369_Sample)
        SGT_f32_u1_1369_sample_completed_ &-> ($null)
        SGT_f32_u1_1369_update_start_ &-> (SGT_f32_u1_1369_Update)
        SGT_f32_u1_1369_update_completed_ <-& (SGT_f32_u1_1369_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1370__entry__ |-> (assign_stmt_1370)
      assign_stmt_1370__exit__ <-| (assign_stmt_1370)
      // if-statement  
      //  file prog.aa, line 490
      ;;[if_stmt_1371_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1371__entry__ |-> (if_stmt_1371_dead_link)
      if_stmt_1371__exit__ <-| (if_stmt_1371_dead_link)
      ;;[if_stmt_1371_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1371__entry__ |-> (if_stmt_1371_eval_test)
      $P [R_iNsTr_35_1372_place]
      R_iNsTr_35_1372_place <-| (if_stmt_1371_eval_test)
      ;;[if_stmt_1371_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1371_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_35_1372_place |-> (if_stmt_1371_if_link if_stmt_1371_else_link)
      $P [bb_9_bb_11]
      bb_9_bb_11 <-| (if_stmt_1371_if_link)
      $P [bb_9_bb_10]
      bb_9_bb_10 <-| (if_stmt_1371_else_link)
      ::[assign_stmt_1383_to_assign_stmt_1391] 
      {
        // 		phitmp4 := (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
        //  file prog.aa, line 494
        // Source expression
        // (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
        $T[MUL_f32_f32_1382_sample_start_] 
        $T[MUL_f32_f32_1382_sample_completed_] 
        $T[MUL_f32_f32_1382_update_start_] 
        $T[MUL_f32_f32_1382_update_completed_] 
        // iNsTr_27
        $T[R_iNsTr_27_1379_sample_start_] 
        $T[R_iNsTr_27_1379_sample_completed_] 
        $T[R_iNsTr_27_1379_update_start_] 
        $T[R_iNsTr_27_1379_update_completed_] 
        // implicit reference
        R_iNsTr_27_1379_sample_start_ <-& ($entry)
        R_iNsTr_27_1379_sample_completed_ <-& (R_iNsTr_27_1379_sample_start_)
        R_iNsTr_27_1379_update_start_ <-& (R_iNsTr_27_1379_sample_completed_)
        R_iNsTr_27_1379_update_completed_ <-& (R_iNsTr_27_1379_update_start_)
        MUL_f32_f32_1382_sample_start_ <-& (R_iNsTr_27_1379_update_completed_)
        ;;[MUL_f32_f32_1382_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1382_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1382_sample_start_ &-> (MUL_f32_f32_1382_Sample)
        MUL_f32_f32_1382_sample_completed_ <-& (MUL_f32_f32_1382_Sample)
        MUL_f32_f32_1382_sample_completed_ &-> ($null)
        MUL_f32_f32_1382_update_start_ &-> (MUL_f32_f32_1382_Update)
        MUL_f32_f32_1382_update_completed_ <-& (MUL_f32_f32_1382_Update)
        // Target expression
        // (as target) phitmp4
        // phitmp4
        // implicit reference
        // 		phitmp5 := ($cast ($float<11,52>) phitmp4 )
        //  file prog.aa, line 495
        // Source expression
        // ($cast ($float<11,52>) phitmp4 )
        $T[type_cast_1386_sample_start_] 
        $T[type_cast_1386_sample_completed_] 
        $T[type_cast_1386_update_start_] 
        $T[type_cast_1386_update_completed_] 
        // phitmp4
        $T[R_phitmp4_1385_sample_start_] 
        $T[R_phitmp4_1385_sample_completed_] 
        $T[R_phitmp4_1385_update_start_] 
        $T[R_phitmp4_1385_update_completed_] 
        // implicit reference
        R_phitmp4_1385_sample_start_ <-& (MUL_f32_f32_1382_update_completed_)
        R_phitmp4_1385_sample_completed_ <-& (R_phitmp4_1385_sample_start_)
        R_phitmp4_1385_update_start_ <-& (R_phitmp4_1385_sample_completed_)
        R_phitmp4_1385_update_completed_ <-& (R_phitmp4_1385_update_start_)
        type_cast_1386_sample_start_ <-& (R_phitmp4_1385_update_completed_)
        ;;[type_cast_1386_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1386_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1386_sample_start_ &-> (type_cast_1386_Sample)
        type_cast_1386_sample_completed_ <-& (type_cast_1386_Sample)
        type_cast_1386_sample_completed_ &-> ($null)
        type_cast_1386_update_start_ &-> (type_cast_1386_Update)
        type_cast_1386_update_completed_ <-& (type_cast_1386_Update)
        // Target expression
        // (as target) phitmp5
        // phitmp5
        // implicit reference
        // 		phitmp6 := ($bitcast ($uint<64>) phitmp5 )
        //  file prog.aa, line 496
        // Source expression
        // ($bitcast ($uint<64>) phitmp5 )
        $T[type_cast_1390_sample_start_] 
        $T[type_cast_1390_sample_completed_] 
        $T[type_cast_1390_update_start_] 
        $T[type_cast_1390_update_completed_] 
        // phitmp5
        $T[R_phitmp5_1389_sample_start_] 
        $T[R_phitmp5_1389_sample_completed_] 
        $T[R_phitmp5_1389_update_start_] 
        $T[R_phitmp5_1389_update_completed_] 
        // implicit reference
        R_phitmp5_1389_sample_start_ <-& (type_cast_1386_update_completed_)
        R_phitmp5_1389_sample_completed_ <-& (R_phitmp5_1389_sample_start_)
        R_phitmp5_1389_update_start_ <-& (R_phitmp5_1389_sample_completed_)
        R_phitmp5_1389_update_completed_ <-& (R_phitmp5_1389_update_start_)
        type_cast_1390_sample_start_ <-& (R_phitmp5_1389_update_completed_)
        ;;[type_cast_1390_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1390_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1390_sample_start_ &-> (type_cast_1390_Sample)
        type_cast_1390_sample_completed_ <-& (type_cast_1390_Sample)
        type_cast_1390_sample_completed_ &-> ($null)
        type_cast_1390_update_start_ &-> (type_cast_1390_Update)
        type_cast_1390_update_completed_ <-& (type_cast_1390_Update)
        // Target expression
        // (as target) phitmp6
        // phitmp6
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1383_to_assign_stmt_1391__entry__ |-> (assign_stmt_1383_to_assign_stmt_1391)
      assign_stmt_1383_to_assign_stmt_1391__exit__ <-| (assign_stmt_1383_to_assign_stmt_1391)
      ::[assign_stmt_1408_to_assign_stmt_1414] 
      {
        // 		iNsTr_32 := ($cast ($float<11,52>) speed_refx_x0 )
        //  file prog.aa, line 502
        // Source expression
        // ($cast ($float<11,52>) speed_refx_x0 )
        $T[type_cast_1407_sample_start_] 
        $T[type_cast_1407_sample_completed_] 
        $T[type_cast_1407_update_start_] 
        $T[type_cast_1407_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1406_sample_start_] 
        $T[R_speed_refx_x0_1406_sample_completed_] 
        $T[R_speed_refx_x0_1406_update_start_] 
        $T[R_speed_refx_x0_1406_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1406_sample_start_ <-& ($entry)
        R_speed_refx_x0_1406_sample_completed_ <-& (R_speed_refx_x0_1406_sample_start_)
        R_speed_refx_x0_1406_update_start_ <-& (R_speed_refx_x0_1406_sample_completed_)
        R_speed_refx_x0_1406_update_completed_ <-& (R_speed_refx_x0_1406_update_start_)
        type_cast_1407_sample_start_ <-& (R_speed_refx_x0_1406_update_completed_)
        ;;[type_cast_1407_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1407_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1407_sample_start_ &-> (type_cast_1407_Sample)
        type_cast_1407_sample_completed_ <-& (type_cast_1407_Sample)
        type_cast_1407_sample_completed_ &-> ($null)
        type_cast_1407_update_start_ &-> (type_cast_1407_Update)
        type_cast_1407_update_completed_ <-& (type_cast_1407_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
        //  file prog.aa, line 504
        // Source expression
        // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
        $T[SGT_f64_u1_1413_sample_start_] 
        $T[SGT_f64_u1_1413_sample_completed_] 
        $T[SGT_f64_u1_1413_update_start_] 
        $T[SGT_f64_u1_1413_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1410_sample_start_] 
        $T[R_iNsTr_32_1410_sample_completed_] 
        $T[R_iNsTr_32_1410_update_start_] 
        $T[R_iNsTr_32_1410_update_completed_] 
        // implicit reference
        R_iNsTr_32_1410_sample_start_ <-& (type_cast_1407_update_completed_)
        R_iNsTr_32_1410_sample_completed_ <-& (R_iNsTr_32_1410_sample_start_)
        R_iNsTr_32_1410_update_start_ <-& (R_iNsTr_32_1410_sample_completed_)
        R_iNsTr_32_1410_update_completed_ <-& (R_iNsTr_32_1410_update_start_)
        SGT_f64_u1_1413_sample_start_ <-& (R_iNsTr_32_1410_update_completed_)
        ;;[SGT_f64_u1_1413_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_1413_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_1413_sample_start_ &-> (SGT_f64_u1_1413_Sample)
        SGT_f64_u1_1413_sample_completed_ <-& (SGT_f64_u1_1413_Sample)
        SGT_f64_u1_1413_sample_completed_ &-> ($null)
        SGT_f64_u1_1413_update_start_ &-> (SGT_f64_u1_1413_Update)
        SGT_f64_u1_1413_update_completed_ <-& (SGT_f64_u1_1413_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1408_to_assign_stmt_1414__entry__ |-> (assign_stmt_1408_to_assign_stmt_1414)
      assign_stmt_1408_to_assign_stmt_1414__exit__ <-| (assign_stmt_1408_to_assign_stmt_1414)
      // if-statement  
      //  file prog.aa, line 505
      ;;[if_stmt_1415_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1415__entry__ |-> (if_stmt_1415_dead_link)
      if_stmt_1415__exit__ <-| (if_stmt_1415_dead_link)
      ;;[if_stmt_1415_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1415__entry__ |-> (if_stmt_1415_eval_test)
      $P [R_iNsTr_33_1416_place]
      R_iNsTr_33_1416_place <-| (if_stmt_1415_eval_test)
      ;;[if_stmt_1415_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1415_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_33_1416_place |-> (if_stmt_1415_if_link if_stmt_1415_else_link)
      $P [bb_11_bb_12]
      bb_11_bb_12 <-| (if_stmt_1415_if_link)
      $P [bb_11_bb_17]
      bb_11_bb_17 <-| (if_stmt_1415_else_link)
      ::[assign_stmt_1427] 
      {
        // 		iNsTr_38 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
        //  file prog.aa, line 510
        // Source expression
        // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
        $T[SGT_f64_u1_1426_sample_start_] 
        $T[SGT_f64_u1_1426_sample_completed_] 
        $T[SGT_f64_u1_1426_update_start_] 
        $T[SGT_f64_u1_1426_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1423_sample_start_] 
        $T[R_iNsTr_32_1423_sample_completed_] 
        $T[R_iNsTr_32_1423_update_start_] 
        $T[R_iNsTr_32_1423_update_completed_] 
        // implicit reference
        R_iNsTr_32_1423_sample_start_ <-& ($entry)
        R_iNsTr_32_1423_sample_completed_ <-& (R_iNsTr_32_1423_sample_start_)
        R_iNsTr_32_1423_update_start_ <-& (R_iNsTr_32_1423_sample_completed_)
        R_iNsTr_32_1423_update_completed_ <-& (R_iNsTr_32_1423_update_start_)
        SGT_f64_u1_1426_sample_start_ <-& (R_iNsTr_32_1423_update_completed_)
        ;;[SGT_f64_u1_1426_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_1426_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_1426_sample_start_ &-> (SGT_f64_u1_1426_Sample)
        SGT_f64_u1_1426_sample_completed_ <-& (SGT_f64_u1_1426_Sample)
        SGT_f64_u1_1426_sample_completed_ &-> ($null)
        SGT_f64_u1_1426_update_start_ &-> (SGT_f64_u1_1426_Update)
        SGT_f64_u1_1426_update_completed_ <-& (SGT_f64_u1_1426_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1427__entry__ |-> (assign_stmt_1427)
      assign_stmt_1427__exit__ <-| (assign_stmt_1427)
      // if-statement  
      //  file prog.aa, line 511
      ;;[if_stmt_1428_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1428__entry__ |-> (if_stmt_1428_dead_link)
      if_stmt_1428__exit__ <-| (if_stmt_1428_dead_link)
      ;;[if_stmt_1428_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1428__entry__ |-> (if_stmt_1428_eval_test)
      $P [R_iNsTr_38_1429_place]
      R_iNsTr_38_1429_place <-| (if_stmt_1428_eval_test)
      ;;[if_stmt_1428_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1428_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_38_1429_place |-> (if_stmt_1428_if_link if_stmt_1428_else_link)
      $P [bb_12_bb_14]
      bb_12_bb_14 <-| (if_stmt_1428_if_link)
      $P [bb_12_bb_13]
      bb_12_bb_13 <-| (if_stmt_1428_else_link)
      ::[assign_stmt_1440_to_assign_stmt_1452] 
      {
        // 		iNsTr_52 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
        //  file prog.aa, line 515
        // Source expression
        // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
        $T[MUL_f32_f32_1439_sample_start_] 
        $T[MUL_f32_f32_1439_sample_completed_] 
        $T[MUL_f32_f32_1439_update_start_] 
        $T[MUL_f32_f32_1439_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1436_sample_start_] 
        $T[R_speed_refx_x0_1436_sample_completed_] 
        $T[R_speed_refx_x0_1436_update_start_] 
        $T[R_speed_refx_x0_1436_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1436_sample_start_ <-& ($entry)
        R_speed_refx_x0_1436_sample_completed_ <-& (R_speed_refx_x0_1436_sample_start_)
        R_speed_refx_x0_1436_update_start_ <-& (R_speed_refx_x0_1436_sample_completed_)
        R_speed_refx_x0_1436_update_completed_ <-& (R_speed_refx_x0_1436_update_start_)
        MUL_f32_f32_1439_sample_start_ <-& (R_speed_refx_x0_1436_update_completed_)
        ;;[MUL_f32_f32_1439_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1439_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1439_sample_start_ &-> (MUL_f32_f32_1439_Sample)
        MUL_f32_f32_1439_sample_completed_ <-& (MUL_f32_f32_1439_Sample)
        MUL_f32_f32_1439_sample_completed_ &-> ($null)
        MUL_f32_f32_1439_update_start_ &-> (MUL_f32_f32_1439_Update)
        MUL_f32_f32_1439_update_completed_ <-& (MUL_f32_f32_1439_Update)
        // Target expression
        // (as target) iNsTr_52
        // iNsTr_52
        // implicit reference
        // 		iNsTr_53 := (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
        //  file prog.aa, line 516
        // Source expression
        // (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
        $T[ADD_f32_f32_1445_sample_start_] 
        $T[ADD_f32_f32_1445_sample_completed_] 
        $T[ADD_f32_f32_1445_update_start_] 
        $T[ADD_f32_f32_1445_update_completed_] 
        // iNsTr_52
        $T[R_iNsTr_52_1442_sample_start_] 
        $T[R_iNsTr_52_1442_sample_completed_] 
        $T[R_iNsTr_52_1442_update_start_] 
        $T[R_iNsTr_52_1442_update_completed_] 
        // implicit reference
        R_iNsTr_52_1442_sample_start_ <-& (MUL_f32_f32_1439_update_completed_)
        R_iNsTr_52_1442_sample_completed_ <-& (R_iNsTr_52_1442_sample_start_)
        R_iNsTr_52_1442_update_start_ <-& (R_iNsTr_52_1442_sample_completed_)
        R_iNsTr_52_1442_update_completed_ <-& (R_iNsTr_52_1442_update_start_)
        ADD_f32_f32_1445_sample_start_ <-& (R_iNsTr_52_1442_update_completed_)
        ;;[ADD_f32_f32_1445_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1445_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1445_sample_start_ &-> (ADD_f32_f32_1445_Sample)
        ADD_f32_f32_1445_sample_completed_ <-& (ADD_f32_f32_1445_Sample)
        ADD_f32_f32_1445_sample_completed_ &-> ($null)
        ADD_f32_f32_1445_update_start_ &-> (ADD_f32_f32_1445_Update)
        ADD_f32_f32_1445_update_completed_ <-& (ADD_f32_f32_1445_Update)
        // Target expression
        // (as target) iNsTr_53
        // iNsTr_53
        // implicit reference
        // 		iNsTr_54 := (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        //  file prog.aa, line 517
        // Source expression
        // (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        $T[MUL_f32_f32_1451_sample_start_] 
        $T[MUL_f32_f32_1451_sample_completed_] 
        $T[MUL_f32_f32_1451_update_start_] 
        $T[MUL_f32_f32_1451_update_completed_] 
        // iNsTr_53
        $T[R_iNsTr_53_1448_sample_start_] 
        $T[R_iNsTr_53_1448_sample_completed_] 
        $T[R_iNsTr_53_1448_update_start_] 
        $T[R_iNsTr_53_1448_update_completed_] 
        // implicit reference
        R_iNsTr_53_1448_sample_start_ <-& (ADD_f32_f32_1445_update_completed_)
        R_iNsTr_53_1448_sample_completed_ <-& (R_iNsTr_53_1448_sample_start_)
        R_iNsTr_53_1448_update_start_ <-& (R_iNsTr_53_1448_sample_completed_)
        R_iNsTr_53_1448_update_completed_ <-& (R_iNsTr_53_1448_update_start_)
        MUL_f32_f32_1451_sample_start_ <-& (R_iNsTr_53_1448_update_completed_)
        ;;[MUL_f32_f32_1451_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1451_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1451_sample_start_ &-> (MUL_f32_f32_1451_Sample)
        MUL_f32_f32_1451_sample_completed_ <-& (MUL_f32_f32_1451_Sample)
        MUL_f32_f32_1451_sample_completed_ &-> ($null)
        MUL_f32_f32_1451_update_start_ &-> (MUL_f32_f32_1451_Update)
        MUL_f32_f32_1451_update_completed_ <-& (MUL_f32_f32_1451_Update)
        // Target expression
        // (as target) iNsTr_54
        // iNsTr_54
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1440_to_assign_stmt_1452__entry__ |-> (assign_stmt_1440_to_assign_stmt_1452)
      assign_stmt_1440_to_assign_stmt_1452__exit__ <-| (assign_stmt_1440_to_assign_stmt_1452)
      ::[assign_stmt_1460] 
      {
        // 		iNsTr_50 := (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
        //  file prog.aa, line 523
        // Source expression
        // (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
        $T[SGT_f64_u1_1459_sample_start_] 
        $T[SGT_f64_u1_1459_sample_completed_] 
        $T[SGT_f64_u1_1459_update_start_] 
        $T[SGT_f64_u1_1459_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1456_sample_start_] 
        $T[R_iNsTr_32_1456_sample_completed_] 
        $T[R_iNsTr_32_1456_update_start_] 
        $T[R_iNsTr_32_1456_update_completed_] 
        // implicit reference
        R_iNsTr_32_1456_sample_start_ <-& ($entry)
        R_iNsTr_32_1456_sample_completed_ <-& (R_iNsTr_32_1456_sample_start_)
        R_iNsTr_32_1456_update_start_ <-& (R_iNsTr_32_1456_sample_completed_)
        R_iNsTr_32_1456_update_completed_ <-& (R_iNsTr_32_1456_update_start_)
        SGT_f64_u1_1459_sample_start_ <-& (R_iNsTr_32_1456_update_completed_)
        ;;[SGT_f64_u1_1459_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_1459_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_1459_sample_start_ &-> (SGT_f64_u1_1459_Sample)
        SGT_f64_u1_1459_sample_completed_ <-& (SGT_f64_u1_1459_Sample)
        SGT_f64_u1_1459_sample_completed_ &-> ($null)
        SGT_f64_u1_1459_update_start_ &-> (SGT_f64_u1_1459_Update)
        SGT_f64_u1_1459_update_completed_ <-& (SGT_f64_u1_1459_Update)
        // Target expression
        // (as target) iNsTr_50
        // iNsTr_50
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1460__entry__ |-> (assign_stmt_1460)
      assign_stmt_1460__exit__ <-| (assign_stmt_1460)
      // if-statement  
      //  file prog.aa, line 524
      ;;[if_stmt_1461_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1461__entry__ |-> (if_stmt_1461_dead_link)
      if_stmt_1461__exit__ <-| (if_stmt_1461_dead_link)
      ;;[if_stmt_1461_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1461__entry__ |-> (if_stmt_1461_eval_test)
      $P [R_iNsTr_50_1462_place]
      R_iNsTr_50_1462_place <-| (if_stmt_1461_eval_test)
      ;;[if_stmt_1461_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1461_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_50_1462_place |-> (if_stmt_1461_if_link if_stmt_1461_else_link)
      $P [bb_14_bb_16]
      bb_14_bb_16 <-| (if_stmt_1461_if_link)
      $P [bb_14_bb_15]
      bb_14_bb_15 <-| (if_stmt_1461_else_link)
      ::[assign_stmt_1473_to_assign_stmt_1485] 
      {
        // 		iNsTr_79 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
        //  file prog.aa, line 528
        // Source expression
        // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
        $T[MUL_f32_f32_1472_sample_start_] 
        $T[MUL_f32_f32_1472_sample_completed_] 
        $T[MUL_f32_f32_1472_update_start_] 
        $T[MUL_f32_f32_1472_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1469_sample_start_] 
        $T[R_speed_refx_x0_1469_sample_completed_] 
        $T[R_speed_refx_x0_1469_update_start_] 
        $T[R_speed_refx_x0_1469_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1469_sample_start_ <-& ($entry)
        R_speed_refx_x0_1469_sample_completed_ <-& (R_speed_refx_x0_1469_sample_start_)
        R_speed_refx_x0_1469_update_start_ <-& (R_speed_refx_x0_1469_sample_completed_)
        R_speed_refx_x0_1469_update_completed_ <-& (R_speed_refx_x0_1469_update_start_)
        MUL_f32_f32_1472_sample_start_ <-& (R_speed_refx_x0_1469_update_completed_)
        ;;[MUL_f32_f32_1472_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1472_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1472_sample_start_ &-> (MUL_f32_f32_1472_Sample)
        MUL_f32_f32_1472_sample_completed_ <-& (MUL_f32_f32_1472_Sample)
        MUL_f32_f32_1472_sample_completed_ &-> ($null)
        MUL_f32_f32_1472_update_start_ &-> (MUL_f32_f32_1472_Update)
        MUL_f32_f32_1472_update_completed_ <-& (MUL_f32_f32_1472_Update)
        // Target expression
        // (as target) iNsTr_79
        // iNsTr_79
        // implicit reference
        // 		iNsTr_80 := (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
        //  file prog.aa, line 529
        // Source expression
        // (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
        $T[ADD_f32_f32_1478_sample_start_] 
        $T[ADD_f32_f32_1478_sample_completed_] 
        $T[ADD_f32_f32_1478_update_start_] 
        $T[ADD_f32_f32_1478_update_completed_] 
        // iNsTr_79
        $T[R_iNsTr_79_1475_sample_start_] 
        $T[R_iNsTr_79_1475_sample_completed_] 
        $T[R_iNsTr_79_1475_update_start_] 
        $T[R_iNsTr_79_1475_update_completed_] 
        // implicit reference
        R_iNsTr_79_1475_sample_start_ <-& (MUL_f32_f32_1472_update_completed_)
        R_iNsTr_79_1475_sample_completed_ <-& (R_iNsTr_79_1475_sample_start_)
        R_iNsTr_79_1475_update_start_ <-& (R_iNsTr_79_1475_sample_completed_)
        R_iNsTr_79_1475_update_completed_ <-& (R_iNsTr_79_1475_update_start_)
        ADD_f32_f32_1478_sample_start_ <-& (R_iNsTr_79_1475_update_completed_)
        ;;[ADD_f32_f32_1478_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1478_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1478_sample_start_ &-> (ADD_f32_f32_1478_Sample)
        ADD_f32_f32_1478_sample_completed_ <-& (ADD_f32_f32_1478_Sample)
        ADD_f32_f32_1478_sample_completed_ &-> ($null)
        ADD_f32_f32_1478_update_start_ &-> (ADD_f32_f32_1478_Update)
        ADD_f32_f32_1478_update_completed_ <-& (ADD_f32_f32_1478_Update)
        // Target expression
        // (as target) iNsTr_80
        // iNsTr_80
        // implicit reference
        // 		iNsTr_81 := (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        //  file prog.aa, line 530
        // Source expression
        // (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        $T[MUL_f32_f32_1484_sample_start_] 
        $T[MUL_f32_f32_1484_sample_completed_] 
        $T[MUL_f32_f32_1484_update_start_] 
        $T[MUL_f32_f32_1484_update_completed_] 
        // iNsTr_80
        $T[R_iNsTr_80_1481_sample_start_] 
        $T[R_iNsTr_80_1481_sample_completed_] 
        $T[R_iNsTr_80_1481_update_start_] 
        $T[R_iNsTr_80_1481_update_completed_] 
        // implicit reference
        R_iNsTr_80_1481_sample_start_ <-& (ADD_f32_f32_1478_update_completed_)
        R_iNsTr_80_1481_sample_completed_ <-& (R_iNsTr_80_1481_sample_start_)
        R_iNsTr_80_1481_update_start_ <-& (R_iNsTr_80_1481_sample_completed_)
        R_iNsTr_80_1481_update_completed_ <-& (R_iNsTr_80_1481_update_start_)
        MUL_f32_f32_1484_sample_start_ <-& (R_iNsTr_80_1481_update_completed_)
        ;;[MUL_f32_f32_1484_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1484_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1484_sample_start_ &-> (MUL_f32_f32_1484_Sample)
        MUL_f32_f32_1484_sample_completed_ <-& (MUL_f32_f32_1484_Sample)
        MUL_f32_f32_1484_sample_completed_ &-> ($null)
        MUL_f32_f32_1484_update_start_ &-> (MUL_f32_f32_1484_Update)
        MUL_f32_f32_1484_update_completed_ <-& (MUL_f32_f32_1484_Update)
        // Target expression
        // (as target) iNsTr_81
        // iNsTr_81
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1473_to_assign_stmt_1485__entry__ |-> (assign_stmt_1473_to_assign_stmt_1485)
      assign_stmt_1473_to_assign_stmt_1485__exit__ <-| (assign_stmt_1473_to_assign_stmt_1485)
      ::[assign_stmt_1493_to_assign_stmt_1505] 
      {
        // 		iNsTr_75 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
        //  file prog.aa, line 535
        // Source expression
        // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
        $T[MUL_f32_f32_1492_sample_start_] 
        $T[MUL_f32_f32_1492_sample_completed_] 
        $T[MUL_f32_f32_1492_update_start_] 
        $T[MUL_f32_f32_1492_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1489_sample_start_] 
        $T[R_speed_refx_x0_1489_sample_completed_] 
        $T[R_speed_refx_x0_1489_update_start_] 
        $T[R_speed_refx_x0_1489_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1489_sample_start_ <-& ($entry)
        R_speed_refx_x0_1489_sample_completed_ <-& (R_speed_refx_x0_1489_sample_start_)
        R_speed_refx_x0_1489_update_start_ <-& (R_speed_refx_x0_1489_sample_completed_)
        R_speed_refx_x0_1489_update_completed_ <-& (R_speed_refx_x0_1489_update_start_)
        MUL_f32_f32_1492_sample_start_ <-& (R_speed_refx_x0_1489_update_completed_)
        ;;[MUL_f32_f32_1492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1492_sample_start_ &-> (MUL_f32_f32_1492_Sample)
        MUL_f32_f32_1492_sample_completed_ <-& (MUL_f32_f32_1492_Sample)
        MUL_f32_f32_1492_sample_completed_ &-> ($null)
        MUL_f32_f32_1492_update_start_ &-> (MUL_f32_f32_1492_Update)
        MUL_f32_f32_1492_update_completed_ <-& (MUL_f32_f32_1492_Update)
        // Target expression
        // (as target) iNsTr_75
        // iNsTr_75
        // implicit reference
        // 		iNsTr_76 := (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
        //  file prog.aa, line 536
        // Source expression
        // (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
        $T[ADD_f32_f32_1498_sample_start_] 
        $T[ADD_f32_f32_1498_sample_completed_] 
        $T[ADD_f32_f32_1498_update_start_] 
        $T[ADD_f32_f32_1498_update_completed_] 
        // iNsTr_75
        $T[R_iNsTr_75_1495_sample_start_] 
        $T[R_iNsTr_75_1495_sample_completed_] 
        $T[R_iNsTr_75_1495_update_start_] 
        $T[R_iNsTr_75_1495_update_completed_] 
        // implicit reference
        R_iNsTr_75_1495_sample_start_ <-& (MUL_f32_f32_1492_update_completed_)
        R_iNsTr_75_1495_sample_completed_ <-& (R_iNsTr_75_1495_sample_start_)
        R_iNsTr_75_1495_update_start_ <-& (R_iNsTr_75_1495_sample_completed_)
        R_iNsTr_75_1495_update_completed_ <-& (R_iNsTr_75_1495_update_start_)
        ADD_f32_f32_1498_sample_start_ <-& (R_iNsTr_75_1495_update_completed_)
        ;;[ADD_f32_f32_1498_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1498_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1498_sample_start_ &-> (ADD_f32_f32_1498_Sample)
        ADD_f32_f32_1498_sample_completed_ <-& (ADD_f32_f32_1498_Sample)
        ADD_f32_f32_1498_sample_completed_ &-> ($null)
        ADD_f32_f32_1498_update_start_ &-> (ADD_f32_f32_1498_Update)
        ADD_f32_f32_1498_update_completed_ <-& (ADD_f32_f32_1498_Update)
        // Target expression
        // (as target) iNsTr_76
        // iNsTr_76
        // implicit reference
        // 		iNsTr_77 := (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        //  file prog.aa, line 537
        // Source expression
        // (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        $T[MUL_f32_f32_1504_sample_start_] 
        $T[MUL_f32_f32_1504_sample_completed_] 
        $T[MUL_f32_f32_1504_update_start_] 
        $T[MUL_f32_f32_1504_update_completed_] 
        // iNsTr_76
        $T[R_iNsTr_76_1501_sample_start_] 
        $T[R_iNsTr_76_1501_sample_completed_] 
        $T[R_iNsTr_76_1501_update_start_] 
        $T[R_iNsTr_76_1501_update_completed_] 
        // implicit reference
        R_iNsTr_76_1501_sample_start_ <-& (ADD_f32_f32_1498_update_completed_)
        R_iNsTr_76_1501_sample_completed_ <-& (R_iNsTr_76_1501_sample_start_)
        R_iNsTr_76_1501_update_start_ <-& (R_iNsTr_76_1501_sample_completed_)
        R_iNsTr_76_1501_update_completed_ <-& (R_iNsTr_76_1501_update_start_)
        MUL_f32_f32_1504_sample_start_ <-& (R_iNsTr_76_1501_update_completed_)
        ;;[MUL_f32_f32_1504_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1504_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1504_sample_start_ &-> (MUL_f32_f32_1504_Sample)
        MUL_f32_f32_1504_sample_completed_ <-& (MUL_f32_f32_1504_Sample)
        MUL_f32_f32_1504_sample_completed_ &-> ($null)
        MUL_f32_f32_1504_update_start_ &-> (MUL_f32_f32_1504_Update)
        MUL_f32_f32_1504_update_completed_ <-& (MUL_f32_f32_1504_Update)
        // Target expression
        // (as target) iNsTr_77
        // iNsTr_77
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1493_to_assign_stmt_1505__entry__ |-> (assign_stmt_1493_to_assign_stmt_1505)
      assign_stmt_1493_to_assign_stmt_1505__exit__ <-| (assign_stmt_1493_to_assign_stmt_1505)
      ::[assign_stmt_1524_to_assign_stmt_1567] 
      {
        // 		iNsTr_40 := (id_prevx_x0 + flux_rotor_prevx_x0)
        //  file prog.aa, line 543
        // Source expression
        // (id_prevx_x0 + flux_rotor_prevx_x0)
        $T[ADD_f32_f32_1523_sample_start_] 
        $T[ADD_f32_f32_1523_sample_completed_] 
        $T[ADD_f32_f32_1523_update_start_] 
        $T[ADD_f32_f32_1523_update_completed_] 
        // id_prevx_x0
        $T[R_id_prevx_x0_1521_sample_start_] 
        $T[R_id_prevx_x0_1521_sample_completed_] 
        $T[R_id_prevx_x0_1521_update_start_] 
        $T[R_id_prevx_x0_1521_update_completed_] 
        // implicit reference
        R_id_prevx_x0_1521_sample_start_ <-& ($entry)
        R_id_prevx_x0_1521_sample_completed_ <-& (R_id_prevx_x0_1521_sample_start_)
        R_id_prevx_x0_1521_update_start_ <-& (R_id_prevx_x0_1521_sample_completed_)
        R_id_prevx_x0_1521_update_completed_ <-& (R_id_prevx_x0_1521_update_start_)
        // flux_rotor_prevx_x0
        $T[R_flux_rotor_prevx_x0_1522_sample_start_] 
        $T[R_flux_rotor_prevx_x0_1522_sample_completed_] 
        $T[R_flux_rotor_prevx_x0_1522_update_start_] 
        $T[R_flux_rotor_prevx_x0_1522_update_completed_] 
        // implicit reference
        R_flux_rotor_prevx_x0_1522_sample_start_ <-& ($entry)
        R_flux_rotor_prevx_x0_1522_sample_completed_ <-& (R_flux_rotor_prevx_x0_1522_sample_start_)
        R_flux_rotor_prevx_x0_1522_update_start_ <-& (R_flux_rotor_prevx_x0_1522_sample_completed_)
        R_flux_rotor_prevx_x0_1522_update_completed_ <-& (R_flux_rotor_prevx_x0_1522_update_start_)
        ADD_f32_f32_1523_sample_start_ <-& (R_id_prevx_x0_1521_update_completed_)
        ADD_f32_f32_1523_sample_start_ <-& (R_flux_rotor_prevx_x0_1522_update_completed_)
        ;;[ADD_f32_f32_1523_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1523_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1523_sample_start_ &-> (ADD_f32_f32_1523_Sample)
        ADD_f32_f32_1523_sample_completed_ <-& (ADD_f32_f32_1523_Sample)
        ADD_f32_f32_1523_sample_completed_ &-> ($null)
        ADD_f32_f32_1523_update_start_ &-> (ADD_f32_f32_1523_Update)
        ADD_f32_f32_1523_update_completed_ <-& (ADD_f32_f32_1523_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 544
        // Source expression
        // (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_1529_sample_start_] 
        $T[MUL_f32_f32_1529_sample_completed_] 
        $T[MUL_f32_f32_1529_update_start_] 
        $T[MUL_f32_f32_1529_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_1526_sample_start_] 
        $T[R_iNsTr_10_1526_sample_completed_] 
        $T[R_iNsTr_10_1526_update_start_] 
        $T[R_iNsTr_10_1526_update_completed_] 
        // implicit reference
        R_iNsTr_10_1526_sample_start_ <-& ($entry)
        R_iNsTr_10_1526_sample_completed_ <-& (R_iNsTr_10_1526_sample_start_)
        R_iNsTr_10_1526_update_start_ <-& (R_iNsTr_10_1526_sample_completed_)
        R_iNsTr_10_1526_update_completed_ <-& (R_iNsTr_10_1526_update_start_)
        MUL_f32_f32_1529_sample_start_ <-& (R_iNsTr_10_1526_update_completed_)
        ;;[MUL_f32_f32_1529_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1529_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1529_sample_start_ &-> (MUL_f32_f32_1529_Sample)
        MUL_f32_f32_1529_sample_completed_ <-& (MUL_f32_f32_1529_Sample)
        MUL_f32_f32_1529_sample_completed_ &-> ($null)
        MUL_f32_f32_1529_update_start_ &-> (MUL_f32_f32_1529_Update)
        MUL_f32_f32_1529_update_completed_ <-& (MUL_f32_f32_1529_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 + theta_prevx_x0)
        //  file prog.aa, line 545
        // Source expression
        // (iNsTr_41 + theta_prevx_x0)
        $T[ADD_f32_f32_1534_sample_start_] 
        $T[ADD_f32_f32_1534_sample_completed_] 
        $T[ADD_f32_f32_1534_update_start_] 
        $T[ADD_f32_f32_1534_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1532_sample_start_] 
        $T[R_iNsTr_41_1532_sample_completed_] 
        $T[R_iNsTr_41_1532_update_start_] 
        $T[R_iNsTr_41_1532_update_completed_] 
        // implicit reference
        R_iNsTr_41_1532_sample_start_ <-& (MUL_f32_f32_1529_update_completed_)
        R_iNsTr_41_1532_sample_completed_ <-& (R_iNsTr_41_1532_sample_start_)
        R_iNsTr_41_1532_update_start_ <-& (R_iNsTr_41_1532_sample_completed_)
        R_iNsTr_41_1532_update_completed_ <-& (R_iNsTr_41_1532_update_start_)
        // theta_prevx_x0
        $T[R_theta_prevx_x0_1533_sample_start_] 
        $T[R_theta_prevx_x0_1533_sample_completed_] 
        $T[R_theta_prevx_x0_1533_update_start_] 
        $T[R_theta_prevx_x0_1533_update_completed_] 
        // implicit reference
        R_theta_prevx_x0_1533_sample_start_ <-& ($entry)
        R_theta_prevx_x0_1533_sample_completed_ <-& (R_theta_prevx_x0_1533_sample_start_)
        R_theta_prevx_x0_1533_update_start_ <-& (R_theta_prevx_x0_1533_sample_completed_)
        R_theta_prevx_x0_1533_update_completed_ <-& (R_theta_prevx_x0_1533_update_start_)
        ADD_f32_f32_1534_sample_start_ <-& (R_iNsTr_41_1532_update_completed_)
        ADD_f32_f32_1534_sample_start_ <-& (R_theta_prevx_x0_1533_update_completed_)
        ;;[ADD_f32_f32_1534_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1534_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1534_sample_start_ &-> (ADD_f32_f32_1534_Sample)
        ADD_f32_f32_1534_sample_completed_ <-& (ADD_f32_f32_1534_Sample)
        ADD_f32_f32_1534_sample_completed_ &-> ($null)
        ADD_f32_f32_1534_update_start_ &-> (ADD_f32_f32_1534_Update)
        ADD_f32_f32_1534_update_completed_ <-& (ADD_f32_f32_1534_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
        //  file prog.aa, line 546
        // Source expression
        // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
        $T[MUL_f32_f32_1540_sample_start_] 
        $T[MUL_f32_f32_1540_sample_completed_] 
        $T[MUL_f32_f32_1540_update_start_] 
        $T[MUL_f32_f32_1540_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1537_sample_start_] 
        $T[R_iNsTr_40_1537_sample_completed_] 
        $T[R_iNsTr_40_1537_update_start_] 
        $T[R_iNsTr_40_1537_update_completed_] 
        // implicit reference
        R_iNsTr_40_1537_sample_start_ <-& (ADD_f32_f32_1523_update_completed_)
        R_iNsTr_40_1537_sample_completed_ <-& (R_iNsTr_40_1537_sample_start_)
        R_iNsTr_40_1537_update_start_ <-& (R_iNsTr_40_1537_sample_completed_)
        R_iNsTr_40_1537_update_completed_ <-& (R_iNsTr_40_1537_update_start_)
        MUL_f32_f32_1540_sample_start_ <-& (R_iNsTr_40_1537_update_completed_)
        ;;[MUL_f32_f32_1540_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1540_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1540_sample_start_ &-> (MUL_f32_f32_1540_Sample)
        MUL_f32_f32_1540_sample_completed_ <-& (MUL_f32_f32_1540_Sample)
        MUL_f32_f32_1540_sample_completed_ &-> ($null)
        MUL_f32_f32_1540_update_start_ &-> (MUL_f32_f32_1540_Update)
        MUL_f32_f32_1540_update_completed_ <-& (MUL_f32_f32_1540_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := ($cast ($float<11,52>) iNsTr_43 )
        //  file prog.aa, line 547
        // Source expression
        // ($cast ($float<11,52>) iNsTr_43 )
        $T[type_cast_1544_sample_start_] 
        $T[type_cast_1544_sample_completed_] 
        $T[type_cast_1544_update_start_] 
        $T[type_cast_1544_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1543_sample_start_] 
        $T[R_iNsTr_43_1543_sample_completed_] 
        $T[R_iNsTr_43_1543_update_start_] 
        $T[R_iNsTr_43_1543_update_completed_] 
        // implicit reference
        R_iNsTr_43_1543_sample_start_ <-& (MUL_f32_f32_1540_update_completed_)
        R_iNsTr_43_1543_sample_completed_ <-& (R_iNsTr_43_1543_sample_start_)
        R_iNsTr_43_1543_update_start_ <-& (R_iNsTr_43_1543_sample_completed_)
        R_iNsTr_43_1543_update_completed_ <-& (R_iNsTr_43_1543_update_start_)
        type_cast_1544_sample_start_ <-& (R_iNsTr_43_1543_update_completed_)
        ;;[type_cast_1544_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1544_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1544_sample_start_ &-> (type_cast_1544_Sample)
        type_cast_1544_sample_completed_ <-& (type_cast_1544_Sample)
        type_cast_1544_sample_completed_ &-> ($null)
        type_cast_1544_update_start_ &-> (type_cast_1544_Update)
        type_cast_1544_update_completed_ <-& (type_cast_1544_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		tmp15x_xix_xi := ($bitcast ($uint<64>) iNsTr_44 )
        //  file prog.aa, line 548
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_44 )
        $T[type_cast_1548_sample_start_] 
        $T[type_cast_1548_sample_completed_] 
        $T[type_cast_1548_update_start_] 
        $T[type_cast_1548_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_1547_sample_start_] 
        $T[R_iNsTr_44_1547_sample_completed_] 
        $T[R_iNsTr_44_1547_update_start_] 
        $T[R_iNsTr_44_1547_update_completed_] 
        // implicit reference
        R_iNsTr_44_1547_sample_start_ <-& (type_cast_1544_update_completed_)
        R_iNsTr_44_1547_sample_completed_ <-& (R_iNsTr_44_1547_sample_start_)
        R_iNsTr_44_1547_update_start_ <-& (R_iNsTr_44_1547_sample_completed_)
        R_iNsTr_44_1547_update_completed_ <-& (R_iNsTr_44_1547_update_start_)
        type_cast_1548_sample_start_ <-& (R_iNsTr_44_1547_update_completed_)
        ;;[type_cast_1548_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1548_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1548_sample_start_ &-> (type_cast_1548_Sample)
        type_cast_1548_sample_completed_ <-& (type_cast_1548_Sample)
        type_cast_1548_sample_completed_ &-> ($null)
        type_cast_1548_update_start_ &-> (type_cast_1548_Update)
        type_cast_1548_update_completed_ <-& (type_cast_1548_Update)
        // Target expression
        // (as target) tmp15x_xix_xi
        // tmp15x_xix_xi
        // implicit reference
        // 		iNsTr_45 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 549
        // Source expression
        // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1554_sample_start_] 
        $T[AND_u64_u64_1554_sample_completed_] 
        $T[AND_u64_u64_1554_update_start_] 
        $T[AND_u64_u64_1554_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_1551_sample_start_] 
        $T[R_torque_refx_x0_1551_sample_completed_] 
        $T[R_torque_refx_x0_1551_update_start_] 
        $T[R_torque_refx_x0_1551_update_completed_] 
        // implicit reference
        R_torque_refx_x0_1551_sample_start_ <-& ($entry)
        R_torque_refx_x0_1551_sample_completed_ <-& (R_torque_refx_x0_1551_sample_start_)
        R_torque_refx_x0_1551_update_start_ <-& (R_torque_refx_x0_1551_sample_completed_)
        R_torque_refx_x0_1551_update_completed_ <-& (R_torque_refx_x0_1551_update_start_)
        AND_u64_u64_1554_sample_start_ <-& (R_torque_refx_x0_1551_update_completed_)
        ;;[AND_u64_u64_1554_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1554_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1554_sample_start_ &-> (AND_u64_u64_1554_Sample)
        AND_u64_u64_1554_sample_completed_ <-& (AND_u64_u64_1554_Sample)
        AND_u64_u64_1554_sample_completed_ &-> ($null)
        AND_u64_u64_1554_update_start_ &-> (AND_u64_u64_1554_Update)
        AND_u64_u64_1554_update_completed_ <-& (AND_u64_u64_1554_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 550
        // Source expression
        // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1560_sample_start_] 
        $T[AND_u64_u64_1560_sample_completed_] 
        $T[AND_u64_u64_1560_update_start_] 
        $T[AND_u64_u64_1560_update_completed_] 
        // tmp15x_xix_xi
        $T[R_tmp15x_xix_xi_1557_sample_start_] 
        $T[R_tmp15x_xix_xi_1557_sample_completed_] 
        $T[R_tmp15x_xix_xi_1557_update_start_] 
        $T[R_tmp15x_xix_xi_1557_update_completed_] 
        // implicit reference
        R_tmp15x_xix_xi_1557_sample_start_ <-& (type_cast_1548_update_completed_)
        R_tmp15x_xix_xi_1557_sample_completed_ <-& (R_tmp15x_xix_xi_1557_sample_start_)
        R_tmp15x_xix_xi_1557_update_start_ <-& (R_tmp15x_xix_xi_1557_sample_completed_)
        R_tmp15x_xix_xi_1557_update_completed_ <-& (R_tmp15x_xix_xi_1557_update_start_)
        AND_u64_u64_1560_sample_start_ <-& (R_tmp15x_xix_xi_1557_update_completed_)
        ;;[AND_u64_u64_1560_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1560_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1560_sample_start_ &-> (AND_u64_u64_1560_Sample)
        AND_u64_u64_1560_sample_completed_ <-& (AND_u64_u64_1560_Sample)
        AND_u64_u64_1560_sample_completed_ &-> ($null)
        AND_u64_u64_1560_update_start_ &-> (AND_u64_u64_1560_Update)
        AND_u64_u64_1560_update_completed_ <-& (AND_u64_u64_1560_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 552
        // Source expression
        // (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_1566_sample_start_] 
        $T[EQ_u64_u1_1566_sample_completed_] 
        $T[EQ_u64_u1_1566_update_start_] 
        $T[EQ_u64_u1_1566_update_completed_] 
        // iNsTr_45
        $T[R_iNsTr_45_1563_sample_start_] 
        $T[R_iNsTr_45_1563_sample_completed_] 
        $T[R_iNsTr_45_1563_update_start_] 
        $T[R_iNsTr_45_1563_update_completed_] 
        // implicit reference
        R_iNsTr_45_1563_sample_start_ <-& (AND_u64_u64_1554_update_completed_)
        R_iNsTr_45_1563_sample_completed_ <-& (R_iNsTr_45_1563_sample_start_)
        R_iNsTr_45_1563_update_start_ <-& (R_iNsTr_45_1563_sample_completed_)
        R_iNsTr_45_1563_update_completed_ <-& (R_iNsTr_45_1563_update_start_)
        EQ_u64_u1_1566_sample_start_ <-& (R_iNsTr_45_1563_update_completed_)
        ;;[EQ_u64_u1_1566_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1566_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1566_sample_start_ &-> (EQ_u64_u1_1566_Sample)
        EQ_u64_u1_1566_sample_completed_ <-& (EQ_u64_u1_1566_Sample)
        EQ_u64_u1_1566_sample_completed_ &-> ($null)
        EQ_u64_u1_1566_update_start_ &-> (EQ_u64_u1_1566_Update)
        EQ_u64_u1_1566_update_completed_ <-& (EQ_u64_u1_1566_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1524_to_assign_stmt_1567__entry__ |-> (assign_stmt_1524_to_assign_stmt_1567)
      assign_stmt_1524_to_assign_stmt_1567__exit__ <-| (assign_stmt_1524_to_assign_stmt_1567)
      // if-statement  
      //  file prog.aa, line 553
      ;;[if_stmt_1568_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1568__entry__ |-> (if_stmt_1568_dead_link)
      if_stmt_1568__exit__ <-| (if_stmt_1568_dead_link)
      ;;[if_stmt_1568_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1568__entry__ |-> (if_stmt_1568_eval_test)
      $P [R_iNsTr_47_1569_place]
      R_iNsTr_47_1569_place <-| (if_stmt_1568_eval_test)
      ;;[if_stmt_1568_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1568_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_47_1569_place |-> (if_stmt_1568_if_link if_stmt_1568_else_link)
      $P [bb_17_bb_19]
      bb_17_bb_19 <-| (if_stmt_1568_if_link)
      $P [bb_17_bb_18]
      bb_17_bb_18 <-| (if_stmt_1568_else_link)
      ::[assign_stmt_1580_to_assign_stmt_1603] 
      {
        // 		iNsTr_72 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 557
        // Source expression
        // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1579_sample_start_] 
        $T[AND_u64_u64_1579_sample_completed_] 
        $T[AND_u64_u64_1579_update_start_] 
        $T[AND_u64_u64_1579_update_completed_] 
        // tmp15x_xix_xi
        $T[R_tmp15x_xix_xi_1576_sample_start_] 
        $T[R_tmp15x_xix_xi_1576_sample_completed_] 
        $T[R_tmp15x_xix_xi_1576_update_start_] 
        $T[R_tmp15x_xix_xi_1576_update_completed_] 
        // implicit reference
        R_tmp15x_xix_xi_1576_sample_start_ <-& ($entry)
        R_tmp15x_xix_xi_1576_sample_completed_ <-& (R_tmp15x_xix_xi_1576_sample_start_)
        R_tmp15x_xix_xi_1576_update_start_ <-& (R_tmp15x_xix_xi_1576_sample_completed_)
        R_tmp15x_xix_xi_1576_update_completed_ <-& (R_tmp15x_xix_xi_1576_update_start_)
        AND_u64_u64_1579_sample_start_ <-& (R_tmp15x_xix_xi_1576_update_completed_)
        ;;[AND_u64_u64_1579_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1579_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1579_sample_start_ &-> (AND_u64_u64_1579_Sample)
        AND_u64_u64_1579_sample_completed_ <-& (AND_u64_u64_1579_Sample)
        AND_u64_u64_1579_sample_completed_ &-> ($null)
        AND_u64_u64_1579_update_start_ &-> (AND_u64_u64_1579_Update)
        AND_u64_u64_1579_update_completed_ <-& (AND_u64_u64_1579_Update)
        // Target expression
        // (as target) iNsTr_72
        // iNsTr_72
        // implicit reference
        // 		tmp17x_xmaskx_xix_xi := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 558
        // Source expression
        // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1585_sample_start_] 
        $T[AND_u64_u64_1585_sample_completed_] 
        $T[AND_u64_u64_1585_update_start_] 
        $T[AND_u64_u64_1585_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_1582_sample_start_] 
        $T[R_torque_refx_x0_1582_sample_completed_] 
        $T[R_torque_refx_x0_1582_update_start_] 
        $T[R_torque_refx_x0_1582_update_completed_] 
        // implicit reference
        R_torque_refx_x0_1582_sample_start_ <-& ($entry)
        R_torque_refx_x0_1582_sample_completed_ <-& (R_torque_refx_x0_1582_sample_start_)
        R_torque_refx_x0_1582_update_start_ <-& (R_torque_refx_x0_1582_sample_completed_)
        R_torque_refx_x0_1582_update_completed_ <-& (R_torque_refx_x0_1582_update_start_)
        AND_u64_u64_1585_sample_start_ <-& (R_torque_refx_x0_1582_update_completed_)
        ;;[AND_u64_u64_1585_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1585_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1585_sample_start_ &-> (AND_u64_u64_1585_Sample)
        AND_u64_u64_1585_sample_completed_ <-& (AND_u64_u64_1585_Sample)
        AND_u64_u64_1585_sample_completed_ &-> ($null)
        AND_u64_u64_1585_update_start_ &-> (AND_u64_u64_1585_Update)
        AND_u64_u64_1585_update_completed_ <-& (AND_u64_u64_1585_Update)
        // Target expression
        // (as target) tmp17x_xmaskx_xix_xi
        // tmp17x_xmaskx_xix_xi
        // implicit reference
        // 		iNsTr_73 := (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
        //  file prog.aa, line 559
        // Source expression
        // (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
        $T[SUB_u64_u64_1591_sample_start_] 
        $T[SUB_u64_u64_1591_sample_completed_] 
        $T[SUB_u64_u64_1591_update_start_] 
        $T[SUB_u64_u64_1591_update_completed_] 
        // iNsTr_72
        $T[R_iNsTr_72_1590_sample_start_] 
        $T[R_iNsTr_72_1590_sample_completed_] 
        $T[R_iNsTr_72_1590_update_start_] 
        $T[R_iNsTr_72_1590_update_completed_] 
        // implicit reference
        R_iNsTr_72_1590_sample_start_ <-& (AND_u64_u64_1579_update_completed_)
        R_iNsTr_72_1590_sample_completed_ <-& (R_iNsTr_72_1590_sample_start_)
        R_iNsTr_72_1590_update_start_ <-& (R_iNsTr_72_1590_sample_completed_)
        R_iNsTr_72_1590_update_completed_ <-& (R_iNsTr_72_1590_update_start_)
        SUB_u64_u64_1591_sample_start_ <-& (R_iNsTr_72_1590_update_completed_)
        ;;[SUB_u64_u64_1591_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u64_u64_1591_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u64_u64_1591_sample_start_ &-> (SUB_u64_u64_1591_Sample)
        SUB_u64_u64_1591_sample_completed_ <-& (SUB_u64_u64_1591_Sample)
        SUB_u64_u64_1591_sample_completed_ &-> ($null)
        SUB_u64_u64_1591_update_start_ &-> (SUB_u64_u64_1591_Update)
        SUB_u64_u64_1591_update_completed_ <-& (SUB_u64_u64_1591_Update)
        // Target expression
        // (as target) iNsTr_73
        // iNsTr_73
        // implicit reference
        // 		phitmpx_xix_xi := (iNsTr_73 + tmp17x_xmaskx_xix_xi)
        //  file prog.aa, line 560
        // Source expression
        // (iNsTr_73 + tmp17x_xmaskx_xix_xi)
        $T[ADD_u64_u64_1596_sample_start_] 
        $T[ADD_u64_u64_1596_sample_completed_] 
        $T[ADD_u64_u64_1596_update_start_] 
        $T[ADD_u64_u64_1596_update_completed_] 
        // iNsTr_73
        $T[R_iNsTr_73_1594_sample_start_] 
        $T[R_iNsTr_73_1594_sample_completed_] 
        $T[R_iNsTr_73_1594_update_start_] 
        $T[R_iNsTr_73_1594_update_completed_] 
        // implicit reference
        R_iNsTr_73_1594_sample_start_ <-& (SUB_u64_u64_1591_update_completed_)
        R_iNsTr_73_1594_sample_completed_ <-& (R_iNsTr_73_1594_sample_start_)
        R_iNsTr_73_1594_update_start_ <-& (R_iNsTr_73_1594_sample_completed_)
        R_iNsTr_73_1594_update_completed_ <-& (R_iNsTr_73_1594_update_start_)
        // tmp17x_xmaskx_xix_xi
        $T[R_tmp17x_xmaskx_xix_xi_1595_sample_start_] 
        $T[R_tmp17x_xmaskx_xix_xi_1595_sample_completed_] 
        $T[R_tmp17x_xmaskx_xix_xi_1595_update_start_] 
        $T[R_tmp17x_xmaskx_xix_xi_1595_update_completed_] 
        // implicit reference
        R_tmp17x_xmaskx_xix_xi_1595_sample_start_ <-& (AND_u64_u64_1585_update_completed_)
        R_tmp17x_xmaskx_xix_xi_1595_sample_completed_ <-& (R_tmp17x_xmaskx_xix_xi_1595_sample_start_)
        R_tmp17x_xmaskx_xix_xi_1595_update_start_ <-& (R_tmp17x_xmaskx_xix_xi_1595_sample_completed_)
        R_tmp17x_xmaskx_xix_xi_1595_update_completed_ <-& (R_tmp17x_xmaskx_xix_xi_1595_update_start_)
        ADD_u64_u64_1596_sample_start_ <-& (R_iNsTr_73_1594_update_completed_)
        ADD_u64_u64_1596_sample_start_ <-& (R_tmp17x_xmaskx_xix_xi_1595_update_completed_)
        ;;[ADD_u64_u64_1596_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1596_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1596_sample_start_ &-> (ADD_u64_u64_1596_Sample)
        ADD_u64_u64_1596_sample_completed_ <-& (ADD_u64_u64_1596_Sample)
        ADD_u64_u64_1596_sample_completed_ &-> ($null)
        ADD_u64_u64_1596_update_start_ &-> (ADD_u64_u64_1596_Update)
        ADD_u64_u64_1596_update_completed_ <-& (ADD_u64_u64_1596_Update)
        // Target expression
        // (as target) phitmpx_xix_xi
        // phitmpx_xix_xi
        // implicit reference
        // 		phitmp20x_xix_xi := (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 561
        // Source expression
        // (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1602_sample_start_] 
        $T[AND_u64_u64_1602_sample_completed_] 
        $T[AND_u64_u64_1602_update_start_] 
        $T[AND_u64_u64_1602_update_completed_] 
        // phitmpx_xix_xi
        $T[R_phitmpx_xix_xi_1599_sample_start_] 
        $T[R_phitmpx_xix_xi_1599_sample_completed_] 
        $T[R_phitmpx_xix_xi_1599_update_start_] 
        $T[R_phitmpx_xix_xi_1599_update_completed_] 
        // implicit reference
        R_phitmpx_xix_xi_1599_sample_start_ <-& (ADD_u64_u64_1596_update_completed_)
        R_phitmpx_xix_xi_1599_sample_completed_ <-& (R_phitmpx_xix_xi_1599_sample_start_)
        R_phitmpx_xix_xi_1599_update_start_ <-& (R_phitmpx_xix_xi_1599_sample_completed_)
        R_phitmpx_xix_xi_1599_update_completed_ <-& (R_phitmpx_xix_xi_1599_update_start_)
        AND_u64_u64_1602_sample_start_ <-& (R_phitmpx_xix_xi_1599_update_completed_)
        ;;[AND_u64_u64_1602_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1602_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1602_sample_start_ &-> (AND_u64_u64_1602_Sample)
        AND_u64_u64_1602_sample_completed_ <-& (AND_u64_u64_1602_Sample)
        AND_u64_u64_1602_sample_completed_ &-> ($null)
        AND_u64_u64_1602_update_start_ &-> (AND_u64_u64_1602_Update)
        AND_u64_u64_1602_update_completed_ <-& (AND_u64_u64_1602_Update)
        // Target expression
        // (as target) phitmp20x_xix_xi
        // phitmp20x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1580_to_assign_stmt_1603__entry__ |-> (assign_stmt_1580_to_assign_stmt_1603)
      assign_stmt_1580_to_assign_stmt_1603__exit__ <-| (assign_stmt_1580_to_assign_stmt_1603)
      ::[assign_stmt_1619_to_assign_stmt_1700] 
      {
        // 		iNsTr_57 := (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 567
        // Source expression
        // (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
        $T[OR_u64_u64_1618_sample_start_] 
        $T[OR_u64_u64_1618_sample_completed_] 
        $T[OR_u64_u64_1618_update_start_] 
        $T[OR_u64_u64_1618_update_completed_] 
        // tmp15x_xix_xi
        $T[R_tmp15x_xix_xi_1615_sample_start_] 
        $T[R_tmp15x_xix_xi_1615_sample_completed_] 
        $T[R_tmp15x_xix_xi_1615_update_start_] 
        $T[R_tmp15x_xix_xi_1615_update_completed_] 
        // implicit reference
        R_tmp15x_xix_xi_1615_sample_start_ <-& ($entry)
        R_tmp15x_xix_xi_1615_sample_completed_ <-& (R_tmp15x_xix_xi_1615_sample_start_)
        R_tmp15x_xix_xi_1615_update_start_ <-& (R_tmp15x_xix_xi_1615_sample_completed_)
        R_tmp15x_xix_xi_1615_update_completed_ <-& (R_tmp15x_xix_xi_1615_update_start_)
        OR_u64_u64_1618_sample_start_ <-& (R_tmp15x_xix_xi_1615_update_completed_)
        ;;[OR_u64_u64_1618_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1618_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1618_sample_start_ &-> (OR_u64_u64_1618_Sample)
        OR_u64_u64_1618_sample_completed_ <-& (OR_u64_u64_1618_Sample)
        OR_u64_u64_1618_sample_completed_ &-> ($null)
        OR_u64_u64_1618_update_start_ &-> (OR_u64_u64_1618_Update)
        OR_u64_u64_1618_update_completed_ <-& (OR_u64_u64_1618_Update)
        // Target expression
        // (as target) iNsTr_57
        // iNsTr_57
        // implicit reference
        // 		iNsTr_58 := (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 568
        // Source expression
        // (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1624_sample_start_] 
        $T[AND_u64_u64_1624_sample_completed_] 
        $T[AND_u64_u64_1624_update_start_] 
        $T[AND_u64_u64_1624_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_1621_sample_start_] 
        $T[R_iNsTr_57_1621_sample_completed_] 
        $T[R_iNsTr_57_1621_update_start_] 
        $T[R_iNsTr_57_1621_update_completed_] 
        // implicit reference
        R_iNsTr_57_1621_sample_start_ <-& (OR_u64_u64_1618_update_completed_)
        R_iNsTr_57_1621_sample_completed_ <-& (R_iNsTr_57_1621_sample_start_)
        R_iNsTr_57_1621_update_start_ <-& (R_iNsTr_57_1621_sample_completed_)
        R_iNsTr_57_1621_update_completed_ <-& (R_iNsTr_57_1621_update_start_)
        AND_u64_u64_1624_sample_start_ <-& (R_iNsTr_57_1621_update_completed_)
        ;;[AND_u64_u64_1624_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1624_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1624_sample_start_ &-> (AND_u64_u64_1624_Sample)
        AND_u64_u64_1624_sample_completed_ <-& (AND_u64_u64_1624_Sample)
        AND_u64_u64_1624_sample_completed_ &-> ($null)
        AND_u64_u64_1624_update_start_ &-> (AND_u64_u64_1624_Update)
        AND_u64_u64_1624_update_completed_ <-& (AND_u64_u64_1624_Update)
        // Target expression
        // (as target) iNsTr_58
        // iNsTr_58
        // implicit reference
        // 		tmp11x_xix_xi := ($bitcast ($float<11,52>) iNsTr_58 )
        //  file prog.aa, line 569
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_58 )
        $T[type_cast_1628_sample_start_] 
        $T[type_cast_1628_sample_completed_] 
        $T[type_cast_1628_update_start_] 
        $T[type_cast_1628_update_completed_] 
        // iNsTr_58
        $T[R_iNsTr_58_1627_sample_start_] 
        $T[R_iNsTr_58_1627_sample_completed_] 
        $T[R_iNsTr_58_1627_update_start_] 
        $T[R_iNsTr_58_1627_update_completed_] 
        // implicit reference
        R_iNsTr_58_1627_sample_start_ <-& (AND_u64_u64_1624_update_completed_)
        R_iNsTr_58_1627_sample_completed_ <-& (R_iNsTr_58_1627_sample_start_)
        R_iNsTr_58_1627_update_start_ <-& (R_iNsTr_58_1627_sample_completed_)
        R_iNsTr_58_1627_update_completed_ <-& (R_iNsTr_58_1627_update_start_)
        type_cast_1628_sample_start_ <-& (R_iNsTr_58_1627_update_completed_)
        ;;[type_cast_1628_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1628_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1628_sample_start_ &-> (type_cast_1628_Sample)
        type_cast_1628_sample_completed_ <-& (type_cast_1628_Sample)
        type_cast_1628_sample_completed_ &-> ($null)
        type_cast_1628_update_start_ &-> (type_cast_1628_Update)
        type_cast_1628_update_completed_ <-& (type_cast_1628_Update)
        // Target expression
        // (as target) tmp11x_xix_xi
        // tmp11x_xix_xi
        // implicit reference
        // 		iNsTr_59 := (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        //  file prog.aa, line 570
        // Source expression
        // (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
        $T[MUL_f64_f64_1634_sample_start_] 
        $T[MUL_f64_f64_1634_sample_completed_] 
        $T[MUL_f64_f64_1634_update_start_] 
        $T[MUL_f64_f64_1634_update_completed_] 
        // tmp11x_xix_xi
        $T[R_tmp11x_xix_xi_1631_sample_start_] 
        $T[R_tmp11x_xix_xi_1631_sample_completed_] 
        $T[R_tmp11x_xix_xi_1631_update_start_] 
        $T[R_tmp11x_xix_xi_1631_update_completed_] 
        // implicit reference
        R_tmp11x_xix_xi_1631_sample_start_ <-& (type_cast_1628_update_completed_)
        R_tmp11x_xix_xi_1631_sample_completed_ <-& (R_tmp11x_xix_xi_1631_sample_start_)
        R_tmp11x_xix_xi_1631_update_start_ <-& (R_tmp11x_xix_xi_1631_sample_completed_)
        R_tmp11x_xix_xi_1631_update_completed_ <-& (R_tmp11x_xix_xi_1631_update_start_)
        MUL_f64_f64_1634_sample_start_ <-& (R_tmp11x_xix_xi_1631_update_completed_)
        ;;[MUL_f64_f64_1634_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1634_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1634_sample_start_ &-> (MUL_f64_f64_1634_Sample)
        MUL_f64_f64_1634_sample_completed_ <-& (MUL_f64_f64_1634_Sample)
        MUL_f64_f64_1634_sample_completed_ &-> ($null)
        MUL_f64_f64_1634_update_start_ &-> (MUL_f64_f64_1634_Update)
        MUL_f64_f64_1634_update_completed_ <-& (MUL_f64_f64_1634_Update)
        // Target expression
        // (as target) iNsTr_59
        // iNsTr_59
        // implicit reference
        // 		iNsTr_60 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
        //  file prog.aa, line 571
        // Source expression
        // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
        $T[SUB_f64_f64_1640_sample_start_] 
        $T[SUB_f64_f64_1640_sample_completed_] 
        $T[SUB_f64_f64_1640_update_start_] 
        $T[SUB_f64_f64_1640_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_1639_sample_start_] 
        $T[R_iNsTr_59_1639_sample_completed_] 
        $T[R_iNsTr_59_1639_update_start_] 
        $T[R_iNsTr_59_1639_update_completed_] 
        // implicit reference
        R_iNsTr_59_1639_sample_start_ <-& (MUL_f64_f64_1634_update_completed_)
        R_iNsTr_59_1639_sample_completed_ <-& (R_iNsTr_59_1639_sample_start_)
        R_iNsTr_59_1639_update_start_ <-& (R_iNsTr_59_1639_sample_completed_)
        R_iNsTr_59_1639_update_completed_ <-& (R_iNsTr_59_1639_update_start_)
        SUB_f64_f64_1640_sample_start_ <-& (R_iNsTr_59_1639_update_completed_)
        ;;[SUB_f64_f64_1640_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1640_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1640_sample_start_ &-> (SUB_f64_f64_1640_Sample)
        SUB_f64_f64_1640_sample_completed_ <-& (SUB_f64_f64_1640_Sample)
        SUB_f64_f64_1640_sample_completed_ &-> ($null)
        SUB_f64_f64_1640_update_start_ &-> (SUB_f64_f64_1640_Update)
        SUB_f64_f64_1640_update_completed_ <-& (SUB_f64_f64_1640_Update)
        // Target expression
        // (as target) iNsTr_60
        // iNsTr_60
        // implicit reference
        // 		iNsTr_61 := (tmp11x_xix_xi * iNsTr_60)
        //  file prog.aa, line 572
        // Source expression
        // (tmp11x_xix_xi * iNsTr_60)
        $T[MUL_f64_f64_1645_sample_start_] 
        $T[MUL_f64_f64_1645_sample_completed_] 
        $T[MUL_f64_f64_1645_update_start_] 
        $T[MUL_f64_f64_1645_update_completed_] 
        // tmp11x_xix_xi
        $T[R_tmp11x_xix_xi_1643_sample_start_] 
        $T[R_tmp11x_xix_xi_1643_sample_completed_] 
        $T[R_tmp11x_xix_xi_1643_update_start_] 
        $T[R_tmp11x_xix_xi_1643_update_completed_] 
        // implicit reference
        R_tmp11x_xix_xi_1643_sample_start_ <-& (type_cast_1628_update_completed_)
        R_tmp11x_xix_xi_1643_sample_completed_ <-& (R_tmp11x_xix_xi_1643_sample_start_)
        R_tmp11x_xix_xi_1643_update_start_ <-& (R_tmp11x_xix_xi_1643_sample_completed_)
        R_tmp11x_xix_xi_1643_update_completed_ <-& (R_tmp11x_xix_xi_1643_update_start_)
        // iNsTr_60
        $T[R_iNsTr_60_1644_sample_start_] 
        $T[R_iNsTr_60_1644_sample_completed_] 
        $T[R_iNsTr_60_1644_update_start_] 
        $T[R_iNsTr_60_1644_update_completed_] 
        // implicit reference
        R_iNsTr_60_1644_sample_start_ <-& (SUB_f64_f64_1640_update_completed_)
        R_iNsTr_60_1644_sample_completed_ <-& (R_iNsTr_60_1644_sample_start_)
        R_iNsTr_60_1644_update_start_ <-& (R_iNsTr_60_1644_sample_completed_)
        R_iNsTr_60_1644_update_completed_ <-& (R_iNsTr_60_1644_update_start_)
        MUL_f64_f64_1645_sample_start_ <-& (R_tmp11x_xix_xi_1643_update_completed_)
        MUL_f64_f64_1645_sample_start_ <-& (R_iNsTr_60_1644_update_completed_)
        ;;[MUL_f64_f64_1645_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1645_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1645_sample_start_ &-> (MUL_f64_f64_1645_Sample)
        MUL_f64_f64_1645_sample_completed_ <-& (MUL_f64_f64_1645_Sample)
        MUL_f64_f64_1645_sample_completed_ &-> ($null)
        MUL_f64_f64_1645_update_start_ &-> (MUL_f64_f64_1645_Update)
        MUL_f64_f64_1645_update_completed_ <-& (MUL_f64_f64_1645_Update)
        // Target expression
        // (as target) iNsTr_61
        // iNsTr_61
        // implicit reference
        // 		iNsTr_62 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
        //  file prog.aa, line 573
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
        $T[SUB_f64_f64_1651_sample_start_] 
        $T[SUB_f64_f64_1651_sample_completed_] 
        $T[SUB_f64_f64_1651_update_start_] 
        $T[SUB_f64_f64_1651_update_completed_] 
        // iNsTr_61
        $T[R_iNsTr_61_1650_sample_start_] 
        $T[R_iNsTr_61_1650_sample_completed_] 
        $T[R_iNsTr_61_1650_update_start_] 
        $T[R_iNsTr_61_1650_update_completed_] 
        // implicit reference
        R_iNsTr_61_1650_sample_start_ <-& (MUL_f64_f64_1645_update_completed_)
        R_iNsTr_61_1650_sample_completed_ <-& (R_iNsTr_61_1650_sample_start_)
        R_iNsTr_61_1650_update_start_ <-& (R_iNsTr_61_1650_sample_completed_)
        R_iNsTr_61_1650_update_completed_ <-& (R_iNsTr_61_1650_update_start_)
        SUB_f64_f64_1651_sample_start_ <-& (R_iNsTr_61_1650_update_completed_)
        ;;[SUB_f64_f64_1651_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1651_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1651_sample_start_ &-> (SUB_f64_f64_1651_Sample)
        SUB_f64_f64_1651_sample_completed_ <-& (SUB_f64_f64_1651_Sample)
        SUB_f64_f64_1651_sample_completed_ &-> ($null)
        SUB_f64_f64_1651_update_start_ &-> (SUB_f64_f64_1651_Update)
        SUB_f64_f64_1651_update_completed_ <-& (SUB_f64_f64_1651_Update)
        // Target expression
        // (as target) iNsTr_62
        // iNsTr_62
        // implicit reference
        // 		iNsTr_63 := (iNsTr_60 * iNsTr_62)
        //  file prog.aa, line 574
        // Source expression
        // (iNsTr_60 * iNsTr_62)
        $T[MUL_f64_f64_1656_sample_start_] 
        $T[MUL_f64_f64_1656_sample_completed_] 
        $T[MUL_f64_f64_1656_update_start_] 
        $T[MUL_f64_f64_1656_update_completed_] 
        // iNsTr_60
        $T[R_iNsTr_60_1654_sample_start_] 
        $T[R_iNsTr_60_1654_sample_completed_] 
        $T[R_iNsTr_60_1654_update_start_] 
        $T[R_iNsTr_60_1654_update_completed_] 
        // implicit reference
        R_iNsTr_60_1654_sample_start_ <-& (SUB_f64_f64_1640_update_completed_)
        R_iNsTr_60_1654_sample_completed_ <-& (R_iNsTr_60_1654_sample_start_)
        R_iNsTr_60_1654_update_start_ <-& (R_iNsTr_60_1654_sample_completed_)
        R_iNsTr_60_1654_update_completed_ <-& (R_iNsTr_60_1654_update_start_)
        // iNsTr_62
        $T[R_iNsTr_62_1655_sample_start_] 
        $T[R_iNsTr_62_1655_sample_completed_] 
        $T[R_iNsTr_62_1655_update_start_] 
        $T[R_iNsTr_62_1655_update_completed_] 
        // implicit reference
        R_iNsTr_62_1655_sample_start_ <-& (SUB_f64_f64_1651_update_completed_)
        R_iNsTr_62_1655_sample_completed_ <-& (R_iNsTr_62_1655_sample_start_)
        R_iNsTr_62_1655_update_start_ <-& (R_iNsTr_62_1655_sample_completed_)
        R_iNsTr_62_1655_update_completed_ <-& (R_iNsTr_62_1655_update_start_)
        MUL_f64_f64_1656_sample_start_ <-& (R_iNsTr_60_1654_update_completed_)
        MUL_f64_f64_1656_sample_start_ <-& (R_iNsTr_62_1655_update_completed_)
        ;;[MUL_f64_f64_1656_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1656_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1656_sample_start_ &-> (MUL_f64_f64_1656_Sample)
        MUL_f64_f64_1656_sample_completed_ <-& (MUL_f64_f64_1656_Sample)
        MUL_f64_f64_1656_sample_completed_ &-> ($null)
        MUL_f64_f64_1656_update_start_ &-> (MUL_f64_f64_1656_Update)
        MUL_f64_f64_1656_update_completed_ <-& (MUL_f64_f64_1656_Update)
        // Target expression
        // (as target) iNsTr_63
        // iNsTr_63
        // implicit reference
        // 		iNsTr_64 := (tmp11x_xix_xi * iNsTr_63)
        //  file prog.aa, line 575
        // Source expression
        // (tmp11x_xix_xi * iNsTr_63)
        $T[MUL_f64_f64_1661_sample_start_] 
        $T[MUL_f64_f64_1661_sample_completed_] 
        $T[MUL_f64_f64_1661_update_start_] 
        $T[MUL_f64_f64_1661_update_completed_] 
        // tmp11x_xix_xi
        $T[R_tmp11x_xix_xi_1659_sample_start_] 
        $T[R_tmp11x_xix_xi_1659_sample_completed_] 
        $T[R_tmp11x_xix_xi_1659_update_start_] 
        $T[R_tmp11x_xix_xi_1659_update_completed_] 
        // implicit reference
        R_tmp11x_xix_xi_1659_sample_start_ <-& (type_cast_1628_update_completed_)
        R_tmp11x_xix_xi_1659_sample_completed_ <-& (R_tmp11x_xix_xi_1659_sample_start_)
        R_tmp11x_xix_xi_1659_update_start_ <-& (R_tmp11x_xix_xi_1659_sample_completed_)
        R_tmp11x_xix_xi_1659_update_completed_ <-& (R_tmp11x_xix_xi_1659_update_start_)
        // iNsTr_63
        $T[R_iNsTr_63_1660_sample_start_] 
        $T[R_iNsTr_63_1660_sample_completed_] 
        $T[R_iNsTr_63_1660_update_start_] 
        $T[R_iNsTr_63_1660_update_completed_] 
        // implicit reference
        R_iNsTr_63_1660_sample_start_ <-& (MUL_f64_f64_1656_update_completed_)
        R_iNsTr_63_1660_sample_completed_ <-& (R_iNsTr_63_1660_sample_start_)
        R_iNsTr_63_1660_update_start_ <-& (R_iNsTr_63_1660_sample_completed_)
        R_iNsTr_63_1660_update_completed_ <-& (R_iNsTr_63_1660_update_start_)
        MUL_f64_f64_1661_sample_start_ <-& (R_tmp11x_xix_xi_1659_update_completed_)
        MUL_f64_f64_1661_sample_start_ <-& (R_iNsTr_63_1660_update_completed_)
        ;;[MUL_f64_f64_1661_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1661_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1661_sample_start_ &-> (MUL_f64_f64_1661_Sample)
        MUL_f64_f64_1661_sample_completed_ <-& (MUL_f64_f64_1661_Sample)
        MUL_f64_f64_1661_sample_completed_ &-> ($null)
        MUL_f64_f64_1661_update_start_ &-> (MUL_f64_f64_1661_Update)
        MUL_f64_f64_1661_update_completed_ <-& (MUL_f64_f64_1661_Update)
        // Target expression
        // (as target) iNsTr_64
        // iNsTr_64
        // implicit reference
        // 		iNsTr_65 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
        //  file prog.aa, line 576
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
        $T[SUB_f64_f64_1667_sample_start_] 
        $T[SUB_f64_f64_1667_sample_completed_] 
        $T[SUB_f64_f64_1667_update_start_] 
        $T[SUB_f64_f64_1667_update_completed_] 
        // iNsTr_64
        $T[R_iNsTr_64_1666_sample_start_] 
        $T[R_iNsTr_64_1666_sample_completed_] 
        $T[R_iNsTr_64_1666_update_start_] 
        $T[R_iNsTr_64_1666_update_completed_] 
        // implicit reference
        R_iNsTr_64_1666_sample_start_ <-& (MUL_f64_f64_1661_update_completed_)
        R_iNsTr_64_1666_sample_completed_ <-& (R_iNsTr_64_1666_sample_start_)
        R_iNsTr_64_1666_update_start_ <-& (R_iNsTr_64_1666_sample_completed_)
        R_iNsTr_64_1666_update_completed_ <-& (R_iNsTr_64_1666_update_start_)
        SUB_f64_f64_1667_sample_start_ <-& (R_iNsTr_64_1666_update_completed_)
        ;;[SUB_f64_f64_1667_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1667_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1667_sample_start_ &-> (SUB_f64_f64_1667_Sample)
        SUB_f64_f64_1667_sample_completed_ <-& (SUB_f64_f64_1667_Sample)
        SUB_f64_f64_1667_sample_completed_ &-> ($null)
        SUB_f64_f64_1667_update_start_ &-> (SUB_f64_f64_1667_Update)
        SUB_f64_f64_1667_update_completed_ <-& (SUB_f64_f64_1667_Update)
        // Target expression
        // (as target) iNsTr_65
        // iNsTr_65
        // implicit reference
        // 		iNsTr_66 := (iNsTr_63 * iNsTr_65)
        //  file prog.aa, line 577
        // Source expression
        // (iNsTr_63 * iNsTr_65)
        $T[MUL_f64_f64_1672_sample_start_] 
        $T[MUL_f64_f64_1672_sample_completed_] 
        $T[MUL_f64_f64_1672_update_start_] 
        $T[MUL_f64_f64_1672_update_completed_] 
        // iNsTr_63
        $T[R_iNsTr_63_1670_sample_start_] 
        $T[R_iNsTr_63_1670_sample_completed_] 
        $T[R_iNsTr_63_1670_update_start_] 
        $T[R_iNsTr_63_1670_update_completed_] 
        // implicit reference
        R_iNsTr_63_1670_sample_start_ <-& (MUL_f64_f64_1656_update_completed_)
        R_iNsTr_63_1670_sample_completed_ <-& (R_iNsTr_63_1670_sample_start_)
        R_iNsTr_63_1670_update_start_ <-& (R_iNsTr_63_1670_sample_completed_)
        R_iNsTr_63_1670_update_completed_ <-& (R_iNsTr_63_1670_update_start_)
        // iNsTr_65
        $T[R_iNsTr_65_1671_sample_start_] 
        $T[R_iNsTr_65_1671_sample_completed_] 
        $T[R_iNsTr_65_1671_update_start_] 
        $T[R_iNsTr_65_1671_update_completed_] 
        // implicit reference
        R_iNsTr_65_1671_sample_start_ <-& (SUB_f64_f64_1667_update_completed_)
        R_iNsTr_65_1671_sample_completed_ <-& (R_iNsTr_65_1671_sample_start_)
        R_iNsTr_65_1671_update_start_ <-& (R_iNsTr_65_1671_sample_completed_)
        R_iNsTr_65_1671_update_completed_ <-& (R_iNsTr_65_1671_update_start_)
        MUL_f64_f64_1672_sample_start_ <-& (R_iNsTr_63_1670_update_completed_)
        MUL_f64_f64_1672_sample_start_ <-& (R_iNsTr_65_1671_update_completed_)
        ;;[MUL_f64_f64_1672_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1672_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1672_sample_start_ &-> (MUL_f64_f64_1672_Sample)
        MUL_f64_f64_1672_sample_completed_ <-& (MUL_f64_f64_1672_Sample)
        MUL_f64_f64_1672_sample_completed_ &-> ($null)
        MUL_f64_f64_1672_update_start_ &-> (MUL_f64_f64_1672_Update)
        MUL_f64_f64_1672_update_completed_ <-& (MUL_f64_f64_1672_Update)
        // Target expression
        // (as target) iNsTr_66
        // iNsTr_66
        // implicit reference
        // 		iNsTr_67 := (tmp11x_xix_xi * iNsTr_66)
        //  file prog.aa, line 578
        // Source expression
        // (tmp11x_xix_xi * iNsTr_66)
        $T[MUL_f64_f64_1677_sample_start_] 
        $T[MUL_f64_f64_1677_sample_completed_] 
        $T[MUL_f64_f64_1677_update_start_] 
        $T[MUL_f64_f64_1677_update_completed_] 
        // tmp11x_xix_xi
        $T[R_tmp11x_xix_xi_1675_sample_start_] 
        $T[R_tmp11x_xix_xi_1675_sample_completed_] 
        $T[R_tmp11x_xix_xi_1675_update_start_] 
        $T[R_tmp11x_xix_xi_1675_update_completed_] 
        // implicit reference
        R_tmp11x_xix_xi_1675_sample_start_ <-& (type_cast_1628_update_completed_)
        R_tmp11x_xix_xi_1675_sample_completed_ <-& (R_tmp11x_xix_xi_1675_sample_start_)
        R_tmp11x_xix_xi_1675_update_start_ <-& (R_tmp11x_xix_xi_1675_sample_completed_)
        R_tmp11x_xix_xi_1675_update_completed_ <-& (R_tmp11x_xix_xi_1675_update_start_)
        // iNsTr_66
        $T[R_iNsTr_66_1676_sample_start_] 
        $T[R_iNsTr_66_1676_sample_completed_] 
        $T[R_iNsTr_66_1676_update_start_] 
        $T[R_iNsTr_66_1676_update_completed_] 
        // implicit reference
        R_iNsTr_66_1676_sample_start_ <-& (MUL_f64_f64_1672_update_completed_)
        R_iNsTr_66_1676_sample_completed_ <-& (R_iNsTr_66_1676_sample_start_)
        R_iNsTr_66_1676_update_start_ <-& (R_iNsTr_66_1676_sample_completed_)
        R_iNsTr_66_1676_update_completed_ <-& (R_iNsTr_66_1676_update_start_)
        MUL_f64_f64_1677_sample_start_ <-& (R_tmp11x_xix_xi_1675_update_completed_)
        MUL_f64_f64_1677_sample_start_ <-& (R_iNsTr_66_1676_update_completed_)
        ;;[MUL_f64_f64_1677_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1677_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1677_sample_start_ &-> (MUL_f64_f64_1677_Sample)
        MUL_f64_f64_1677_sample_completed_ <-& (MUL_f64_f64_1677_Sample)
        MUL_f64_f64_1677_sample_completed_ &-> ($null)
        MUL_f64_f64_1677_update_start_ &-> (MUL_f64_f64_1677_Update)
        MUL_f64_f64_1677_update_completed_ <-& (MUL_f64_f64_1677_Update)
        // Target expression
        // (as target) iNsTr_67
        // iNsTr_67
        // implicit reference
        // 		iNsTr_68 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
        //  file prog.aa, line 579
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
        $T[SUB_f64_f64_1683_sample_start_] 
        $T[SUB_f64_f64_1683_sample_completed_] 
        $T[SUB_f64_f64_1683_update_start_] 
        $T[SUB_f64_f64_1683_update_completed_] 
        // iNsTr_67
        $T[R_iNsTr_67_1682_sample_start_] 
        $T[R_iNsTr_67_1682_sample_completed_] 
        $T[R_iNsTr_67_1682_update_start_] 
        $T[R_iNsTr_67_1682_update_completed_] 
        // implicit reference
        R_iNsTr_67_1682_sample_start_ <-& (MUL_f64_f64_1677_update_completed_)
        R_iNsTr_67_1682_sample_completed_ <-& (R_iNsTr_67_1682_sample_start_)
        R_iNsTr_67_1682_update_start_ <-& (R_iNsTr_67_1682_sample_completed_)
        R_iNsTr_67_1682_update_completed_ <-& (R_iNsTr_67_1682_update_start_)
        SUB_f64_f64_1683_sample_start_ <-& (R_iNsTr_67_1682_update_completed_)
        ;;[SUB_f64_f64_1683_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1683_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1683_sample_start_ &-> (SUB_f64_f64_1683_Sample)
        SUB_f64_f64_1683_sample_completed_ <-& (SUB_f64_f64_1683_Sample)
        SUB_f64_f64_1683_sample_completed_ &-> ($null)
        SUB_f64_f64_1683_update_start_ &-> (SUB_f64_f64_1683_Update)
        SUB_f64_f64_1683_update_completed_ <-& (SUB_f64_f64_1683_Update)
        // Target expression
        // (as target) iNsTr_68
        // iNsTr_68
        // implicit reference
        // 		iNsTr_69 := (iNsTr_66 * iNsTr_68)
        //  file prog.aa, line 580
        // Source expression
        // (iNsTr_66 * iNsTr_68)
        $T[MUL_f64_f64_1688_sample_start_] 
        $T[MUL_f64_f64_1688_sample_completed_] 
        $T[MUL_f64_f64_1688_update_start_] 
        $T[MUL_f64_f64_1688_update_completed_] 
        // iNsTr_66
        $T[R_iNsTr_66_1686_sample_start_] 
        $T[R_iNsTr_66_1686_sample_completed_] 
        $T[R_iNsTr_66_1686_update_start_] 
        $T[R_iNsTr_66_1686_update_completed_] 
        // implicit reference
        R_iNsTr_66_1686_sample_start_ <-& (MUL_f64_f64_1672_update_completed_)
        R_iNsTr_66_1686_sample_completed_ <-& (R_iNsTr_66_1686_sample_start_)
        R_iNsTr_66_1686_update_start_ <-& (R_iNsTr_66_1686_sample_completed_)
        R_iNsTr_66_1686_update_completed_ <-& (R_iNsTr_66_1686_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_1687_sample_start_] 
        $T[R_iNsTr_68_1687_sample_completed_] 
        $T[R_iNsTr_68_1687_update_start_] 
        $T[R_iNsTr_68_1687_update_completed_] 
        // implicit reference
        R_iNsTr_68_1687_sample_start_ <-& (SUB_f64_f64_1683_update_completed_)
        R_iNsTr_68_1687_sample_completed_ <-& (R_iNsTr_68_1687_sample_start_)
        R_iNsTr_68_1687_update_start_ <-& (R_iNsTr_68_1687_sample_completed_)
        R_iNsTr_68_1687_update_completed_ <-& (R_iNsTr_68_1687_update_start_)
        MUL_f64_f64_1688_sample_start_ <-& (R_iNsTr_66_1686_update_completed_)
        MUL_f64_f64_1688_sample_start_ <-& (R_iNsTr_68_1687_update_completed_)
        ;;[MUL_f64_f64_1688_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1688_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1688_sample_start_ &-> (MUL_f64_f64_1688_Sample)
        MUL_f64_f64_1688_sample_completed_ <-& (MUL_f64_f64_1688_Sample)
        MUL_f64_f64_1688_sample_completed_ &-> ($null)
        MUL_f64_f64_1688_update_start_ &-> (MUL_f64_f64_1688_Update)
        MUL_f64_f64_1688_update_completed_ <-& (MUL_f64_f64_1688_Update)
        // Target expression
        // (as target) iNsTr_69
        // iNsTr_69
        // implicit reference
        // 		iNsTr_70 := (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 582
        // Source expression
        // (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_1694_sample_start_] 
        $T[EQ_u64_u1_1694_sample_completed_] 
        $T[EQ_u64_u1_1694_update_start_] 
        $T[EQ_u64_u1_1694_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_1691_sample_start_] 
        $T[R_iNsTr_46_1691_sample_completed_] 
        $T[R_iNsTr_46_1691_update_start_] 
        $T[R_iNsTr_46_1691_update_completed_] 
        // implicit reference
        R_iNsTr_46_1691_sample_start_ <-& ($entry)
        R_iNsTr_46_1691_sample_completed_ <-& (R_iNsTr_46_1691_sample_start_)
        R_iNsTr_46_1691_update_start_ <-& (R_iNsTr_46_1691_sample_completed_)
        R_iNsTr_46_1691_update_completed_ <-& (R_iNsTr_46_1691_update_start_)
        EQ_u64_u1_1694_sample_start_ <-& (R_iNsTr_46_1691_update_completed_)
        ;;[EQ_u64_u1_1694_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1694_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1694_sample_start_ &-> (EQ_u64_u1_1694_Sample)
        EQ_u64_u1_1694_sample_completed_ <-& (EQ_u64_u1_1694_Sample)
        EQ_u64_u1_1694_sample_completed_ &-> ($null)
        EQ_u64_u1_1694_update_start_ &-> (EQ_u64_u1_1694_Update)
        EQ_u64_u1_1694_update_completed_ <-& (EQ_u64_u1_1694_Update)
        // Target expression
        // (as target) iNsTr_70
        // iNsTr_70
        // implicit reference
        // 		orx_xcondx_xix_xi := (iNsTr_47 | iNsTr_70)
        //  file prog.aa, line 583
        // Source expression
        // (iNsTr_47 | iNsTr_70)
        $T[OR_u1_u1_1699_sample_start_] 
        $T[OR_u1_u1_1699_sample_completed_] 
        $T[OR_u1_u1_1699_update_start_] 
        $T[OR_u1_u1_1699_update_completed_] 
        // iNsTr_47
        $T[R_iNsTr_47_1697_sample_start_] 
        $T[R_iNsTr_47_1697_sample_completed_] 
        $T[R_iNsTr_47_1697_update_start_] 
        $T[R_iNsTr_47_1697_update_completed_] 
        // implicit reference
        R_iNsTr_47_1697_sample_start_ <-& ($entry)
        R_iNsTr_47_1697_sample_completed_ <-& (R_iNsTr_47_1697_sample_start_)
        R_iNsTr_47_1697_update_start_ <-& (R_iNsTr_47_1697_sample_completed_)
        R_iNsTr_47_1697_update_completed_ <-& (R_iNsTr_47_1697_update_start_)
        // iNsTr_70
        $T[R_iNsTr_70_1698_sample_start_] 
        $T[R_iNsTr_70_1698_sample_completed_] 
        $T[R_iNsTr_70_1698_update_start_] 
        $T[R_iNsTr_70_1698_update_completed_] 
        // implicit reference
        R_iNsTr_70_1698_sample_start_ <-& (EQ_u64_u1_1694_update_completed_)
        R_iNsTr_70_1698_sample_completed_ <-& (R_iNsTr_70_1698_sample_start_)
        R_iNsTr_70_1698_update_start_ <-& (R_iNsTr_70_1698_sample_completed_)
        R_iNsTr_70_1698_update_completed_ <-& (R_iNsTr_70_1698_update_start_)
        OR_u1_u1_1699_sample_start_ <-& (R_iNsTr_47_1697_update_completed_)
        OR_u1_u1_1699_sample_start_ <-& (R_iNsTr_70_1698_update_completed_)
        ;;[OR_u1_u1_1699_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_1699_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_1699_sample_start_ &-> (OR_u1_u1_1699_Sample)
        OR_u1_u1_1699_sample_completed_ <-& (OR_u1_u1_1699_Sample)
        OR_u1_u1_1699_sample_completed_ &-> ($null)
        OR_u1_u1_1699_update_start_ &-> (OR_u1_u1_1699_Update)
        OR_u1_u1_1699_update_completed_ <-& (OR_u1_u1_1699_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi
        // orx_xcondx_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1619_to_assign_stmt_1700__entry__ |-> (assign_stmt_1619_to_assign_stmt_1700)
      assign_stmt_1619_to_assign_stmt_1700__exit__ <-| (assign_stmt_1619_to_assign_stmt_1700)
      // if-statement  
      //  file prog.aa, line 584
      ;;[if_stmt_1701_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1701__entry__ |-> (if_stmt_1701_dead_link)
      if_stmt_1701__exit__ <-| (if_stmt_1701_dead_link)
      ;;[if_stmt_1701_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1701__entry__ |-> (if_stmt_1701_eval_test)
      $P [R_orx_xcondx_xix_xi_1702_place]
      R_orx_xcondx_xix_xi_1702_place <-| (if_stmt_1701_eval_test)
      ;;[if_stmt_1701_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1701_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi_1702_place |-> (if_stmt_1701_if_link if_stmt_1701_else_link)
      $P [bb_19_iq_err_calcx_xexit]
      bb_19_iq_err_calcx_xexit <-| (if_stmt_1701_if_link)
      $P [bb_19_bb_20]
      bb_19_bb_20 <-| (if_stmt_1701_else_link)
      ::[assign_stmt_1712_to_assign_stmt_1753] 
      {
        // 		iNsTr_94 := (tmp11x_xix_xi * iNsTr_69)
        //  file prog.aa, line 588
        // Source expression
        // (tmp11x_xix_xi * iNsTr_69)
        $T[MUL_f64_f64_1711_sample_start_] 
        $T[MUL_f64_f64_1711_sample_completed_] 
        $T[MUL_f64_f64_1711_update_start_] 
        $T[MUL_f64_f64_1711_update_completed_] 
        // tmp11x_xix_xi
        $T[R_tmp11x_xix_xi_1709_sample_start_] 
        $T[R_tmp11x_xix_xi_1709_sample_completed_] 
        $T[R_tmp11x_xix_xi_1709_update_start_] 
        $T[R_tmp11x_xix_xi_1709_update_completed_] 
        // implicit reference
        R_tmp11x_xix_xi_1709_sample_start_ <-& ($entry)
        R_tmp11x_xix_xi_1709_sample_completed_ <-& (R_tmp11x_xix_xi_1709_sample_start_)
        R_tmp11x_xix_xi_1709_update_start_ <-& (R_tmp11x_xix_xi_1709_sample_completed_)
        R_tmp11x_xix_xi_1709_update_completed_ <-& (R_tmp11x_xix_xi_1709_update_start_)
        // iNsTr_69
        $T[R_iNsTr_69_1710_sample_start_] 
        $T[R_iNsTr_69_1710_sample_completed_] 
        $T[R_iNsTr_69_1710_update_start_] 
        $T[R_iNsTr_69_1710_update_completed_] 
        // implicit reference
        R_iNsTr_69_1710_sample_start_ <-& ($entry)
        R_iNsTr_69_1710_sample_completed_ <-& (R_iNsTr_69_1710_sample_start_)
        R_iNsTr_69_1710_update_start_ <-& (R_iNsTr_69_1710_sample_completed_)
        R_iNsTr_69_1710_update_completed_ <-& (R_iNsTr_69_1710_update_start_)
        MUL_f64_f64_1711_sample_start_ <-& (R_tmp11x_xix_xi_1709_update_completed_)
        MUL_f64_f64_1711_sample_start_ <-& (R_iNsTr_69_1710_update_completed_)
        ;;[MUL_f64_f64_1711_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1711_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1711_sample_start_ &-> (MUL_f64_f64_1711_Sample)
        MUL_f64_f64_1711_sample_completed_ <-& (MUL_f64_f64_1711_Sample)
        MUL_f64_f64_1711_sample_completed_ &-> ($null)
        MUL_f64_f64_1711_update_start_ &-> (MUL_f64_f64_1711_Update)
        MUL_f64_f64_1711_update_completed_ <-& (MUL_f64_f64_1711_Update)
        // Target expression
        // (as target) iNsTr_94
        // iNsTr_94
        // implicit reference
        // 		iNsTr_95 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 589
        // Source expression
        // (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1717_sample_start_] 
        $T[AND_u64_u64_1717_sample_completed_] 
        $T[AND_u64_u64_1717_update_start_] 
        $T[AND_u64_u64_1717_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_1714_sample_start_] 
        $T[R_torque_refx_x0_1714_sample_completed_] 
        $T[R_torque_refx_x0_1714_update_start_] 
        $T[R_torque_refx_x0_1714_update_completed_] 
        // implicit reference
        R_torque_refx_x0_1714_sample_start_ <-& ($entry)
        R_torque_refx_x0_1714_sample_completed_ <-& (R_torque_refx_x0_1714_sample_start_)
        R_torque_refx_x0_1714_update_start_ <-& (R_torque_refx_x0_1714_sample_completed_)
        R_torque_refx_x0_1714_update_completed_ <-& (R_torque_refx_x0_1714_update_start_)
        AND_u64_u64_1717_sample_start_ <-& (R_torque_refx_x0_1714_update_completed_)
        ;;[AND_u64_u64_1717_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1717_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1717_sample_start_ &-> (AND_u64_u64_1717_Sample)
        AND_u64_u64_1717_sample_completed_ <-& (AND_u64_u64_1717_Sample)
        AND_u64_u64_1717_sample_completed_ &-> ($null)
        AND_u64_u64_1717_update_start_ &-> (AND_u64_u64_1717_Update)
        AND_u64_u64_1717_update_completed_ <-& (AND_u64_u64_1717_Update)
        // Target expression
        // (as target) iNsTr_95
        // iNsTr_95
        // implicit reference
        // 		iNsTr_96 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
        //  file prog.aa, line 590
        // Source expression
        // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
        $T[SUB_f64_f64_1723_sample_start_] 
        $T[SUB_f64_f64_1723_sample_completed_] 
        $T[SUB_f64_f64_1723_update_start_] 
        $T[SUB_f64_f64_1723_update_completed_] 
        // iNsTr_94
        $T[R_iNsTr_94_1722_sample_start_] 
        $T[R_iNsTr_94_1722_sample_completed_] 
        $T[R_iNsTr_94_1722_update_start_] 
        $T[R_iNsTr_94_1722_update_completed_] 
        // implicit reference
        R_iNsTr_94_1722_sample_start_ <-& (MUL_f64_f64_1711_update_completed_)
        R_iNsTr_94_1722_sample_completed_ <-& (R_iNsTr_94_1722_sample_start_)
        R_iNsTr_94_1722_update_start_ <-& (R_iNsTr_94_1722_sample_completed_)
        R_iNsTr_94_1722_update_completed_ <-& (R_iNsTr_94_1722_update_start_)
        SUB_f64_f64_1723_sample_start_ <-& (R_iNsTr_94_1722_update_completed_)
        ;;[SUB_f64_f64_1723_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f64_f64_1723_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f64_f64_1723_sample_start_ &-> (SUB_f64_f64_1723_Sample)
        SUB_f64_f64_1723_sample_completed_ <-& (SUB_f64_f64_1723_Sample)
        SUB_f64_f64_1723_sample_completed_ &-> ($null)
        SUB_f64_f64_1723_update_start_ &-> (SUB_f64_f64_1723_Update)
        SUB_f64_f64_1723_update_completed_ <-& (SUB_f64_f64_1723_Update)
        // Target expression
        // (as target) iNsTr_96
        // iNsTr_96
        // implicit reference
        // 		iNsTr_97 := (iNsTr_56 | iNsTr_95)
        //  file prog.aa, line 591
        // Source expression
        // (iNsTr_56 | iNsTr_95)
        $T[OR_u64_u64_1728_sample_start_] 
        $T[OR_u64_u64_1728_sample_completed_] 
        $T[OR_u64_u64_1728_update_start_] 
        $T[OR_u64_u64_1728_update_completed_] 
        // iNsTr_56
        $T[R_iNsTr_56_1726_sample_start_] 
        $T[R_iNsTr_56_1726_sample_completed_] 
        $T[R_iNsTr_56_1726_update_start_] 
        $T[R_iNsTr_56_1726_update_completed_] 
        // implicit reference
        R_iNsTr_56_1726_sample_start_ <-& ($entry)
        R_iNsTr_56_1726_sample_completed_ <-& (R_iNsTr_56_1726_sample_start_)
        R_iNsTr_56_1726_update_start_ <-& (R_iNsTr_56_1726_sample_completed_)
        R_iNsTr_56_1726_update_completed_ <-& (R_iNsTr_56_1726_update_start_)
        // iNsTr_95
        $T[R_iNsTr_95_1727_sample_start_] 
        $T[R_iNsTr_95_1727_sample_completed_] 
        $T[R_iNsTr_95_1727_update_start_] 
        $T[R_iNsTr_95_1727_update_completed_] 
        // implicit reference
        R_iNsTr_95_1727_sample_start_ <-& (AND_u64_u64_1717_update_completed_)
        R_iNsTr_95_1727_sample_completed_ <-& (R_iNsTr_95_1727_sample_start_)
        R_iNsTr_95_1727_update_start_ <-& (R_iNsTr_95_1727_sample_completed_)
        R_iNsTr_95_1727_update_completed_ <-& (R_iNsTr_95_1727_update_start_)
        OR_u64_u64_1728_sample_start_ <-& (R_iNsTr_56_1726_update_completed_)
        OR_u64_u64_1728_sample_start_ <-& (R_iNsTr_95_1727_update_completed_)
        ;;[OR_u64_u64_1728_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1728_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1728_sample_start_ &-> (OR_u64_u64_1728_Sample)
        OR_u64_u64_1728_sample_completed_ <-& (OR_u64_u64_1728_Sample)
        OR_u64_u64_1728_sample_completed_ &-> ($null)
        OR_u64_u64_1728_update_start_ &-> (OR_u64_u64_1728_Update)
        OR_u64_u64_1728_update_completed_ <-& (OR_u64_u64_1728_Update)
        // Target expression
        // (as target) iNsTr_97
        // iNsTr_97
        // implicit reference
        // 		iNsTr_98 := (iNsTr_69 * iNsTr_96)
        //  file prog.aa, line 592
        // Source expression
        // (iNsTr_69 * iNsTr_96)
        $T[MUL_f64_f64_1733_sample_start_] 
        $T[MUL_f64_f64_1733_sample_completed_] 
        $T[MUL_f64_f64_1733_update_start_] 
        $T[MUL_f64_f64_1733_update_completed_] 
        // iNsTr_69
        $T[R_iNsTr_69_1731_sample_start_] 
        $T[R_iNsTr_69_1731_sample_completed_] 
        $T[R_iNsTr_69_1731_update_start_] 
        $T[R_iNsTr_69_1731_update_completed_] 
        // implicit reference
        R_iNsTr_69_1731_sample_start_ <-& ($entry)
        R_iNsTr_69_1731_sample_completed_ <-& (R_iNsTr_69_1731_sample_start_)
        R_iNsTr_69_1731_update_start_ <-& (R_iNsTr_69_1731_sample_completed_)
        R_iNsTr_69_1731_update_completed_ <-& (R_iNsTr_69_1731_update_start_)
        // iNsTr_96
        $T[R_iNsTr_96_1732_sample_start_] 
        $T[R_iNsTr_96_1732_sample_completed_] 
        $T[R_iNsTr_96_1732_update_start_] 
        $T[R_iNsTr_96_1732_update_completed_] 
        // implicit reference
        R_iNsTr_96_1732_sample_start_ <-& (SUB_f64_f64_1723_update_completed_)
        R_iNsTr_96_1732_sample_completed_ <-& (R_iNsTr_96_1732_sample_start_)
        R_iNsTr_96_1732_update_start_ <-& (R_iNsTr_96_1732_sample_completed_)
        R_iNsTr_96_1732_update_completed_ <-& (R_iNsTr_96_1732_update_start_)
        MUL_f64_f64_1733_sample_start_ <-& (R_iNsTr_69_1731_update_completed_)
        MUL_f64_f64_1733_sample_start_ <-& (R_iNsTr_96_1732_update_completed_)
        ;;[MUL_f64_f64_1733_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1733_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1733_sample_start_ &-> (MUL_f64_f64_1733_Sample)
        MUL_f64_f64_1733_sample_completed_ <-& (MUL_f64_f64_1733_Sample)
        MUL_f64_f64_1733_sample_completed_ &-> ($null)
        MUL_f64_f64_1733_update_start_ &-> (MUL_f64_f64_1733_Update)
        MUL_f64_f64_1733_update_completed_ <-& (MUL_f64_f64_1733_Update)
        // Target expression
        // (as target) iNsTr_98
        // iNsTr_98
        // implicit reference
        // 		tmp13x_xix_xi := ($bitcast ($float<11,52>) iNsTr_97 )
        //  file prog.aa, line 593
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_97 )
        $T[type_cast_1737_sample_start_] 
        $T[type_cast_1737_sample_completed_] 
        $T[type_cast_1737_update_start_] 
        $T[type_cast_1737_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_1736_sample_start_] 
        $T[R_iNsTr_97_1736_sample_completed_] 
        $T[R_iNsTr_97_1736_update_start_] 
        $T[R_iNsTr_97_1736_update_completed_] 
        // implicit reference
        R_iNsTr_97_1736_sample_start_ <-& (OR_u64_u64_1728_update_completed_)
        R_iNsTr_97_1736_sample_completed_ <-& (R_iNsTr_97_1736_sample_start_)
        R_iNsTr_97_1736_update_start_ <-& (R_iNsTr_97_1736_sample_completed_)
        R_iNsTr_97_1736_update_completed_ <-& (R_iNsTr_97_1736_update_start_)
        type_cast_1737_sample_start_ <-& (R_iNsTr_97_1736_update_completed_)
        ;;[type_cast_1737_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1737_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1737_sample_start_ &-> (type_cast_1737_Sample)
        type_cast_1737_sample_completed_ <-& (type_cast_1737_Sample)
        type_cast_1737_sample_completed_ &-> ($null)
        type_cast_1737_update_start_ &-> (type_cast_1737_Update)
        type_cast_1737_update_completed_ <-& (type_cast_1737_Update)
        // Target expression
        // (as target) tmp13x_xix_xi
        // tmp13x_xix_xi
        // implicit reference
        // 		iNsTr_99 := (tmp13x_xix_xi * iNsTr_98)
        //  file prog.aa, line 594
        // Source expression
        // (tmp13x_xix_xi * iNsTr_98)
        $T[MUL_f64_f64_1742_sample_start_] 
        $T[MUL_f64_f64_1742_sample_completed_] 
        $T[MUL_f64_f64_1742_update_start_] 
        $T[MUL_f64_f64_1742_update_completed_] 
        // tmp13x_xix_xi
        $T[R_tmp13x_xix_xi_1740_sample_start_] 
        $T[R_tmp13x_xix_xi_1740_sample_completed_] 
        $T[R_tmp13x_xix_xi_1740_update_start_] 
        $T[R_tmp13x_xix_xi_1740_update_completed_] 
        // implicit reference
        R_tmp13x_xix_xi_1740_sample_start_ <-& (type_cast_1737_update_completed_)
        R_tmp13x_xix_xi_1740_sample_completed_ <-& (R_tmp13x_xix_xi_1740_sample_start_)
        R_tmp13x_xix_xi_1740_update_start_ <-& (R_tmp13x_xix_xi_1740_sample_completed_)
        R_tmp13x_xix_xi_1740_update_completed_ <-& (R_tmp13x_xix_xi_1740_update_start_)
        // iNsTr_98
        $T[R_iNsTr_98_1741_sample_start_] 
        $T[R_iNsTr_98_1741_sample_completed_] 
        $T[R_iNsTr_98_1741_update_start_] 
        $T[R_iNsTr_98_1741_update_completed_] 
        // implicit reference
        R_iNsTr_98_1741_sample_start_ <-& (MUL_f64_f64_1733_update_completed_)
        R_iNsTr_98_1741_sample_completed_ <-& (R_iNsTr_98_1741_sample_start_)
        R_iNsTr_98_1741_update_start_ <-& (R_iNsTr_98_1741_sample_completed_)
        R_iNsTr_98_1741_update_completed_ <-& (R_iNsTr_98_1741_update_start_)
        MUL_f64_f64_1742_sample_start_ <-& (R_tmp13x_xix_xi_1740_update_completed_)
        MUL_f64_f64_1742_sample_start_ <-& (R_iNsTr_98_1741_update_completed_)
        ;;[MUL_f64_f64_1742_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1742_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1742_sample_start_ &-> (MUL_f64_f64_1742_Sample)
        MUL_f64_f64_1742_sample_completed_ <-& (MUL_f64_f64_1742_Sample)
        MUL_f64_f64_1742_sample_completed_ &-> ($null)
        MUL_f64_f64_1742_update_start_ &-> (MUL_f64_f64_1742_Update)
        MUL_f64_f64_1742_update_completed_ <-& (MUL_f64_f64_1742_Update)
        // Target expression
        // (as target) iNsTr_99
        // iNsTr_99
        // implicit reference
        // 		phitmp19x_xix_xi := ($bitcast ($uint<64>) iNsTr_99 )
        //  file prog.aa, line 595
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_99 )
        $T[type_cast_1746_sample_start_] 
        $T[type_cast_1746_sample_completed_] 
        $T[type_cast_1746_update_start_] 
        $T[type_cast_1746_update_completed_] 
        // iNsTr_99
        $T[R_iNsTr_99_1745_sample_start_] 
        $T[R_iNsTr_99_1745_sample_completed_] 
        $T[R_iNsTr_99_1745_update_start_] 
        $T[R_iNsTr_99_1745_update_completed_] 
        // implicit reference
        R_iNsTr_99_1745_sample_start_ <-& (MUL_f64_f64_1742_update_completed_)
        R_iNsTr_99_1745_sample_completed_ <-& (R_iNsTr_99_1745_sample_start_)
        R_iNsTr_99_1745_update_start_ <-& (R_iNsTr_99_1745_sample_completed_)
        R_iNsTr_99_1745_update_completed_ <-& (R_iNsTr_99_1745_update_start_)
        type_cast_1746_sample_start_ <-& (R_iNsTr_99_1745_update_completed_)
        ;;[type_cast_1746_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1746_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1746_sample_start_ &-> (type_cast_1746_Sample)
        type_cast_1746_sample_completed_ <-& (type_cast_1746_Sample)
        type_cast_1746_sample_completed_ &-> ($null)
        type_cast_1746_update_start_ &-> (type_cast_1746_Update)
        type_cast_1746_update_completed_ <-& (type_cast_1746_Update)
        // Target expression
        // (as target) phitmp19x_xix_xi
        // phitmp19x_xix_xi
        // implicit reference
        // 		phitmp21x_xix_xi := (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 596
        // Source expression
        // (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1752_sample_start_] 
        $T[AND_u64_u64_1752_sample_completed_] 
        $T[AND_u64_u64_1752_update_start_] 
        $T[AND_u64_u64_1752_update_completed_] 
        // phitmp19x_xix_xi
        $T[R_phitmp19x_xix_xi_1749_sample_start_] 
        $T[R_phitmp19x_xix_xi_1749_sample_completed_] 
        $T[R_phitmp19x_xix_xi_1749_update_start_] 
        $T[R_phitmp19x_xix_xi_1749_update_completed_] 
        // implicit reference
        R_phitmp19x_xix_xi_1749_sample_start_ <-& (type_cast_1746_update_completed_)
        R_phitmp19x_xix_xi_1749_sample_completed_ <-& (R_phitmp19x_xix_xi_1749_sample_start_)
        R_phitmp19x_xix_xi_1749_update_start_ <-& (R_phitmp19x_xix_xi_1749_sample_completed_)
        R_phitmp19x_xix_xi_1749_update_completed_ <-& (R_phitmp19x_xix_xi_1749_update_start_)
        AND_u64_u64_1752_sample_start_ <-& (R_phitmp19x_xix_xi_1749_update_completed_)
        ;;[AND_u64_u64_1752_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1752_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1752_sample_start_ &-> (AND_u64_u64_1752_Sample)
        AND_u64_u64_1752_sample_completed_ <-& (AND_u64_u64_1752_Sample)
        AND_u64_u64_1752_sample_completed_ &-> ($null)
        AND_u64_u64_1752_update_start_ &-> (AND_u64_u64_1752_Update)
        AND_u64_u64_1752_update_completed_ <-& (AND_u64_u64_1752_Update)
        // Target expression
        // (as target) phitmp21x_xix_xi
        // phitmp21x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1712_to_assign_stmt_1753__entry__ |-> (assign_stmt_1712_to_assign_stmt_1753)
      assign_stmt_1712_to_assign_stmt_1753__exit__ <-| (assign_stmt_1712_to_assign_stmt_1753)
      ::[assign_stmt_1768_to_assign_stmt_1815] 
      {
        // 		iNsTr_84 := (torque_refx_x0 ^ tmp15x_xix_xi)
        //  file prog.aa, line 602
        // Source expression
        // (torque_refx_x0 ^ tmp15x_xix_xi)
        $T[XOR_u64_u64_1767_sample_start_] 
        $T[XOR_u64_u64_1767_sample_completed_] 
        $T[XOR_u64_u64_1767_update_start_] 
        $T[XOR_u64_u64_1767_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_1765_sample_start_] 
        $T[R_torque_refx_x0_1765_sample_completed_] 
        $T[R_torque_refx_x0_1765_update_start_] 
        $T[R_torque_refx_x0_1765_update_completed_] 
        // implicit reference
        R_torque_refx_x0_1765_sample_start_ <-& ($entry)
        R_torque_refx_x0_1765_sample_completed_ <-& (R_torque_refx_x0_1765_sample_start_)
        R_torque_refx_x0_1765_update_start_ <-& (R_torque_refx_x0_1765_sample_completed_)
        R_torque_refx_x0_1765_update_completed_ <-& (R_torque_refx_x0_1765_update_start_)
        // tmp15x_xix_xi
        $T[R_tmp15x_xix_xi_1766_sample_start_] 
        $T[R_tmp15x_xix_xi_1766_sample_completed_] 
        $T[R_tmp15x_xix_xi_1766_update_start_] 
        $T[R_tmp15x_xix_xi_1766_update_completed_] 
        // implicit reference
        R_tmp15x_xix_xi_1766_sample_start_ <-& ($entry)
        R_tmp15x_xix_xi_1766_sample_completed_ <-& (R_tmp15x_xix_xi_1766_sample_start_)
        R_tmp15x_xix_xi_1766_update_start_ <-& (R_tmp15x_xix_xi_1766_sample_completed_)
        R_tmp15x_xix_xi_1766_update_completed_ <-& (R_tmp15x_xix_xi_1766_update_start_)
        XOR_u64_u64_1767_sample_start_ <-& (R_torque_refx_x0_1765_update_completed_)
        XOR_u64_u64_1767_sample_start_ <-& (R_tmp15x_xix_xi_1766_update_completed_)
        ;;[XOR_u64_u64_1767_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u64_u64_1767_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u64_u64_1767_sample_start_ &-> (XOR_u64_u64_1767_Sample)
        XOR_u64_u64_1767_sample_completed_ <-& (XOR_u64_u64_1767_Sample)
        XOR_u64_u64_1767_sample_completed_ &-> ($null)
        XOR_u64_u64_1767_update_start_ &-> (XOR_u64_u64_1767_Update)
        XOR_u64_u64_1767_update_completed_ <-& (XOR_u64_u64_1767_Update)
        // Target expression
        // (as target) iNsTr_84
        // iNsTr_84
        // implicit reference
        // 		iNsTr_85 := (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 603
        // Source expression
        // (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1773_sample_start_] 
        $T[AND_u64_u64_1773_sample_completed_] 
        $T[AND_u64_u64_1773_update_start_] 
        $T[AND_u64_u64_1773_update_completed_] 
        // iNsTr_84
        $T[R_iNsTr_84_1770_sample_start_] 
        $T[R_iNsTr_84_1770_sample_completed_] 
        $T[R_iNsTr_84_1770_update_start_] 
        $T[R_iNsTr_84_1770_update_completed_] 
        // implicit reference
        R_iNsTr_84_1770_sample_start_ <-& (XOR_u64_u64_1767_update_completed_)
        R_iNsTr_84_1770_sample_completed_ <-& (R_iNsTr_84_1770_sample_start_)
        R_iNsTr_84_1770_update_start_ <-& (R_iNsTr_84_1770_sample_completed_)
        R_iNsTr_84_1770_update_completed_ <-& (R_iNsTr_84_1770_update_start_)
        AND_u64_u64_1773_sample_start_ <-& (R_iNsTr_84_1770_update_completed_)
        ;;[AND_u64_u64_1773_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1773_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1773_sample_start_ &-> (AND_u64_u64_1773_Sample)
        AND_u64_u64_1773_sample_completed_ <-& (AND_u64_u64_1773_Sample)
        AND_u64_u64_1773_sample_completed_ &-> ($null)
        AND_u64_u64_1773_update_start_ &-> (AND_u64_u64_1773_Update)
        AND_u64_u64_1773_update_completed_ <-& (AND_u64_u64_1773_Update)
        // Target expression
        // (as target) iNsTr_85
        // iNsTr_85
        // implicit reference
        // 		iNsTr_86 := (iNsTr_83 | iNsTr_85)
        //  file prog.aa, line 604
        // Source expression
        // (iNsTr_83 | iNsTr_85)
        $T[OR_u64_u64_1778_sample_start_] 
        $T[OR_u64_u64_1778_sample_completed_] 
        $T[OR_u64_u64_1778_update_start_] 
        $T[OR_u64_u64_1778_update_completed_] 
        // iNsTr_83
        $T[R_iNsTr_83_1776_sample_start_] 
        $T[R_iNsTr_83_1776_sample_completed_] 
        $T[R_iNsTr_83_1776_update_start_] 
        $T[R_iNsTr_83_1776_update_completed_] 
        // implicit reference
        R_iNsTr_83_1776_sample_start_ <-& ($entry)
        R_iNsTr_83_1776_sample_completed_ <-& (R_iNsTr_83_1776_sample_start_)
        R_iNsTr_83_1776_update_start_ <-& (R_iNsTr_83_1776_sample_completed_)
        R_iNsTr_83_1776_update_completed_ <-& (R_iNsTr_83_1776_update_start_)
        // iNsTr_85
        $T[R_iNsTr_85_1777_sample_start_] 
        $T[R_iNsTr_85_1777_sample_completed_] 
        $T[R_iNsTr_85_1777_update_start_] 
        $T[R_iNsTr_85_1777_update_completed_] 
        // implicit reference
        R_iNsTr_85_1777_sample_start_ <-& (AND_u64_u64_1773_update_completed_)
        R_iNsTr_85_1777_sample_completed_ <-& (R_iNsTr_85_1777_sample_start_)
        R_iNsTr_85_1777_update_start_ <-& (R_iNsTr_85_1777_sample_completed_)
        R_iNsTr_85_1777_update_completed_ <-& (R_iNsTr_85_1777_update_start_)
        OR_u64_u64_1778_sample_start_ <-& (R_iNsTr_83_1776_update_completed_)
        OR_u64_u64_1778_sample_start_ <-& (R_iNsTr_85_1777_update_completed_)
        ;;[OR_u64_u64_1778_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1778_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1778_sample_start_ &-> (OR_u64_u64_1778_Sample)
        OR_u64_u64_1778_sample_completed_ <-& (OR_u64_u64_1778_Sample)
        OR_u64_u64_1778_sample_completed_ &-> ($null)
        OR_u64_u64_1778_update_start_ &-> (OR_u64_u64_1778_Update)
        OR_u64_u64_1778_update_completed_ <-& (OR_u64_u64_1778_Update)
        // Target expression
        // (as target) iNsTr_86
        // iNsTr_86
        // implicit reference
        // 		tmp4x_xix_xi := ($bitcast ($float<11,52>) iNsTr_86 )
        //  file prog.aa, line 605
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_86 )
        $T[type_cast_1782_sample_start_] 
        $T[type_cast_1782_sample_completed_] 
        $T[type_cast_1782_update_start_] 
        $T[type_cast_1782_update_completed_] 
        // iNsTr_86
        $T[R_iNsTr_86_1781_sample_start_] 
        $T[R_iNsTr_86_1781_sample_completed_] 
        $T[R_iNsTr_86_1781_update_start_] 
        $T[R_iNsTr_86_1781_update_completed_] 
        // implicit reference
        R_iNsTr_86_1781_sample_start_ <-& (OR_u64_u64_1778_update_completed_)
        R_iNsTr_86_1781_sample_completed_ <-& (R_iNsTr_86_1781_sample_start_)
        R_iNsTr_86_1781_update_start_ <-& (R_iNsTr_86_1781_sample_completed_)
        R_iNsTr_86_1781_update_completed_ <-& (R_iNsTr_86_1781_update_start_)
        type_cast_1782_sample_start_ <-& (R_iNsTr_86_1781_update_completed_)
        ;;[type_cast_1782_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1782_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1782_sample_start_ &-> (type_cast_1782_Sample)
        type_cast_1782_sample_completed_ <-& (type_cast_1782_Sample)
        type_cast_1782_sample_completed_ &-> ($null)
        type_cast_1782_update_start_ &-> (type_cast_1782_Update)
        type_cast_1782_update_completed_ <-& (type_cast_1782_Update)
        // Target expression
        // (as target) tmp4x_xix_xi
        // tmp4x_xix_xi
        // implicit reference
        // 		iNsTr_87 := ($cast ($float<8,23>) tmp4x_xix_xi )
        //  file prog.aa, line 606
        // Source expression
        // ($cast ($float<8,23>) tmp4x_xix_xi )
        $T[type_cast_1786_sample_start_] 
        $T[type_cast_1786_sample_completed_] 
        $T[type_cast_1786_update_start_] 
        $T[type_cast_1786_update_completed_] 
        // tmp4x_xix_xi
        $T[R_tmp4x_xix_xi_1785_sample_start_] 
        $T[R_tmp4x_xix_xi_1785_sample_completed_] 
        $T[R_tmp4x_xix_xi_1785_update_start_] 
        $T[R_tmp4x_xix_xi_1785_update_completed_] 
        // implicit reference
        R_tmp4x_xix_xi_1785_sample_start_ <-& (type_cast_1782_update_completed_)
        R_tmp4x_xix_xi_1785_sample_completed_ <-& (R_tmp4x_xix_xi_1785_sample_start_)
        R_tmp4x_xix_xi_1785_update_start_ <-& (R_tmp4x_xix_xi_1785_sample_completed_)
        R_tmp4x_xix_xi_1785_update_completed_ <-& (R_tmp4x_xix_xi_1785_update_start_)
        type_cast_1786_sample_start_ <-& (R_tmp4x_xix_xi_1785_update_completed_)
        ;;[type_cast_1786_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1786_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1786_sample_start_ &-> (type_cast_1786_Sample)
        type_cast_1786_sample_completed_ <-& (type_cast_1786_Sample)
        type_cast_1786_sample_completed_ &-> ($null)
        type_cast_1786_update_start_ &-> (type_cast_1786_Update)
        type_cast_1786_update_completed_ <-& (type_cast_1786_Update)
        // Target expression
        // (as target) iNsTr_87
        // iNsTr_87
        // implicit reference
        // 		iNsTr_88 := (flux_refx_x0 - iNsTr_40)
        //  file prog.aa, line 607
        // Source expression
        // (flux_refx_x0 - iNsTr_40)
        $T[SUB_f32_f32_1791_sample_start_] 
        $T[SUB_f32_f32_1791_sample_completed_] 
        $T[SUB_f32_f32_1791_update_start_] 
        $T[SUB_f32_f32_1791_update_completed_] 
        // flux_refx_x0
        $T[R_flux_refx_x0_1789_sample_start_] 
        $T[R_flux_refx_x0_1789_sample_completed_] 
        $T[R_flux_refx_x0_1789_update_start_] 
        $T[R_flux_refx_x0_1789_update_completed_] 
        // implicit reference
        R_flux_refx_x0_1789_sample_start_ <-& ($entry)
        R_flux_refx_x0_1789_sample_completed_ <-& (R_flux_refx_x0_1789_sample_start_)
        R_flux_refx_x0_1789_update_start_ <-& (R_flux_refx_x0_1789_sample_completed_)
        R_flux_refx_x0_1789_update_completed_ <-& (R_flux_refx_x0_1789_update_start_)
        // iNsTr_40
        $T[R_iNsTr_40_1790_sample_start_] 
        $T[R_iNsTr_40_1790_sample_completed_] 
        $T[R_iNsTr_40_1790_update_start_] 
        $T[R_iNsTr_40_1790_update_completed_] 
        // implicit reference
        R_iNsTr_40_1790_sample_start_ <-& ($entry)
        R_iNsTr_40_1790_sample_completed_ <-& (R_iNsTr_40_1790_sample_start_)
        R_iNsTr_40_1790_update_start_ <-& (R_iNsTr_40_1790_sample_completed_)
        R_iNsTr_40_1790_update_completed_ <-& (R_iNsTr_40_1790_update_start_)
        SUB_f32_f32_1791_sample_start_ <-& (R_flux_refx_x0_1789_update_completed_)
        SUB_f32_f32_1791_sample_start_ <-& (R_iNsTr_40_1790_update_completed_)
        ;;[SUB_f32_f32_1791_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_1791_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_1791_sample_start_ &-> (SUB_f32_f32_1791_Sample)
        SUB_f32_f32_1791_sample_completed_ <-& (SUB_f32_f32_1791_Sample)
        SUB_f32_f32_1791_sample_completed_ &-> ($null)
        SUB_f32_f32_1791_update_start_ &-> (SUB_f32_f32_1791_Update)
        SUB_f32_f32_1791_update_completed_ <-& (SUB_f32_f32_1791_Update)
        // Target expression
        // (as target) iNsTr_88
        // iNsTr_88
        // implicit reference
        // 		iNsTr_89 := (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 608
        // Source expression
        // (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_1797_sample_start_] 
        $T[MUL_f32_f32_1797_sample_completed_] 
        $T[MUL_f32_f32_1797_update_start_] 
        $T[MUL_f32_f32_1797_update_completed_] 
        // iNsTr_88
        $T[R_iNsTr_88_1794_sample_start_] 
        $T[R_iNsTr_88_1794_sample_completed_] 
        $T[R_iNsTr_88_1794_update_start_] 
        $T[R_iNsTr_88_1794_update_completed_] 
        // implicit reference
        R_iNsTr_88_1794_sample_start_ <-& (SUB_f32_f32_1791_update_completed_)
        R_iNsTr_88_1794_sample_completed_ <-& (R_iNsTr_88_1794_sample_start_)
        R_iNsTr_88_1794_update_start_ <-& (R_iNsTr_88_1794_sample_completed_)
        R_iNsTr_88_1794_update_completed_ <-& (R_iNsTr_88_1794_update_start_)
        MUL_f32_f32_1797_sample_start_ <-& (R_iNsTr_88_1794_update_completed_)
        ;;[MUL_f32_f32_1797_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1797_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1797_sample_start_ &-> (MUL_f32_f32_1797_Sample)
        MUL_f32_f32_1797_sample_completed_ <-& (MUL_f32_f32_1797_Sample)
        MUL_f32_f32_1797_sample_completed_ &-> ($null)
        MUL_f32_f32_1797_update_start_ &-> (MUL_f32_f32_1797_Update)
        MUL_f32_f32_1797_update_completed_ <-& (MUL_f32_f32_1797_Update)
        // Target expression
        // (as target) iNsTr_89
        // iNsTr_89
        // implicit reference
        // 		iNsTr_90 := (iNsTr_89 + int_flux_err_temp_2x_x0)
        //  file prog.aa, line 609
        // Source expression
        // (iNsTr_89 + int_flux_err_temp_2x_x0)
        $T[ADD_f32_f32_1802_sample_start_] 
        $T[ADD_f32_f32_1802_sample_completed_] 
        $T[ADD_f32_f32_1802_update_start_] 
        $T[ADD_f32_f32_1802_update_completed_] 
        // iNsTr_89
        $T[R_iNsTr_89_1800_sample_start_] 
        $T[R_iNsTr_89_1800_sample_completed_] 
        $T[R_iNsTr_89_1800_update_start_] 
        $T[R_iNsTr_89_1800_update_completed_] 
        // implicit reference
        R_iNsTr_89_1800_sample_start_ <-& (MUL_f32_f32_1797_update_completed_)
        R_iNsTr_89_1800_sample_completed_ <-& (R_iNsTr_89_1800_sample_start_)
        R_iNsTr_89_1800_update_start_ <-& (R_iNsTr_89_1800_sample_completed_)
        R_iNsTr_89_1800_update_completed_ <-& (R_iNsTr_89_1800_update_start_)
        // int_flux_err_temp_2x_x0
        $T[R_int_flux_err_temp_2x_x0_1801_sample_start_] 
        $T[R_int_flux_err_temp_2x_x0_1801_sample_completed_] 
        $T[R_int_flux_err_temp_2x_x0_1801_update_start_] 
        $T[R_int_flux_err_temp_2x_x0_1801_update_completed_] 
        // implicit reference
        R_int_flux_err_temp_2x_x0_1801_sample_start_ <-& ($entry)
        R_int_flux_err_temp_2x_x0_1801_sample_completed_ <-& (R_int_flux_err_temp_2x_x0_1801_sample_start_)
        R_int_flux_err_temp_2x_x0_1801_update_start_ <-& (R_int_flux_err_temp_2x_x0_1801_sample_completed_)
        R_int_flux_err_temp_2x_x0_1801_update_completed_ <-& (R_int_flux_err_temp_2x_x0_1801_update_start_)
        ADD_f32_f32_1802_sample_start_ <-& (R_iNsTr_89_1800_update_completed_)
        ADD_f32_f32_1802_sample_start_ <-& (R_int_flux_err_temp_2x_x0_1801_update_completed_)
        ;;[ADD_f32_f32_1802_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1802_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1802_sample_start_ &-> (ADD_f32_f32_1802_Sample)
        ADD_f32_f32_1802_sample_completed_ <-& (ADD_f32_f32_1802_Sample)
        ADD_f32_f32_1802_sample_completed_ &-> ($null)
        ADD_f32_f32_1802_update_start_ &-> (ADD_f32_f32_1802_Update)
        ADD_f32_f32_1802_update_completed_ <-& (ADD_f32_f32_1802_Update)
        // Target expression
        // (as target) iNsTr_90
        // iNsTr_90
        // implicit reference
        // 		iNsTr_91 := (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
        //  file prog.aa, line 610
        // Source expression
        // (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
        $T[MUL_f32_f32_1808_sample_start_] 
        $T[MUL_f32_f32_1808_sample_completed_] 
        $T[MUL_f32_f32_1808_update_start_] 
        $T[MUL_f32_f32_1808_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_1805_sample_start_] 
        $T[R_iNsTr_90_1805_sample_completed_] 
        $T[R_iNsTr_90_1805_update_start_] 
        $T[R_iNsTr_90_1805_update_completed_] 
        // implicit reference
        R_iNsTr_90_1805_sample_start_ <-& (ADD_f32_f32_1802_update_completed_)
        R_iNsTr_90_1805_sample_completed_ <-& (R_iNsTr_90_1805_sample_start_)
        R_iNsTr_90_1805_update_start_ <-& (R_iNsTr_90_1805_sample_completed_)
        R_iNsTr_90_1805_update_completed_ <-& (R_iNsTr_90_1805_update_start_)
        MUL_f32_f32_1808_sample_start_ <-& (R_iNsTr_90_1805_update_completed_)
        ;;[MUL_f32_f32_1808_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1808_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1808_sample_start_ &-> (MUL_f32_f32_1808_Sample)
        MUL_f32_f32_1808_sample_completed_ <-& (MUL_f32_f32_1808_Sample)
        MUL_f32_f32_1808_sample_completed_ &-> ($null)
        MUL_f32_f32_1808_update_start_ &-> (MUL_f32_f32_1808_Update)
        MUL_f32_f32_1808_update_completed_ <-& (MUL_f32_f32_1808_Update)
        // Target expression
        // (as target) iNsTr_91
        // iNsTr_91
        // implicit reference
        // 		iNsTr_92 := (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
        //  file prog.aa, line 612
        // Source expression
        // (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
        $T[SLT_f32_u1_1814_sample_start_] 
        $T[SLT_f32_u1_1814_sample_completed_] 
        $T[SLT_f32_u1_1814_update_start_] 
        $T[SLT_f32_u1_1814_update_completed_] 
        // iNsTr_91
        $T[R_iNsTr_91_1811_sample_start_] 
        $T[R_iNsTr_91_1811_sample_completed_] 
        $T[R_iNsTr_91_1811_update_start_] 
        $T[R_iNsTr_91_1811_update_completed_] 
        // implicit reference
        R_iNsTr_91_1811_sample_start_ <-& (MUL_f32_f32_1808_update_completed_)
        R_iNsTr_91_1811_sample_completed_ <-& (R_iNsTr_91_1811_sample_start_)
        R_iNsTr_91_1811_update_start_ <-& (R_iNsTr_91_1811_sample_completed_)
        R_iNsTr_91_1811_update_completed_ <-& (R_iNsTr_91_1811_update_start_)
        SLT_f32_u1_1814_sample_start_ <-& (R_iNsTr_91_1811_update_completed_)
        ;;[SLT_f32_u1_1814_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1814_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1814_sample_start_ &-> (SLT_f32_u1_1814_Sample)
        SLT_f32_u1_1814_sample_completed_ <-& (SLT_f32_u1_1814_Sample)
        SLT_f32_u1_1814_sample_completed_ &-> ($null)
        SLT_f32_u1_1814_update_start_ &-> (SLT_f32_u1_1814_Update)
        SLT_f32_u1_1814_update_completed_ <-& (SLT_f32_u1_1814_Update)
        // Target expression
        // (as target) iNsTr_92
        // iNsTr_92
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1768_to_assign_stmt_1815__entry__ |-> (assign_stmt_1768_to_assign_stmt_1815)
      assign_stmt_1768_to_assign_stmt_1815__exit__ <-| (assign_stmt_1768_to_assign_stmt_1815)
      // if-statement  
      //  file prog.aa, line 613
      ;;[if_stmt_1816_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1816__entry__ |-> (if_stmt_1816_dead_link)
      if_stmt_1816__exit__ <-| (if_stmt_1816_dead_link)
      ;;[if_stmt_1816_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1816__entry__ |-> (if_stmt_1816_eval_test)
      $P [R_iNsTr_92_1817_place]
      R_iNsTr_92_1817_place <-| (if_stmt_1816_eval_test)
      ;;[if_stmt_1816_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1816_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_92_1817_place |-> (if_stmt_1816_if_link if_stmt_1816_else_link)
      $P [iq_err_calcx_xexit_bb_24]
      iq_err_calcx_xexit_bb_24 <-| (if_stmt_1816_if_link)
      $P [iq_err_calcx_xexit_bb_22]
      iq_err_calcx_xexit_bb_22 <-| (if_stmt_1816_else_link)
      ::[assign_stmt_1828] 
      {
        // 		iNsTr_105 := (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
        //  file prog.aa, line 618
        // Source expression
        // (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
        $T[SGT_f32_u1_1827_sample_start_] 
        $T[SGT_f32_u1_1827_sample_completed_] 
        $T[SGT_f32_u1_1827_update_start_] 
        $T[SGT_f32_u1_1827_update_completed_] 
        // iNsTr_91
        $T[R_iNsTr_91_1824_sample_start_] 
        $T[R_iNsTr_91_1824_sample_completed_] 
        $T[R_iNsTr_91_1824_update_start_] 
        $T[R_iNsTr_91_1824_update_completed_] 
        // implicit reference
        R_iNsTr_91_1824_sample_start_ <-& ($entry)
        R_iNsTr_91_1824_sample_completed_ <-& (R_iNsTr_91_1824_sample_start_)
        R_iNsTr_91_1824_update_start_ <-& (R_iNsTr_91_1824_sample_completed_)
        R_iNsTr_91_1824_update_completed_ <-& (R_iNsTr_91_1824_update_start_)
        SGT_f32_u1_1827_sample_start_ <-& (R_iNsTr_91_1824_update_completed_)
        ;;[SGT_f32_u1_1827_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1827_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1827_sample_start_ &-> (SGT_f32_u1_1827_Sample)
        SGT_f32_u1_1827_sample_completed_ <-& (SGT_f32_u1_1827_Sample)
        SGT_f32_u1_1827_sample_completed_ &-> ($null)
        SGT_f32_u1_1827_update_start_ &-> (SGT_f32_u1_1827_Update)
        SGT_f32_u1_1827_update_completed_ <-& (SGT_f32_u1_1827_Update)
        // Target expression
        // (as target) iNsTr_105
        // iNsTr_105
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1828__entry__ |-> (assign_stmt_1828)
      assign_stmt_1828__exit__ <-| (assign_stmt_1828)
      // if-statement  
      //  file prog.aa, line 619
      ;;[if_stmt_1829_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1829__entry__ |-> (if_stmt_1829_dead_link)
      if_stmt_1829__exit__ <-| (if_stmt_1829_dead_link)
      ;;[if_stmt_1829_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1829__entry__ |-> (if_stmt_1829_eval_test)
      $P [R_iNsTr_105_1830_place]
      R_iNsTr_105_1830_place <-| (if_stmt_1829_eval_test)
      ;;[if_stmt_1829_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1829_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_105_1830_place |-> (if_stmt_1829_if_link if_stmt_1829_else_link)
      $P [bb_22_bb_24]
      bb_22_bb_24 <-| (if_stmt_1829_if_link)
      $P [bb_22_bb_23]
      bb_22_bb_23 <-| (if_stmt_1829_else_link)
      ::[assign_stmt_1854_to_assign_stmt_1865] 
      {
        // 		iNsTr_101 := (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
        //  file prog.aa, line 628
        // Source expression
        // (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
        $T[MUL_f32_f32_1853_sample_start_] 
        $T[MUL_f32_f32_1853_sample_completed_] 
        $T[MUL_f32_f32_1853_update_start_] 
        $T[MUL_f32_f32_1853_update_completed_] 
        // iNsTr_88
        $T[R_iNsTr_88_1850_sample_start_] 
        $T[R_iNsTr_88_1850_sample_completed_] 
        $T[R_iNsTr_88_1850_update_start_] 
        $T[R_iNsTr_88_1850_update_completed_] 
        // implicit reference
        R_iNsTr_88_1850_sample_start_ <-& ($entry)
        R_iNsTr_88_1850_sample_completed_ <-& (R_iNsTr_88_1850_sample_start_)
        R_iNsTr_88_1850_update_start_ <-& (R_iNsTr_88_1850_sample_completed_)
        R_iNsTr_88_1850_update_completed_ <-& (R_iNsTr_88_1850_update_start_)
        MUL_f32_f32_1853_sample_start_ <-& (R_iNsTr_88_1850_update_completed_)
        ;;[MUL_f32_f32_1853_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1853_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1853_sample_start_ &-> (MUL_f32_f32_1853_Sample)
        MUL_f32_f32_1853_sample_completed_ <-& (MUL_f32_f32_1853_Sample)
        MUL_f32_f32_1853_sample_completed_ &-> ($null)
        MUL_f32_f32_1853_update_start_ &-> (MUL_f32_f32_1853_Update)
        MUL_f32_f32_1853_update_completed_ <-& (MUL_f32_f32_1853_Update)
        // Target expression
        // (as target) iNsTr_101
        // iNsTr_101
        // implicit reference
        // 		iNsTr_102 := (int_flux_errx_x0 + iNsTr_101)
        //  file prog.aa, line 629
        // Source expression
        // (int_flux_errx_x0 + iNsTr_101)
        $T[ADD_f32_f32_1858_sample_start_] 
        $T[ADD_f32_f32_1858_sample_completed_] 
        $T[ADD_f32_f32_1858_update_start_] 
        $T[ADD_f32_f32_1858_update_completed_] 
        // int_flux_errx_x0
        $T[R_int_flux_errx_x0_1856_sample_start_] 
        $T[R_int_flux_errx_x0_1856_sample_completed_] 
        $T[R_int_flux_errx_x0_1856_update_start_] 
        $T[R_int_flux_errx_x0_1856_update_completed_] 
        // implicit reference
        R_int_flux_errx_x0_1856_sample_start_ <-& ($entry)
        R_int_flux_errx_x0_1856_sample_completed_ <-& (R_int_flux_errx_x0_1856_sample_start_)
        R_int_flux_errx_x0_1856_update_start_ <-& (R_int_flux_errx_x0_1856_sample_completed_)
        R_int_flux_errx_x0_1856_update_completed_ <-& (R_int_flux_errx_x0_1856_update_start_)
        // iNsTr_101
        $T[R_iNsTr_101_1857_sample_start_] 
        $T[R_iNsTr_101_1857_sample_completed_] 
        $T[R_iNsTr_101_1857_update_start_] 
        $T[R_iNsTr_101_1857_update_completed_] 
        // implicit reference
        R_iNsTr_101_1857_sample_start_ <-& (MUL_f32_f32_1853_update_completed_)
        R_iNsTr_101_1857_sample_completed_ <-& (R_iNsTr_101_1857_sample_start_)
        R_iNsTr_101_1857_update_start_ <-& (R_iNsTr_101_1857_sample_completed_)
        R_iNsTr_101_1857_update_completed_ <-& (R_iNsTr_101_1857_update_start_)
        ADD_f32_f32_1858_sample_start_ <-& (R_int_flux_errx_x0_1856_update_completed_)
        ADD_f32_f32_1858_sample_start_ <-& (R_iNsTr_101_1857_update_completed_)
        ;;[ADD_f32_f32_1858_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1858_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1858_sample_start_ &-> (ADD_f32_f32_1858_Sample)
        ADD_f32_f32_1858_sample_completed_ <-& (ADD_f32_f32_1858_Sample)
        ADD_f32_f32_1858_sample_completed_ &-> ($null)
        ADD_f32_f32_1858_update_start_ &-> (ADD_f32_f32_1858_Update)
        ADD_f32_f32_1858_update_completed_ <-& (ADD_f32_f32_1858_Update)
        // Target expression
        // (as target) iNsTr_102
        // iNsTr_102
        // implicit reference
        // 		iNsTr_103 := (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
        //  file prog.aa, line 631
        // Source expression
        // (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
        $T[SLT_f32_u1_1864_sample_start_] 
        $T[SLT_f32_u1_1864_sample_completed_] 
        $T[SLT_f32_u1_1864_update_start_] 
        $T[SLT_f32_u1_1864_update_completed_] 
        // iNsTr_102
        $T[R_iNsTr_102_1861_sample_start_] 
        $T[R_iNsTr_102_1861_sample_completed_] 
        $T[R_iNsTr_102_1861_update_start_] 
        $T[R_iNsTr_102_1861_update_completed_] 
        // implicit reference
        R_iNsTr_102_1861_sample_start_ <-& (ADD_f32_f32_1858_update_completed_)
        R_iNsTr_102_1861_sample_completed_ <-& (R_iNsTr_102_1861_sample_start_)
        R_iNsTr_102_1861_update_start_ <-& (R_iNsTr_102_1861_sample_completed_)
        R_iNsTr_102_1861_update_completed_ <-& (R_iNsTr_102_1861_update_start_)
        SLT_f32_u1_1864_sample_start_ <-& (R_iNsTr_102_1861_update_completed_)
        ;;[SLT_f32_u1_1864_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1864_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1864_sample_start_ &-> (SLT_f32_u1_1864_Sample)
        SLT_f32_u1_1864_sample_completed_ <-& (SLT_f32_u1_1864_Sample)
        SLT_f32_u1_1864_sample_completed_ &-> ($null)
        SLT_f32_u1_1864_update_start_ &-> (SLT_f32_u1_1864_Update)
        SLT_f32_u1_1864_update_completed_ <-& (SLT_f32_u1_1864_Update)
        // Target expression
        // (as target) iNsTr_103
        // iNsTr_103
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1854_to_assign_stmt_1865__entry__ |-> (assign_stmt_1854_to_assign_stmt_1865)
      assign_stmt_1854_to_assign_stmt_1865__exit__ <-| (assign_stmt_1854_to_assign_stmt_1865)
      // if-statement  
      //  file prog.aa, line 632
      ;;[if_stmt_1866_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1866__entry__ |-> (if_stmt_1866_dead_link)
      if_stmt_1866__exit__ <-| (if_stmt_1866_dead_link)
      ;;[if_stmt_1866_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1866__entry__ |-> (if_stmt_1866_eval_test)
      $P [R_iNsTr_103_1867_place]
      R_iNsTr_103_1867_place <-| (if_stmt_1866_eval_test)
      ;;[if_stmt_1866_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1866_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_103_1867_place |-> (if_stmt_1866_if_link if_stmt_1866_else_link)
      $P [bb_24_xx_xthread12]
      bb_24_xx_xthread12 <-| (if_stmt_1866_if_link)
      $P [bb_24_bb_25]
      bb_24_bb_25 <-| (if_stmt_1866_else_link)
      ::[assign_stmt_1878] 
      {
        // 		iNsTr_110 := (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
        //  file prog.aa, line 637
        // Source expression
        // (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
        $T[SGT_f32_u1_1877_sample_start_] 
        $T[SGT_f32_u1_1877_sample_completed_] 
        $T[SGT_f32_u1_1877_update_start_] 
        $T[SGT_f32_u1_1877_update_completed_] 
        // iNsTr_102
        $T[R_iNsTr_102_1874_sample_start_] 
        $T[R_iNsTr_102_1874_sample_completed_] 
        $T[R_iNsTr_102_1874_update_start_] 
        $T[R_iNsTr_102_1874_update_completed_] 
        // implicit reference
        R_iNsTr_102_1874_sample_start_ <-& ($entry)
        R_iNsTr_102_1874_sample_completed_ <-& (R_iNsTr_102_1874_sample_start_)
        R_iNsTr_102_1874_update_start_ <-& (R_iNsTr_102_1874_sample_completed_)
        R_iNsTr_102_1874_update_completed_ <-& (R_iNsTr_102_1874_update_start_)
        SGT_f32_u1_1877_sample_start_ <-& (R_iNsTr_102_1874_update_completed_)
        ;;[SGT_f32_u1_1877_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1877_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1877_sample_start_ &-> (SGT_f32_u1_1877_Sample)
        SGT_f32_u1_1877_sample_completed_ <-& (SGT_f32_u1_1877_Sample)
        SGT_f32_u1_1877_sample_completed_ &-> ($null)
        SGT_f32_u1_1877_update_start_ &-> (SGT_f32_u1_1877_Update)
        SGT_f32_u1_1877_update_completed_ <-& (SGT_f32_u1_1877_Update)
        // Target expression
        // (as target) iNsTr_110
        // iNsTr_110
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1878__entry__ |-> (assign_stmt_1878)
      assign_stmt_1878__exit__ <-| (assign_stmt_1878)
      // if-statement  
      //  file prog.aa, line 638
      ;;[if_stmt_1879_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1879__entry__ |-> (if_stmt_1879_dead_link)
      if_stmt_1879__exit__ <-| (if_stmt_1879_dead_link)
      ;;[if_stmt_1879_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1879__entry__ |-> (if_stmt_1879_eval_test)
      $P [R_iNsTr_110_1880_place]
      R_iNsTr_110_1880_place <-| (if_stmt_1879_eval_test)
      ;;[if_stmt_1879_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1879_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_110_1880_place |-> (if_stmt_1879_if_link if_stmt_1879_else_link)
      $P [bb_25_xx_xthread12]
      bb_25_xx_xthread12 <-| (if_stmt_1879_if_link)
      $P [bb_25_bb_26]
      bb_25_bb_26 <-| (if_stmt_1879_else_link)
      ::[assign_stmt_1889_to_assign_stmt_1905] 
      {
        // 		phitmp := ($cast ($float<11,52>) iNsTr_102 )
        //  file prog.aa, line 642
        // Source expression
        // ($cast ($float<11,52>) iNsTr_102 )
        $T[type_cast_1888_sample_start_] 
        $T[type_cast_1888_sample_completed_] 
        $T[type_cast_1888_update_start_] 
        $T[type_cast_1888_update_completed_] 
        // iNsTr_102
        $T[R_iNsTr_102_1887_sample_start_] 
        $T[R_iNsTr_102_1887_sample_completed_] 
        $T[R_iNsTr_102_1887_update_start_] 
        $T[R_iNsTr_102_1887_update_completed_] 
        // implicit reference
        R_iNsTr_102_1887_sample_start_ <-& ($entry)
        R_iNsTr_102_1887_sample_completed_ <-& (R_iNsTr_102_1887_sample_start_)
        R_iNsTr_102_1887_update_start_ <-& (R_iNsTr_102_1887_sample_completed_)
        R_iNsTr_102_1887_update_completed_ <-& (R_iNsTr_102_1887_update_start_)
        type_cast_1888_sample_start_ <-& (R_iNsTr_102_1887_update_completed_)
        ;;[type_cast_1888_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1888_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1888_sample_start_ &-> (type_cast_1888_Sample)
        type_cast_1888_sample_completed_ <-& (type_cast_1888_Sample)
        type_cast_1888_sample_completed_ &-> ($null)
        type_cast_1888_update_start_ &-> (type_cast_1888_Update)
        type_cast_1888_update_completed_ <-& (type_cast_1888_Update)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // 		phitmp7 := ($bitcast ($uint<64>) phitmp )
        //  file prog.aa, line 643
        // Source expression
        // ($bitcast ($uint<64>) phitmp )
        $T[type_cast_1892_sample_start_] 
        $T[type_cast_1892_sample_completed_] 
        $T[type_cast_1892_update_start_] 
        $T[type_cast_1892_update_completed_] 
        // phitmp
        $T[R_phitmp_1891_sample_start_] 
        $T[R_phitmp_1891_sample_completed_] 
        $T[R_phitmp_1891_update_start_] 
        $T[R_phitmp_1891_update_completed_] 
        // implicit reference
        R_phitmp_1891_sample_start_ <-& (type_cast_1888_update_completed_)
        R_phitmp_1891_sample_completed_ <-& (R_phitmp_1891_sample_start_)
        R_phitmp_1891_update_start_ <-& (R_phitmp_1891_sample_completed_)
        R_phitmp_1891_update_completed_ <-& (R_phitmp_1891_update_start_)
        type_cast_1892_sample_start_ <-& (R_phitmp_1891_update_completed_)
        ;;[type_cast_1892_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1892_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1892_sample_start_ &-> (type_cast_1892_Sample)
        type_cast_1892_sample_completed_ <-& (type_cast_1892_Sample)
        type_cast_1892_sample_completed_ &-> ($null)
        type_cast_1892_update_start_ &-> (type_cast_1892_Update)
        type_cast_1892_update_completed_ <-& (type_cast_1892_Update)
        // Target expression
        // (as target) phitmp7
        // phitmp7
        // implicit reference
        // 		iNsTr_126 := (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 644
        // Source expression
        // (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1898_sample_start_] 
        $T[AND_u64_u64_1898_sample_completed_] 
        $T[AND_u64_u64_1898_update_start_] 
        $T[AND_u64_u64_1898_update_completed_] 
        // phitmp7
        $T[R_phitmp7_1895_sample_start_] 
        $T[R_phitmp7_1895_sample_completed_] 
        $T[R_phitmp7_1895_update_start_] 
        $T[R_phitmp7_1895_update_completed_] 
        // implicit reference
        R_phitmp7_1895_sample_start_ <-& (type_cast_1892_update_completed_)
        R_phitmp7_1895_sample_completed_ <-& (R_phitmp7_1895_sample_start_)
        R_phitmp7_1895_update_start_ <-& (R_phitmp7_1895_sample_completed_)
        R_phitmp7_1895_update_completed_ <-& (R_phitmp7_1895_update_start_)
        AND_u64_u64_1898_sample_start_ <-& (R_phitmp7_1895_update_completed_)
        ;;[AND_u64_u64_1898_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1898_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1898_sample_start_ &-> (AND_u64_u64_1898_Sample)
        AND_u64_u64_1898_sample_completed_ <-& (AND_u64_u64_1898_Sample)
        AND_u64_u64_1898_sample_completed_ &-> ($null)
        AND_u64_u64_1898_update_start_ &-> (AND_u64_u64_1898_Update)
        AND_u64_u64_1898_update_completed_ <-& (AND_u64_u64_1898_Update)
        // Target expression
        // (as target) iNsTr_126
        // iNsTr_126
        // implicit reference
        // 		iNsTr_127 := (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 646
        // Source expression
        // (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        $T[EQ_u64_u1_1904_sample_start_] 
        $T[EQ_u64_u1_1904_sample_completed_] 
        $T[EQ_u64_u1_1904_update_start_] 
        $T[EQ_u64_u1_1904_update_completed_] 
        // iNsTr_126
        $T[R_iNsTr_126_1901_sample_start_] 
        $T[R_iNsTr_126_1901_sample_completed_] 
        $T[R_iNsTr_126_1901_update_start_] 
        $T[R_iNsTr_126_1901_update_completed_] 
        // implicit reference
        R_iNsTr_126_1901_sample_start_ <-& (AND_u64_u64_1898_update_completed_)
        R_iNsTr_126_1901_sample_completed_ <-& (R_iNsTr_126_1901_sample_start_)
        R_iNsTr_126_1901_update_start_ <-& (R_iNsTr_126_1901_sample_completed_)
        R_iNsTr_126_1901_update_completed_ <-& (R_iNsTr_126_1901_update_start_)
        EQ_u64_u1_1904_sample_start_ <-& (R_iNsTr_126_1901_update_completed_)
        ;;[EQ_u64_u1_1904_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1904_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1904_sample_start_ &-> (EQ_u64_u1_1904_Sample)
        EQ_u64_u1_1904_sample_completed_ <-& (EQ_u64_u1_1904_Sample)
        EQ_u64_u1_1904_sample_completed_ &-> ($null)
        EQ_u64_u1_1904_update_start_ &-> (EQ_u64_u1_1904_Update)
        EQ_u64_u1_1904_update_completed_ <-& (EQ_u64_u1_1904_Update)
        // Target expression
        // (as target) iNsTr_127
        // iNsTr_127
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1889_to_assign_stmt_1905__entry__ |-> (assign_stmt_1889_to_assign_stmt_1905)
      assign_stmt_1889_to_assign_stmt_1905__exit__ <-| (assign_stmt_1889_to_assign_stmt_1905)
      // if-statement  
      //  file prog.aa, line 647
      ;;[if_stmt_1906_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1906__entry__ |-> (if_stmt_1906_dead_link)
      if_stmt_1906__exit__ <-| (if_stmt_1906_dead_link)
      ;;[if_stmt_1906_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1906__entry__ |-> (if_stmt_1906_eval_test)
      $P [R_iNsTr_127_1907_place]
      R_iNsTr_127_1907_place <-| (if_stmt_1906_eval_test)
      ;;[if_stmt_1906_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1906_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_127_1907_place |-> (if_stmt_1906_if_link if_stmt_1906_else_link)
      $P [bb_26_fdiv32x_xexit]
      bb_26_fdiv32x_xexit <-| (if_stmt_1906_if_link)
      $P [bb_26_xx_xthread12]
      bb_26_xx_xthread12 <-| (if_stmt_1906_else_link)
      ::[assign_stmt_1929_to_assign_stmt_1949] 
      {
        // 		iNsTr_107 := (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 652
        // Source expression
        // (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1928_sample_start_] 
        $T[AND_u64_u64_1928_sample_completed_] 
        $T[AND_u64_u64_1928_update_start_] 
        $T[AND_u64_u64_1928_update_completed_] 
        // phitmp20x_xi15x_xin
        $T[R_phitmp20x_xi15x_xin_1925_sample_start_] 
        $T[R_phitmp20x_xi15x_xin_1925_sample_completed_] 
        $T[R_phitmp20x_xi15x_xin_1925_update_start_] 
        $T[R_phitmp20x_xi15x_xin_1925_update_completed_] 
        // implicit reference
        R_phitmp20x_xi15x_xin_1925_sample_start_ <-& ($entry)
        R_phitmp20x_xi15x_xin_1925_sample_completed_ <-& (R_phitmp20x_xi15x_xin_1925_sample_start_)
        R_phitmp20x_xi15x_xin_1925_update_start_ <-& (R_phitmp20x_xi15x_xin_1925_sample_completed_)
        R_phitmp20x_xi15x_xin_1925_update_completed_ <-& (R_phitmp20x_xi15x_xin_1925_update_start_)
        AND_u64_u64_1928_sample_start_ <-& (R_phitmp20x_xi15x_xin_1925_update_completed_)
        ;;[AND_u64_u64_1928_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1928_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1928_sample_start_ &-> (AND_u64_u64_1928_Sample)
        AND_u64_u64_1928_sample_completed_ <-& (AND_u64_u64_1928_Sample)
        AND_u64_u64_1928_sample_completed_ &-> ($null)
        AND_u64_u64_1928_update_start_ &-> (AND_u64_u64_1928_Update)
        AND_u64_u64_1928_update_completed_ <-& (AND_u64_u64_1928_Update)
        // Target expression
        // (as target) iNsTr_107
        // iNsTr_107
        // implicit reference
        // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_107 )
        //  file prog.aa, line 653
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_107 )
        $T[type_cast_1932_sample_start_] 
        $T[type_cast_1932_sample_completed_] 
        $T[type_cast_1932_update_start_] 
        $T[type_cast_1932_update_completed_] 
        // iNsTr_107
        $T[R_iNsTr_107_1931_sample_start_] 
        $T[R_iNsTr_107_1931_sample_completed_] 
        $T[R_iNsTr_107_1931_update_start_] 
        $T[R_iNsTr_107_1931_update_completed_] 
        // implicit reference
        R_iNsTr_107_1931_sample_start_ <-& (AND_u64_u64_1928_update_completed_)
        R_iNsTr_107_1931_sample_completed_ <-& (R_iNsTr_107_1931_sample_start_)
        R_iNsTr_107_1931_update_start_ <-& (R_iNsTr_107_1931_sample_completed_)
        R_iNsTr_107_1931_update_completed_ <-& (R_iNsTr_107_1931_update_start_)
        type_cast_1932_sample_start_ <-& (R_iNsTr_107_1931_update_completed_)
        ;;[type_cast_1932_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1932_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1932_sample_start_ &-> (type_cast_1932_Sample)
        type_cast_1932_sample_completed_ <-& (type_cast_1932_Sample)
        type_cast_1932_sample_completed_ &-> ($null)
        type_cast_1932_update_start_ &-> (type_cast_1932_Update)
        type_cast_1932_update_completed_ <-& (type_cast_1932_Update)
        // Target expression
        // (as target) tmp13x_xi
        // tmp13x_xi
        // implicit reference
        // 		iNsTr_108 := (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
        //  file prog.aa, line 654
        // Source expression
        // (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
        $T[MUL_f64_f64_1938_sample_start_] 
        $T[MUL_f64_f64_1938_sample_completed_] 
        $T[MUL_f64_f64_1938_update_start_] 
        $T[MUL_f64_f64_1938_update_completed_] 
        // tmp13x_xi
        $T[R_tmp13x_xi_1935_sample_start_] 
        $T[R_tmp13x_xi_1935_sample_completed_] 
        $T[R_tmp13x_xi_1935_update_start_] 
        $T[R_tmp13x_xi_1935_update_completed_] 
        // implicit reference
        R_tmp13x_xi_1935_sample_start_ <-& (type_cast_1932_update_completed_)
        R_tmp13x_xi_1935_sample_completed_ <-& (R_tmp13x_xi_1935_sample_start_)
        R_tmp13x_xi_1935_update_start_ <-& (R_tmp13x_xi_1935_sample_completed_)
        R_tmp13x_xi_1935_update_completed_ <-& (R_tmp13x_xi_1935_update_start_)
        MUL_f64_f64_1938_sample_start_ <-& (R_tmp13x_xi_1935_update_completed_)
        ;;[MUL_f64_f64_1938_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f64_f64_1938_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f64_f64_1938_sample_start_ &-> (MUL_f64_f64_1938_Sample)
        MUL_f64_f64_1938_sample_completed_ <-& (MUL_f64_f64_1938_Sample)
        MUL_f64_f64_1938_sample_completed_ &-> ($null)
        MUL_f64_f64_1938_update_start_ &-> (MUL_f64_f64_1938_Update)
        MUL_f64_f64_1938_update_completed_ <-& (MUL_f64_f64_1938_Update)
        // Target expression
        // (as target) iNsTr_108
        // iNsTr_108
        // implicit reference
        // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_108 )
        //  file prog.aa, line 655
        // Source expression
        // ($bitcast ($uint<64>) iNsTr_108 )
        $T[type_cast_1942_sample_start_] 
        $T[type_cast_1942_sample_completed_] 
        $T[type_cast_1942_update_start_] 
        $T[type_cast_1942_update_completed_] 
        // iNsTr_108
        $T[R_iNsTr_108_1941_sample_start_] 
        $T[R_iNsTr_108_1941_sample_completed_] 
        $T[R_iNsTr_108_1941_update_start_] 
        $T[R_iNsTr_108_1941_update_completed_] 
        // implicit reference
        R_iNsTr_108_1941_sample_start_ <-& (MUL_f64_f64_1938_update_completed_)
        R_iNsTr_108_1941_sample_completed_ <-& (R_iNsTr_108_1941_sample_start_)
        R_iNsTr_108_1941_update_start_ <-& (R_iNsTr_108_1941_sample_completed_)
        R_iNsTr_108_1941_update_completed_ <-& (R_iNsTr_108_1941_update_start_)
        type_cast_1942_sample_start_ <-& (R_iNsTr_108_1941_update_completed_)
        ;;[type_cast_1942_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1942_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1942_sample_start_ &-> (type_cast_1942_Sample)
        type_cast_1942_sample_completed_ <-& (type_cast_1942_Sample)
        type_cast_1942_sample_completed_ &-> ($null)
        type_cast_1942_update_start_ &-> (type_cast_1942_Update)
        type_cast_1942_update_completed_ <-& (type_cast_1942_Update)
        // Target expression
        // (as target) phitmp19x_xi
        // phitmp19x_xi
        // implicit reference
        // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        //  file prog.aa, line 656
        // Source expression
        // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
        $T[AND_u64_u64_1948_sample_start_] 
        $T[AND_u64_u64_1948_sample_completed_] 
        $T[AND_u64_u64_1948_update_start_] 
        $T[AND_u64_u64_1948_update_completed_] 
        // phitmp19x_xi
        $T[R_phitmp19x_xi_1945_sample_start_] 
        $T[R_phitmp19x_xi_1945_sample_completed_] 
        $T[R_phitmp19x_xi_1945_update_start_] 
        $T[R_phitmp19x_xi_1945_update_completed_] 
        // implicit reference
        R_phitmp19x_xi_1945_sample_start_ <-& (type_cast_1942_update_completed_)
        R_phitmp19x_xi_1945_sample_completed_ <-& (R_phitmp19x_xi_1945_sample_start_)
        R_phitmp19x_xi_1945_update_start_ <-& (R_phitmp19x_xi_1945_sample_completed_)
        R_phitmp19x_xi_1945_update_completed_ <-& (R_phitmp19x_xi_1945_update_start_)
        AND_u64_u64_1948_sample_start_ <-& (R_phitmp19x_xi_1945_update_completed_)
        ;;[AND_u64_u64_1948_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1948_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1948_sample_start_ &-> (AND_u64_u64_1948_Sample)
        AND_u64_u64_1948_sample_completed_ <-& (AND_u64_u64_1948_Sample)
        AND_u64_u64_1948_sample_completed_ &-> ($null)
        AND_u64_u64_1948_update_start_ &-> (AND_u64_u64_1948_Update)
        AND_u64_u64_1948_update_completed_ <-& (AND_u64_u64_1948_Update)
        // Target expression
        // (as target) phitmp21x_xi
        // phitmp21x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1929_to_assign_stmt_1949__entry__ |-> (assign_stmt_1929_to_assign_stmt_1949)
      assign_stmt_1929_to_assign_stmt_1949__exit__ <-| (assign_stmt_1929_to_assign_stmt_1949)
      ::[assign_stmt_1971_to_assign_stmt_1984] 
      {
        // 		iNsTr_114 := (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        //  file prog.aa, line 663
        // Source expression
        // (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
        $T[AND_u64_u64_1970_sample_start_] 
        $T[AND_u64_u64_1970_sample_completed_] 
        $T[AND_u64_u64_1970_update_start_] 
        $T[AND_u64_u64_1970_update_completed_] 
        // flux_addx_x0911
        $T[R_flux_addx_x0911_1967_sample_start_] 
        $T[R_flux_addx_x0911_1967_sample_completed_] 
        $T[R_flux_addx_x0911_1967_update_start_] 
        $T[R_flux_addx_x0911_1967_update_completed_] 
        // implicit reference
        R_flux_addx_x0911_1967_sample_start_ <-& ($entry)
        R_flux_addx_x0911_1967_sample_completed_ <-& (R_flux_addx_x0911_1967_sample_start_)
        R_flux_addx_x0911_1967_update_start_ <-& (R_flux_addx_x0911_1967_sample_completed_)
        R_flux_addx_x0911_1967_update_completed_ <-& (R_flux_addx_x0911_1967_update_start_)
        AND_u64_u64_1970_sample_start_ <-& (R_flux_addx_x0911_1967_update_completed_)
        ;;[AND_u64_u64_1970_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u64_u64_1970_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u64_u64_1970_sample_start_ &-> (AND_u64_u64_1970_Sample)
        AND_u64_u64_1970_sample_completed_ <-& (AND_u64_u64_1970_Sample)
        AND_u64_u64_1970_sample_completed_ &-> ($null)
        AND_u64_u64_1970_update_start_ &-> (AND_u64_u64_1970_Update)
        AND_u64_u64_1970_update_completed_ <-& (AND_u64_u64_1970_Update)
        // Target expression
        // (as target) iNsTr_114
        // iNsTr_114
        // implicit reference
        // 		iNsTr_115 := (iNsTr_113 | iNsTr_114)
        //  file prog.aa, line 664
        // Source expression
        // (iNsTr_113 | iNsTr_114)
        $T[OR_u64_u64_1975_sample_start_] 
        $T[OR_u64_u64_1975_sample_completed_] 
        $T[OR_u64_u64_1975_update_start_] 
        $T[OR_u64_u64_1975_update_completed_] 
        // iNsTr_113
        $T[R_iNsTr_113_1973_sample_start_] 
        $T[R_iNsTr_113_1973_sample_completed_] 
        $T[R_iNsTr_113_1973_update_start_] 
        $T[R_iNsTr_113_1973_update_completed_] 
        // implicit reference
        R_iNsTr_113_1973_sample_start_ <-& ($entry)
        R_iNsTr_113_1973_sample_completed_ <-& (R_iNsTr_113_1973_sample_start_)
        R_iNsTr_113_1973_update_start_ <-& (R_iNsTr_113_1973_sample_completed_)
        R_iNsTr_113_1973_update_completed_ <-& (R_iNsTr_113_1973_update_start_)
        // iNsTr_114
        $T[R_iNsTr_114_1974_sample_start_] 
        $T[R_iNsTr_114_1974_sample_completed_] 
        $T[R_iNsTr_114_1974_update_start_] 
        $T[R_iNsTr_114_1974_update_completed_] 
        // implicit reference
        R_iNsTr_114_1974_sample_start_ <-& (AND_u64_u64_1970_update_completed_)
        R_iNsTr_114_1974_sample_completed_ <-& (R_iNsTr_114_1974_sample_start_)
        R_iNsTr_114_1974_update_start_ <-& (R_iNsTr_114_1974_sample_completed_)
        R_iNsTr_114_1974_update_completed_ <-& (R_iNsTr_114_1974_update_start_)
        OR_u64_u64_1975_sample_start_ <-& (R_iNsTr_113_1973_update_completed_)
        OR_u64_u64_1975_sample_start_ <-& (R_iNsTr_114_1974_update_completed_)
        ;;[OR_u64_u64_1975_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u64_u64_1975_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u64_u64_1975_sample_start_ &-> (OR_u64_u64_1975_Sample)
        OR_u64_u64_1975_sample_completed_ <-& (OR_u64_u64_1975_Sample)
        OR_u64_u64_1975_sample_completed_ &-> ($null)
        OR_u64_u64_1975_update_start_ &-> (OR_u64_u64_1975_Update)
        OR_u64_u64_1975_update_completed_ <-& (OR_u64_u64_1975_Update)
        // Target expression
        // (as target) iNsTr_115
        // iNsTr_115
        // implicit reference
        // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_115 )
        //  file prog.aa, line 665
        // Source expression
        // ($bitcast ($float<11,52>) iNsTr_115 )
        $T[type_cast_1979_sample_start_] 
        $T[type_cast_1979_sample_completed_] 
        $T[type_cast_1979_update_start_] 
        $T[type_cast_1979_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_1978_sample_start_] 
        $T[R_iNsTr_115_1978_sample_completed_] 
        $T[R_iNsTr_115_1978_update_start_] 
        $T[R_iNsTr_115_1978_update_completed_] 
        // implicit reference
        R_iNsTr_115_1978_sample_start_ <-& (OR_u64_u64_1975_update_completed_)
        R_iNsTr_115_1978_sample_completed_ <-& (R_iNsTr_115_1978_sample_start_)
        R_iNsTr_115_1978_update_start_ <-& (R_iNsTr_115_1978_sample_completed_)
        R_iNsTr_115_1978_update_completed_ <-& (R_iNsTr_115_1978_update_start_)
        type_cast_1979_sample_start_ <-& (R_iNsTr_115_1978_update_completed_)
        ;;[type_cast_1979_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1979_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1979_sample_start_ &-> (type_cast_1979_Sample)
        type_cast_1979_sample_completed_ <-& (type_cast_1979_Sample)
        type_cast_1979_sample_completed_ &-> ($null)
        type_cast_1979_update_start_ &-> (type_cast_1979_Update)
        type_cast_1979_update_completed_ <-& (type_cast_1979_Update)
        // Target expression
        // (as target) tmp4x_xi
        // tmp4x_xi
        // implicit reference
        // 		iNsTr_116 := ($cast ($float<8,23>) tmp4x_xi )
        //  file prog.aa, line 666
        // Source expression
        // ($cast ($float<8,23>) tmp4x_xi )
        $T[type_cast_1983_sample_start_] 
        $T[type_cast_1983_sample_completed_] 
        $T[type_cast_1983_update_start_] 
        $T[type_cast_1983_update_completed_] 
        // tmp4x_xi
        $T[R_tmp4x_xi_1982_sample_start_] 
        $T[R_tmp4x_xi_1982_sample_completed_] 
        $T[R_tmp4x_xi_1982_update_start_] 
        $T[R_tmp4x_xi_1982_update_completed_] 
        // implicit reference
        R_tmp4x_xi_1982_sample_start_ <-& (type_cast_1979_update_completed_)
        R_tmp4x_xi_1982_sample_completed_ <-& (R_tmp4x_xi_1982_sample_start_)
        R_tmp4x_xi_1982_update_start_ <-& (R_tmp4x_xi_1982_sample_completed_)
        R_tmp4x_xi_1982_update_completed_ <-& (R_tmp4x_xi_1982_update_start_)
        type_cast_1983_sample_start_ <-& (R_tmp4x_xi_1982_update_completed_)
        ;;[type_cast_1983_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1983_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1983_sample_start_ &-> (type_cast_1983_Sample)
        type_cast_1983_sample_completed_ <-& (type_cast_1983_Sample)
        type_cast_1983_sample_completed_ &-> ($null)
        type_cast_1983_update_start_ &-> (type_cast_1983_Update)
        type_cast_1983_update_completed_ <-& (type_cast_1983_Update)
        // Target expression
        // (as target) iNsTr_116
        // iNsTr_116
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1971_to_assign_stmt_1984__entry__ |-> (assign_stmt_1971_to_assign_stmt_1984)
      assign_stmt_1971_to_assign_stmt_1984__exit__ <-| (assign_stmt_1971_to_assign_stmt_1984)
      ::[assign_stmt_1987] 
      {
        // 		out_data1 := iNsTr_116
        //  file prog.aa, line 667
        // Source expression
        // iNsTr_116
        $T[R_iNsTr_116_1986_sample_start_] 
        $T[R_iNsTr_116_1986_sample_completed_] 
        $T[R_iNsTr_116_1986_update_start_] 
        $T[R_iNsTr_116_1986_update_completed_] 
        // implicit reference
        R_iNsTr_116_1986_sample_start_ <-& ($entry)
        R_iNsTr_116_1986_sample_completed_ <-& (R_iNsTr_116_1986_sample_start_)
        R_iNsTr_116_1986_update_start_ <-& (R_iNsTr_116_1986_sample_completed_)
        R_iNsTr_116_1986_update_completed_ <-& (R_iNsTr_116_1986_update_start_)
        // Target expression
        // (as target) out_data1
        $T[WPIPE_out_data1_1985_sample_start_] 
        $T[WPIPE_out_data1_1985_sample_completed_] 
        $T[WPIPE_out_data1_1985_update_start_] 
        $T[WPIPE_out_data1_1985_update_completed_] 
        ;;[WPIPE_out_data1_1985_Sample] 
        {
          // pipe write sample-start out_data1
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data1_1985_Update] 
        {
          // pipe write update (complete) out_data1
          $T [req] $T [ack] 
        }
        WPIPE_out_data1_1985_sample_start_ &-> (WPIPE_out_data1_1985_Sample)
        WPIPE_out_data1_1985_sample_completed_ <-& (WPIPE_out_data1_1985_Sample)
        WPIPE_out_data1_1985_sample_completed_ &-> ($null)
        WPIPE_out_data1_1985_update_start_ &-> (WPIPE_out_data1_1985_Update)
        WPIPE_out_data1_1985_update_completed_ <-& (WPIPE_out_data1_1985_Update)
        WPIPE_out_data1_1985_sample_start_ <-& (R_iNsTr_116_1986_update_completed_)
        // barrier: 		out_data1 := iNsTr_116
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data1
      }
      assign_stmt_1987__entry__ |-> (assign_stmt_1987)
      assign_stmt_1987__exit__ <-| (assign_stmt_1987)
      ::[assign_stmt_1990] 
      {
        // 		out_data2 := iNsTr_87
        //  file prog.aa, line 668
        // Source expression
        // iNsTr_87
        $T[R_iNsTr_87_1989_sample_start_] 
        $T[R_iNsTr_87_1989_sample_completed_] 
        $T[R_iNsTr_87_1989_update_start_] 
        $T[R_iNsTr_87_1989_update_completed_] 
        // implicit reference
        R_iNsTr_87_1989_sample_start_ <-& ($entry)
        R_iNsTr_87_1989_sample_completed_ <-& (R_iNsTr_87_1989_sample_start_)
        R_iNsTr_87_1989_update_start_ <-& (R_iNsTr_87_1989_sample_completed_)
        R_iNsTr_87_1989_update_completed_ <-& (R_iNsTr_87_1989_update_start_)
        // Target expression
        // (as target) out_data2
        $T[WPIPE_out_data2_1988_sample_start_] 
        $T[WPIPE_out_data2_1988_sample_completed_] 
        $T[WPIPE_out_data2_1988_update_start_] 
        $T[WPIPE_out_data2_1988_update_completed_] 
        ;;[WPIPE_out_data2_1988_Sample] 
        {
          // pipe write sample-start out_data2
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data2_1988_Update] 
        {
          // pipe write update (complete) out_data2
          $T [req] $T [ack] 
        }
        WPIPE_out_data2_1988_sample_start_ &-> (WPIPE_out_data2_1988_Sample)
        WPIPE_out_data2_1988_sample_completed_ <-& (WPIPE_out_data2_1988_Sample)
        WPIPE_out_data2_1988_sample_completed_ &-> ($null)
        WPIPE_out_data2_1988_update_start_ &-> (WPIPE_out_data2_1988_Update)
        WPIPE_out_data2_1988_update_completed_ <-& (WPIPE_out_data2_1988_Update)
        WPIPE_out_data2_1988_sample_start_ <-& (R_iNsTr_87_1989_update_completed_)
        // barrier: 		out_data2 := iNsTr_87
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data2
      }
      assign_stmt_1990__entry__ |-> (assign_stmt_1990)
      assign_stmt_1990__exit__ <-| (assign_stmt_1990)
      ::[assign_stmt_1993] 
      {
        // 		out_data3 := iNsTr_42
        //  file prog.aa, line 669
        // Source expression
        // iNsTr_42
        $T[R_iNsTr_42_1992_sample_start_] 
        $T[R_iNsTr_42_1992_sample_completed_] 
        $T[R_iNsTr_42_1992_update_start_] 
        $T[R_iNsTr_42_1992_update_completed_] 
        // implicit reference
        R_iNsTr_42_1992_sample_start_ <-& ($entry)
        R_iNsTr_42_1992_sample_completed_ <-& (R_iNsTr_42_1992_sample_start_)
        R_iNsTr_42_1992_update_start_ <-& (R_iNsTr_42_1992_sample_completed_)
        R_iNsTr_42_1992_update_completed_ <-& (R_iNsTr_42_1992_update_start_)
        // Target expression
        // (as target) out_data3
        $T[WPIPE_out_data3_1991_sample_start_] 
        $T[WPIPE_out_data3_1991_sample_completed_] 
        $T[WPIPE_out_data3_1991_update_start_] 
        $T[WPIPE_out_data3_1991_update_completed_] 
        ;;[WPIPE_out_data3_1991_Sample] 
        {
          // pipe write sample-start out_data3
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data3_1991_Update] 
        {
          // pipe write update (complete) out_data3
          $T [req] $T [ack] 
        }
        WPIPE_out_data3_1991_sample_start_ &-> (WPIPE_out_data3_1991_Sample)
        WPIPE_out_data3_1991_sample_completed_ <-& (WPIPE_out_data3_1991_Sample)
        WPIPE_out_data3_1991_sample_completed_ &-> ($null)
        WPIPE_out_data3_1991_update_start_ &-> (WPIPE_out_data3_1991_Update)
        WPIPE_out_data3_1991_update_completed_ <-& (WPIPE_out_data3_1991_Update)
        WPIPE_out_data3_1991_sample_start_ <-& (R_iNsTr_42_1992_update_completed_)
        // barrier: 		out_data3 := iNsTr_42
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data3
      }
      assign_stmt_1993__entry__ |-> (assign_stmt_1993)
      assign_stmt_1993__exit__ <-| (assign_stmt_1993)
      ::[assign_stmt_1996] 
      {
        // 		out_data4 := iNsTr_40
        //  file prog.aa, line 670
        // Source expression
        // iNsTr_40
        $T[R_iNsTr_40_1995_sample_start_] 
        $T[R_iNsTr_40_1995_sample_completed_] 
        $T[R_iNsTr_40_1995_update_start_] 
        $T[R_iNsTr_40_1995_update_completed_] 
        // implicit reference
        R_iNsTr_40_1995_sample_start_ <-& ($entry)
        R_iNsTr_40_1995_sample_completed_ <-& (R_iNsTr_40_1995_sample_start_)
        R_iNsTr_40_1995_update_start_ <-& (R_iNsTr_40_1995_sample_completed_)
        R_iNsTr_40_1995_update_completed_ <-& (R_iNsTr_40_1995_update_start_)
        // Target expression
        // (as target) out_data4
        $T[WPIPE_out_data4_1994_sample_start_] 
        $T[WPIPE_out_data4_1994_sample_completed_] 
        $T[WPIPE_out_data4_1994_update_start_] 
        $T[WPIPE_out_data4_1994_update_completed_] 
        ;;[WPIPE_out_data4_1994_Sample] 
        {
          // pipe write sample-start out_data4
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data4_1994_Update] 
        {
          // pipe write update (complete) out_data4
          $T [req] $T [ack] 
        }
        WPIPE_out_data4_1994_sample_start_ &-> (WPIPE_out_data4_1994_Sample)
        WPIPE_out_data4_1994_sample_completed_ <-& (WPIPE_out_data4_1994_Sample)
        WPIPE_out_data4_1994_sample_completed_ &-> ($null)
        WPIPE_out_data4_1994_update_start_ &-> (WPIPE_out_data4_1994_Update)
        WPIPE_out_data4_1994_update_completed_ <-& (WPIPE_out_data4_1994_Update)
        WPIPE_out_data4_1994_sample_start_ <-& (R_iNsTr_40_1995_update_completed_)
        // barrier: 		out_data4 := iNsTr_40
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data4
      }
      assign_stmt_1996__entry__ |-> (assign_stmt_1996)
      assign_stmt_1996__exit__ <-| (assign_stmt_1996)
      ::[assign_stmt_2002_to_assign_stmt_2014] 
      {
        // 		phitmp1 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
        //  file prog.aa, line 671
        // Source expression
        // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
        $T[MUL_f32_f32_2001_sample_start_] 
        $T[MUL_f32_f32_2001_sample_completed_] 
        $T[MUL_f32_f32_2001_update_start_] 
        $T[MUL_f32_f32_2001_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1998_sample_start_] 
        $T[R_iNsTr_40_1998_sample_completed_] 
        $T[R_iNsTr_40_1998_update_start_] 
        $T[R_iNsTr_40_1998_update_completed_] 
        // implicit reference
        R_iNsTr_40_1998_sample_start_ <-& ($entry)
        R_iNsTr_40_1998_sample_completed_ <-& (R_iNsTr_40_1998_sample_start_)
        R_iNsTr_40_1998_update_start_ <-& (R_iNsTr_40_1998_sample_completed_)
        R_iNsTr_40_1998_update_completed_ <-& (R_iNsTr_40_1998_update_start_)
        MUL_f32_f32_2001_sample_start_ <-& (R_iNsTr_40_1998_update_completed_)
        ;;[MUL_f32_f32_2001_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2001_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2001_sample_start_ &-> (MUL_f32_f32_2001_Sample)
        MUL_f32_f32_2001_sample_completed_ <-& (MUL_f32_f32_2001_Sample)
        MUL_f32_f32_2001_sample_completed_ &-> ($null)
        MUL_f32_f32_2001_update_start_ &-> (MUL_f32_f32_2001_Update)
        MUL_f32_f32_2001_update_completed_ <-& (MUL_f32_f32_2001_Update)
        // Target expression
        // (as target) phitmp1
        // phitmp1
        // implicit reference
        // 		phitmp2 := (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        //  file prog.aa, line 672
        // Source expression
        // (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        $T[MUL_f32_f32_2007_sample_start_] 
        $T[MUL_f32_f32_2007_sample_completed_] 
        $T[MUL_f32_f32_2007_update_start_] 
        $T[MUL_f32_f32_2007_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_2004_sample_start_] 
        $T[R_iNsTr_2_2004_sample_completed_] 
        $T[R_iNsTr_2_2004_update_start_] 
        $T[R_iNsTr_2_2004_update_completed_] 
        // implicit reference
        R_iNsTr_2_2004_sample_start_ <-& ($entry)
        R_iNsTr_2_2004_sample_completed_ <-& (R_iNsTr_2_2004_sample_start_)
        R_iNsTr_2_2004_update_start_ <-& (R_iNsTr_2_2004_sample_completed_)
        R_iNsTr_2_2004_update_completed_ <-& (R_iNsTr_2_2004_update_start_)
        MUL_f32_f32_2007_sample_start_ <-& (R_iNsTr_2_2004_update_completed_)
        ;;[MUL_f32_f32_2007_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2007_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2007_sample_start_ &-> (MUL_f32_f32_2007_Sample)
        MUL_f32_f32_2007_sample_completed_ <-& (MUL_f32_f32_2007_Sample)
        MUL_f32_f32_2007_sample_completed_ &-> ($null)
        MUL_f32_f32_2007_update_start_ &-> (MUL_f32_f32_2007_Update)
        MUL_f32_f32_2007_update_completed_ <-& (MUL_f32_f32_2007_Update)
        // Target expression
        // (as target) phitmp2
        // phitmp2
        // implicit reference
        // 		phitmp3 := (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
        //  file prog.aa, line 673
        // Source expression
        // (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
        $T[MUL_f32_f32_2013_sample_start_] 
        $T[MUL_f32_f32_2013_sample_completed_] 
        $T[MUL_f32_f32_2013_update_start_] 
        $T[MUL_f32_f32_2013_update_completed_] 
        // phitmp2
        $T[R_phitmp2_2010_sample_start_] 
        $T[R_phitmp2_2010_sample_completed_] 
        $T[R_phitmp2_2010_update_start_] 
        $T[R_phitmp2_2010_update_completed_] 
        // implicit reference
        R_phitmp2_2010_sample_start_ <-& (MUL_f32_f32_2007_update_completed_)
        R_phitmp2_2010_sample_completed_ <-& (R_phitmp2_2010_sample_start_)
        R_phitmp2_2010_update_start_ <-& (R_phitmp2_2010_sample_completed_)
        R_phitmp2_2010_update_completed_ <-& (R_phitmp2_2010_update_start_)
        MUL_f32_f32_2013_sample_start_ <-& (R_phitmp2_2010_update_completed_)
        ;;[MUL_f32_f32_2013_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2013_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2013_sample_start_ &-> (MUL_f32_f32_2013_Sample)
        MUL_f32_f32_2013_sample_completed_ <-& (MUL_f32_f32_2013_Sample)
        MUL_f32_f32_2013_sample_completed_ &-> ($null)
        MUL_f32_f32_2013_update_start_ &-> (MUL_f32_f32_2013_Update)
        MUL_f32_f32_2013_update_completed_ <-& (MUL_f32_f32_2013_Update)
        // Target expression
        // (as target) phitmp3
        // phitmp3
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2002_to_assign_stmt_2014__entry__ |-> (assign_stmt_2002_to_assign_stmt_2014)
      assign_stmt_2002_to_assign_stmt_2014__exit__ <-| (assign_stmt_2002_to_assign_stmt_2014)
      // control-path for merge  
      //  file prog.aa, line 422
      //---------------------   merge statement  file prog.aa, line 422  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1169] 
        {
          ||[phi_stmt_1169_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_42 )
            ;;[type_cast_1175] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1169_req] 
        }
        ;;[phi_stmt_1176] 
        {
          ||[phi_stmt_1176_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp1 )
            ;;[type_cast_1182] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1176_req] 
        }
        ;;[phi_stmt_1183] 
        {
          ||[phi_stmt_1183_sources] 
          {
            // sources for 			$phi int_speed_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_19 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_19 )
            ;;[type_cast_1189] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1183_req] 
        }
        ;;[phi_stmt_1190] 
        {
          ||[phi_stmt_1190_sources] 
          {
            // sources for 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_90 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_90 )
            ;;[type_cast_1196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1190_req] 
        }
        ;;[phi_stmt_1197] 
        {
          ||[phi_stmt_1197_sources] 
          {
            // sources for 			$phi id_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp3 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp3 )
            ;;[type_cast_1203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1197_req] 
        }
        ;;[phi_stmt_1204] 
        {
          ||[phi_stmt_1204_sources] 
          {
            // sources for 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) speed_refx_x0 )
            ;;[type_cast_1210] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1204_req] 
        }
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      ||[fdiv32x_xexit_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1169] 
        {
          ||[phi_stmt_1169_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_42 )
            ;;[type_cast_1175] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1169_req] 
        }
        ;;[phi_stmt_1176] 
        {
          ||[phi_stmt_1176_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp1 )
            ;;[type_cast_1182] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1176_req] 
        }
        ;;[phi_stmt_1183] 
        {
          ||[phi_stmt_1183_sources] 
          {
            // sources for 			$phi int_speed_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_19 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_19 )
            ;;[type_cast_1189] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1183_req] 
        }
        ;;[phi_stmt_1190] 
        {
          ||[phi_stmt_1190_sources] 
          {
            // sources for 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_90 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_90 )
            ;;[type_cast_1196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1190_req] 
        }
        ;;[phi_stmt_1197] 
        {
          ||[phi_stmt_1197_sources] 
          {
            // sources for 			$phi id_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp3 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp3 )
            ;;[type_cast_1203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1197_req] 
        }
        ;;[phi_stmt_1204] 
        {
          ||[phi_stmt_1204_sources] 
          {
            // sources for 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) speed_refx_x0 )
            ;;[type_cast_1210] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1204_req] 
        }
      }
      fdiv32x_xexit_bb_1 |-> (fdiv32x_xexit_bb_1_PhiReq)
      $P [merge_stmt_1168_PhiReqMerge] 
      merge_stmt_1168_PhiReqMerge <-| ( bb_0_bb_1_PhiReq  fdiv32x_xexit_bb_1_PhiReq )
      ||[merge_stmt_1168_PhiAck] 
      {
        $T [phi_stmt_1169_ack] 
        $T [phi_stmt_1176_ack] 
        $T [phi_stmt_1183_ack] 
        $T [phi_stmt_1190_ack] 
        $T [phi_stmt_1197_ack] 
        $T [phi_stmt_1204_ack] 
      }
      merge_stmt_1168_PhiReqMerge |-> (merge_stmt_1168_PhiAck)
      merge_stmt_1168__exit__  <-| (merge_stmt_1168_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 422  --------------------------
      // control-path for merge  
      //  file prog.aa, line 439
      ;;[merge_stmt_1238_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1238__entry__ |-> (merge_stmt_1238_dead_link)
      merge_stmt_1238__exit__ <-| (merge_stmt_1238_dead_link)
      //---------------------   merge statement  file prog.aa, line 439  --------------------------
      ||[bb_1_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_1238_PhiReqMerge] 
      merge_stmt_1238_PhiReqMerge <-| ( bb_1_bb_2_PhiReq )
      ||[merge_stmt_1238_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1238_PhiReqMerge |-> (merge_stmt_1238_PhiAck)
      merge_stmt_1238__exit__  <-| (merge_stmt_1238_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 439  --------------------------
      // control-path for merge  
      //  file prog.aa, line 444
      //---------------------   merge statement  file prog.aa, line 444  --------------------------
      ||[bb_1_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_3 |-> (bb_1_bb_3_PhiReq)
      $P [merge_stmt_1246_PhiReqMerge] 
      merge_stmt_1246_PhiReqMerge <-| ( bb_1_bb_3_PhiReq )
      ||[merge_stmt_1246_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1246_PhiReqMerge |-> (merge_stmt_1246_PhiAck)
      merge_stmt_1246__exit__  <-| (merge_stmt_1246_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 444  --------------------------
      // control-path for merge  
      //  file prog.aa, line 450
      ;;[merge_stmt_1258_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1258__entry__ |-> (merge_stmt_1258_dead_link)
      merge_stmt_1258__exit__ <-| (merge_stmt_1258_dead_link)
      //---------------------   merge statement  file prog.aa, line 450  --------------------------
      ||[bb_3_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_1258_PhiReqMerge] 
      merge_stmt_1258_PhiReqMerge <-| ( bb_3_bb_4_PhiReq )
      ||[merge_stmt_1258_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1258_PhiReqMerge |-> (merge_stmt_1258_PhiAck)
      merge_stmt_1258__exit__  <-| (merge_stmt_1258_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 450  --------------------------
      // control-path for merge  
      //  file prog.aa, line 455
      //---------------------   merge statement  file prog.aa, line 455  --------------------------
      ||[bb_2_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1267] 
        {
          ||[phi_stmt_1267_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_13 )
            ;;[type_cast_1270] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1272] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1274] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1267_req] 
        }
      }
      bb_2_bb_5 |-> (bb_2_bb_5_PhiReq)
      ||[bb_3_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1267] 
        {
          ||[phi_stmt_1267_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_13 )
            ;;[type_cast_1270] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1272] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1274] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1267_req] 
        }
      }
      bb_3_bb_5 |-> (bb_3_bb_5_PhiReq)
      ||[bb_4_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1267] 
        {
          ||[phi_stmt_1267_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_13 )
            ;;[type_cast_1270] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1272] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1274] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1267_req] 
        }
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_1266_PhiReqMerge] 
      merge_stmt_1266_PhiReqMerge <-| ( bb_2_bb_5_PhiReq  bb_3_bb_5_PhiReq  bb_4_bb_5_PhiReq )
      ||[merge_stmt_1266_PhiAck] 
      {
        $T [phi_stmt_1267_ack] 
      }
      merge_stmt_1266_PhiReqMerge |-> (merge_stmt_1266_PhiAck)
      merge_stmt_1266__exit__  <-| (merge_stmt_1266_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 455  --------------------------
      // control-path for merge  
      //  file prog.aa, line 467
      ;;[merge_stmt_1314_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1314__entry__ |-> (merge_stmt_1314_dead_link)
      merge_stmt_1314__exit__ <-| (merge_stmt_1314_dead_link)
      //---------------------   merge statement  file prog.aa, line 467  --------------------------
      ||[bb_5_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bb_6 |-> (bb_5_bb_6_PhiReq)
      $P [merge_stmt_1314_PhiReqMerge] 
      merge_stmt_1314_PhiReqMerge <-| ( bb_5_bb_6_PhiReq )
      ||[merge_stmt_1314_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1314_PhiReqMerge |-> (merge_stmt_1314_PhiAck)
      merge_stmt_1314__exit__  <-| (merge_stmt_1314_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 467  --------------------------
      // control-path for merge  
      //  file prog.aa, line 473
      ;;[merge_stmt_1327_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1327__entry__ |-> (merge_stmt_1327_dead_link)
      merge_stmt_1327__exit__ <-| (merge_stmt_1327_dead_link)
      //---------------------   merge statement  file prog.aa, line 473  --------------------------
      ||[bb_6_bb_7_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_bb_7 |-> (bb_6_bb_7_PhiReq)
      $P [merge_stmt_1327_PhiReqMerge] 
      merge_stmt_1327_PhiReqMerge <-| ( bb_6_bb_7_PhiReq )
      ||[merge_stmt_1327_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1327_PhiReqMerge |-> (merge_stmt_1327_PhiAck)
      merge_stmt_1327__exit__  <-| (merge_stmt_1327_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 473  --------------------------
      // control-path for merge  
      //  file prog.aa, line 477
      //---------------------   merge statement  file prog.aa, line 477  --------------------------
      ||[bb_5_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1330] 
        {
          ||[phi_stmt_1330_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_20 )
            ;;[type_cast_1333] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1330_req] 
        }
      }
      bb_5_bb_8 |-> (bb_5_bb_8_PhiReq)
      ||[bb_6_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1330] 
        {
          ||[phi_stmt_1330_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_20 )
            ;;[type_cast_1333] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1330_req] 
        }
      }
      bb_6_bb_8 |-> (bb_6_bb_8_PhiReq)
      ||[bb_7_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1330] 
        {
          ||[phi_stmt_1330_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_20 )
            ;;[type_cast_1333] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1330_req] 
        }
      }
      bb_7_bb_8 |-> (bb_7_bb_8_PhiReq)
      $P [merge_stmt_1329_PhiReqMerge] 
      merge_stmt_1329_PhiReqMerge <-| ( bb_5_bb_8_PhiReq  bb_6_bb_8_PhiReq  bb_7_bb_8_PhiReq )
      ||[merge_stmt_1329_PhiAck] 
      {
        $T [phi_stmt_1330_ack] 
      }
      merge_stmt_1329_PhiReqMerge |-> (merge_stmt_1329_PhiAck)
      merge_stmt_1329__exit__  <-| (merge_stmt_1329_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 477  --------------------------
      // control-path for merge  
      //  file prog.aa, line 486
      ;;[merge_stmt_1364_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1364__entry__ |-> (merge_stmt_1364_dead_link)
      merge_stmt_1364__exit__ <-| (merge_stmt_1364_dead_link)
      //---------------------   merge statement  file prog.aa, line 486  --------------------------
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_1364_PhiReqMerge] 
      merge_stmt_1364_PhiReqMerge <-| ( bb_8_bb_9_PhiReq )
      ||[merge_stmt_1364_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1364_PhiReqMerge |-> (merge_stmt_1364_PhiAck)
      merge_stmt_1364__exit__  <-| (merge_stmt_1364_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 486  --------------------------
      // control-path for merge  
      //  file prog.aa, line 492
      ;;[merge_stmt_1377_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1377__entry__ |-> (merge_stmt_1377_dead_link)
      merge_stmt_1377__exit__ <-| (merge_stmt_1377_dead_link)
      //---------------------   merge statement  file prog.aa, line 492  --------------------------
      ||[bb_9_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_9_bb_10 |-> (bb_9_bb_10_PhiReq)
      $P [merge_stmt_1377_PhiReqMerge] 
      merge_stmt_1377_PhiReqMerge <-| ( bb_9_bb_10_PhiReq )
      ||[merge_stmt_1377_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1377_PhiReqMerge |-> (merge_stmt_1377_PhiAck)
      merge_stmt_1377__exit__  <-| (merge_stmt_1377_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 492  --------------------------
      // control-path for merge  
      //  file prog.aa, line 499
      //---------------------   merge statement  file prog.aa, line 499  --------------------------
      ||[bb_10_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1394] 
        {
          ||[phi_stmt_1394_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp6 )
            ;;[type_cast_1397] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1394_req] 
        }
      }
      bb_10_bb_11 |-> (bb_10_bb_11_PhiReq)
      ||[bb_8_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1394] 
        {
          ||[phi_stmt_1394_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp6 )
            ;;[type_cast_1397] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1394_req] 
        }
      }
      bb_8_bb_11 |-> (bb_8_bb_11_PhiReq)
      ||[bb_9_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1394] 
        {
          ||[phi_stmt_1394_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp6 )
            ;;[type_cast_1397] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1394_req] 
        }
      }
      bb_9_bb_11 |-> (bb_9_bb_11_PhiReq)
      $P [merge_stmt_1393_PhiReqMerge] 
      merge_stmt_1393_PhiReqMerge <-| ( bb_10_bb_11_PhiReq  bb_8_bb_11_PhiReq  bb_9_bb_11_PhiReq )
      ||[merge_stmt_1393_PhiAck] 
      {
        $T [phi_stmt_1394_ack] 
      }
      merge_stmt_1393_PhiReqMerge |-> (merge_stmt_1393_PhiAck)
      merge_stmt_1393__exit__  <-| (merge_stmt_1393_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 499  --------------------------
      // control-path for merge  
      //  file prog.aa, line 507
      ;;[merge_stmt_1421_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1421__entry__ |-> (merge_stmt_1421_dead_link)
      merge_stmt_1421__exit__ <-| (merge_stmt_1421_dead_link)
      //---------------------   merge statement  file prog.aa, line 507  --------------------------
      ||[bb_11_bb_12_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_11_bb_12 |-> (bb_11_bb_12_PhiReq)
      $P [merge_stmt_1421_PhiReqMerge] 
      merge_stmt_1421_PhiReqMerge <-| ( bb_11_bb_12_PhiReq )
      ||[merge_stmt_1421_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1421_PhiReqMerge |-> (merge_stmt_1421_PhiAck)
      merge_stmt_1421__exit__  <-| (merge_stmt_1421_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 507  --------------------------
      // control-path for merge  
      //  file prog.aa, line 513
      ;;[merge_stmt_1434_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1434__entry__ |-> (merge_stmt_1434_dead_link)
      merge_stmt_1434__exit__ <-| (merge_stmt_1434_dead_link)
      //---------------------   merge statement  file prog.aa, line 513  --------------------------
      ||[bb_12_bb_13_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_12_bb_13 |-> (bb_12_bb_13_PhiReq)
      $P [merge_stmt_1434_PhiReqMerge] 
      merge_stmt_1434_PhiReqMerge <-| ( bb_12_bb_13_PhiReq )
      ||[merge_stmt_1434_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1434_PhiReqMerge |-> (merge_stmt_1434_PhiAck)
      merge_stmt_1434__exit__  <-| (merge_stmt_1434_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 513  --------------------------
      // control-path for merge  
      //  file prog.aa, line 520
      //---------------------   merge statement  file prog.aa, line 520  --------------------------
      ||[bb_12_bb_14_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_12_bb_14 |-> (bb_12_bb_14_PhiReq)
      $P [merge_stmt_1454_PhiReqMerge] 
      merge_stmt_1454_PhiReqMerge <-| ( bb_12_bb_14_PhiReq )
      ||[merge_stmt_1454_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1454_PhiReqMerge |-> (merge_stmt_1454_PhiAck)
      merge_stmt_1454__exit__  <-| (merge_stmt_1454_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 520  --------------------------
      // control-path for merge  
      //  file prog.aa, line 526
      ;;[merge_stmt_1467_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1467__entry__ |-> (merge_stmt_1467_dead_link)
      merge_stmt_1467__exit__ <-| (merge_stmt_1467_dead_link)
      //---------------------   merge statement  file prog.aa, line 526  --------------------------
      ||[bb_14_bb_15_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_14_bb_15 |-> (bb_14_bb_15_PhiReq)
      $P [merge_stmt_1467_PhiReqMerge] 
      merge_stmt_1467_PhiReqMerge <-| ( bb_14_bb_15_PhiReq )
      ||[merge_stmt_1467_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1467_PhiReqMerge |-> (merge_stmt_1467_PhiAck)
      merge_stmt_1467__exit__  <-| (merge_stmt_1467_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 526  --------------------------
      // control-path for merge  
      //  file prog.aa, line 533
      //---------------------   merge statement  file prog.aa, line 533  --------------------------
      ||[bb_14_bb_16_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_14_bb_16 |-> (bb_14_bb_16_PhiReq)
      $P [merge_stmt_1487_PhiReqMerge] 
      merge_stmt_1487_PhiReqMerge <-| ( bb_14_bb_16_PhiReq )
      ||[merge_stmt_1487_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1487_PhiReqMerge |-> (merge_stmt_1487_PhiAck)
      merge_stmt_1487__exit__  <-| (merge_stmt_1487_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 533  --------------------------
      // control-path for merge  
      //  file prog.aa, line 540
      //---------------------   merge statement  file prog.aa, line 540  --------------------------
      ||[bb_11_bb_17_PhiReq] 
      {
        ;;[phi_stmt_1508] 
        {
          ||[phi_stmt_1508_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_54 )
            ;;[type_cast_1511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_81 )
            ;;[type_cast_1513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_77 )
            ;;[type_cast_1515] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1508_req] 
        }
      }
      bb_11_bb_17 |-> (bb_11_bb_17_PhiReq)
      ||[bb_13_bb_17_PhiReq] 
      {
        ;;[phi_stmt_1508] 
        {
          ||[phi_stmt_1508_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_54 )
            ;;[type_cast_1511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_81 )
            ;;[type_cast_1513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_77 )
            ;;[type_cast_1515] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1508_req] 
        }
      }
      bb_13_bb_17 |-> (bb_13_bb_17_PhiReq)
      ||[bb_15_bb_17_PhiReq] 
      {
        ;;[phi_stmt_1508] 
        {
          ||[phi_stmt_1508_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_54 )
            ;;[type_cast_1511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_81 )
            ;;[type_cast_1513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_77 )
            ;;[type_cast_1515] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1508_req] 
        }
      }
      bb_15_bb_17 |-> (bb_15_bb_17_PhiReq)
      ||[bb_16_bb_17_PhiReq] 
      {
        ;;[phi_stmt_1508] 
        {
          ||[phi_stmt_1508_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_54 )
            ;;[type_cast_1511] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_81 )
            ;;[type_cast_1513] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_77 )
            ;;[type_cast_1515] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1508_req] 
        }
      }
      bb_16_bb_17 |-> (bb_16_bb_17_PhiReq)
      $P [merge_stmt_1507_PhiReqMerge] 
      merge_stmt_1507_PhiReqMerge <-| ( bb_11_bb_17_PhiReq  bb_13_bb_17_PhiReq  bb_15_bb_17_PhiReq  bb_16_bb_17_PhiReq )
      ||[merge_stmt_1507_PhiAck] 
      {
        $T [phi_stmt_1508_ack] 
      }
      merge_stmt_1507_PhiReqMerge |-> (merge_stmt_1507_PhiAck)
      merge_stmt_1507__exit__  <-| (merge_stmt_1507_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 540  --------------------------
      // control-path for merge  
      //  file prog.aa, line 555
      ;;[merge_stmt_1574_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1574__entry__ |-> (merge_stmt_1574_dead_link)
      merge_stmt_1574__exit__ <-| (merge_stmt_1574_dead_link)
      //---------------------   merge statement  file prog.aa, line 555  --------------------------
      ||[bb_17_bb_18_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_17_bb_18 |-> (bb_17_bb_18_PhiReq)
      $P [merge_stmt_1574_PhiReqMerge] 
      merge_stmt_1574_PhiReqMerge <-| ( bb_17_bb_18_PhiReq )
      ||[merge_stmt_1574_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1574_PhiReqMerge |-> (merge_stmt_1574_PhiAck)
      merge_stmt_1574__exit__  <-| (merge_stmt_1574_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 555  --------------------------
      // control-path for merge  
      //  file prog.aa, line 564
      //---------------------   merge statement  file prog.aa, line 564  --------------------------
      ||[bb_17_bb_19_PhiReq] 
      {
        ;;[phi_stmt_1606] 
        {
          ||[phi_stmt_1606_sources] 
          {
            // sources for 			$phi iNsTr_56 := 			  ($cast ($uint<64>) phitmp20x_xix_xi ) $on bb_18_bb_19			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_17_bb_19 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xix_xi )
            ;;[type_cast_1609] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1606_req] 
        }
      }
      bb_17_bb_19 |-> (bb_17_bb_19_PhiReq)
      ||[bb_18_bb_19_PhiReq] 
      {
        ;;[phi_stmt_1606] 
        {
          ||[phi_stmt_1606_sources] 
          {
            // sources for 			$phi iNsTr_56 := 			  ($cast ($uint<64>) phitmp20x_xix_xi ) $on bb_18_bb_19			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_17_bb_19 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xix_xi )
            ;;[type_cast_1609] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1606_req] 
        }
      }
      bb_18_bb_19 |-> (bb_18_bb_19_PhiReq)
      $P [merge_stmt_1605_PhiReqMerge] 
      merge_stmt_1605_PhiReqMerge <-| ( bb_17_bb_19_PhiReq  bb_18_bb_19_PhiReq )
      ||[merge_stmt_1605_PhiAck] 
      {
        $T [phi_stmt_1606_ack] 
      }
      merge_stmt_1605_PhiReqMerge |-> (merge_stmt_1605_PhiAck)
      merge_stmt_1605__exit__  <-| (merge_stmt_1605_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 564  --------------------------
      // control-path for merge  
      //  file prog.aa, line 586
      ;;[merge_stmt_1707_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1707__entry__ |-> (merge_stmt_1707_dead_link)
      merge_stmt_1707__exit__ <-| (merge_stmt_1707_dead_link)
      //---------------------   merge statement  file prog.aa, line 586  --------------------------
      ||[bb_19_bb_20_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_19_bb_20 |-> (bb_19_bb_20_PhiReq)
      $P [merge_stmt_1707_PhiReqMerge] 
      merge_stmt_1707_PhiReqMerge <-| ( bb_19_bb_20_PhiReq )
      ||[merge_stmt_1707_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1707_PhiReqMerge |-> (merge_stmt_1707_PhiAck)
      merge_stmt_1707__exit__  <-| (merge_stmt_1707_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 586  --------------------------
      // control-path for merge  
      //  file prog.aa, line 599
      //---------------------   merge statement  file prog.aa, line 599  --------------------------
      ||[bb_19_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1756] 
        {
          ||[phi_stmt_1756_sources] 
          {
            // sources for 			$phi iNsTr_83 := 			  ($cast ($uint<64>) phitmp21x_xix_xi ) $on bb_20_iq_err_calcx_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_19_iq_err_calcx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xix_xi )
            ;;[type_cast_1759] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1756_req] 
        }
      }
      bb_19_iq_err_calcx_xexit |-> (bb_19_iq_err_calcx_xexit_PhiReq)
      ||[bb_20_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1756] 
        {
          ||[phi_stmt_1756_sources] 
          {
            // sources for 			$phi iNsTr_83 := 			  ($cast ($uint<64>) phitmp21x_xix_xi ) $on bb_20_iq_err_calcx_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_19_iq_err_calcx_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xix_xi )
            ;;[type_cast_1759] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1756_req] 
        }
      }
      bb_20_iq_err_calcx_xexit |-> (bb_20_iq_err_calcx_xexit_PhiReq)
      $P [merge_stmt_1755_PhiReqMerge] 
      merge_stmt_1755_PhiReqMerge <-| ( bb_19_iq_err_calcx_xexit_PhiReq  bb_20_iq_err_calcx_xexit_PhiReq )
      ||[merge_stmt_1755_PhiAck] 
      {
        $T [phi_stmt_1756_ack] 
      }
      merge_stmt_1755_PhiReqMerge |-> (merge_stmt_1755_PhiAck)
      merge_stmt_1755__exit__  <-| (merge_stmt_1755_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 599  --------------------------
      // control-path for merge  
      //  file prog.aa, line 615
      ;;[merge_stmt_1822_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1822__entry__ |-> (merge_stmt_1822_dead_link)
      merge_stmt_1822__exit__ <-| (merge_stmt_1822_dead_link)
      //---------------------   merge statement  file prog.aa, line 615  --------------------------
      ||[iq_err_calcx_xexit_bb_22_PhiReq] 
      {
        // no phi statements in merge..
      }
      iq_err_calcx_xexit_bb_22 |-> (iq_err_calcx_xexit_bb_22_PhiReq)
      $P [merge_stmt_1822_PhiReqMerge] 
      merge_stmt_1822_PhiReqMerge <-| ( iq_err_calcx_xexit_bb_22_PhiReq )
      ||[merge_stmt_1822_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1822_PhiReqMerge |-> (merge_stmt_1822_PhiAck)
      merge_stmt_1822__exit__  <-| (merge_stmt_1822_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 615  --------------------------
      // control-path for merge  
      //  file prog.aa, line 621
      ;;[merge_stmt_1835_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1835__entry__ |-> (merge_stmt_1835_dead_link)
      merge_stmt_1835__exit__ <-| (merge_stmt_1835_dead_link)
      //---------------------   merge statement  file prog.aa, line 621  --------------------------
      ||[bb_22_bb_23_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_22_bb_23 |-> (bb_22_bb_23_PhiReq)
      $P [merge_stmt_1835_PhiReqMerge] 
      merge_stmt_1835_PhiReqMerge <-| ( bb_22_bb_23_PhiReq )
      ||[merge_stmt_1835_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1835_PhiReqMerge |-> (merge_stmt_1835_PhiAck)
      merge_stmt_1835__exit__  <-| (merge_stmt_1835_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 621  --------------------------
      // control-path for merge  
      //  file prog.aa, line 625
      //---------------------   merge statement  file prog.aa, line 625  --------------------------
      ||[bb_22_bb_24_PhiReq] 
      {
        ;;[phi_stmt_1838] 
        {
          ||[phi_stmt_1838_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_91 )
            ;;[type_cast_1841] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1838_req] 
        }
      }
      bb_22_bb_24 |-> (bb_22_bb_24_PhiReq)
      ||[bb_23_bb_24_PhiReq] 
      {
        ;;[phi_stmt_1838] 
        {
          ||[phi_stmt_1838_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_91 )
            ;;[type_cast_1841] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1838_req] 
        }
      }
      bb_23_bb_24 |-> (bb_23_bb_24_PhiReq)
      ||[iq_err_calcx_xexit_bb_24_PhiReq] 
      {
        ;;[phi_stmt_1838] 
        {
          ||[phi_stmt_1838_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_91 )
            ;;[type_cast_1841] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1838_req] 
        }
      }
      iq_err_calcx_xexit_bb_24 |-> (iq_err_calcx_xexit_bb_24_PhiReq)
      $P [merge_stmt_1837_PhiReqMerge] 
      merge_stmt_1837_PhiReqMerge <-| ( bb_22_bb_24_PhiReq  bb_23_bb_24_PhiReq  iq_err_calcx_xexit_bb_24_PhiReq )
      ||[merge_stmt_1837_PhiAck] 
      {
        $T [phi_stmt_1838_ack] 
      }
      merge_stmt_1837_PhiReqMerge |-> (merge_stmt_1837_PhiAck)
      merge_stmt_1837__exit__  <-| (merge_stmt_1837_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 625  --------------------------
      // control-path for merge  
      //  file prog.aa, line 634
      ;;[merge_stmt_1872_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1872__entry__ |-> (merge_stmt_1872_dead_link)
      merge_stmt_1872__exit__ <-| (merge_stmt_1872_dead_link)
      //---------------------   merge statement  file prog.aa, line 634  --------------------------
      ||[bb_24_bb_25_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_24_bb_25 |-> (bb_24_bb_25_PhiReq)
      $P [merge_stmt_1872_PhiReqMerge] 
      merge_stmt_1872_PhiReqMerge <-| ( bb_24_bb_25_PhiReq )
      ||[merge_stmt_1872_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1872_PhiReqMerge |-> (merge_stmt_1872_PhiAck)
      merge_stmt_1872__exit__  <-| (merge_stmt_1872_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 634  --------------------------
      // control-path for merge  
      //  file prog.aa, line 640
      ;;[merge_stmt_1885_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1885__entry__ |-> (merge_stmt_1885_dead_link)
      merge_stmt_1885__exit__ <-| (merge_stmt_1885_dead_link)
      //---------------------   merge statement  file prog.aa, line 640  --------------------------
      ||[bb_25_bb_26_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_25_bb_26 |-> (bb_25_bb_26_PhiReq)
      $P [merge_stmt_1885_PhiReqMerge] 
      merge_stmt_1885_PhiReqMerge <-| ( bb_25_bb_26_PhiReq )
      ||[merge_stmt_1885_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1885_PhiReqMerge |-> (merge_stmt_1885_PhiAck)
      merge_stmt_1885__exit__  <-| (merge_stmt_1885_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 640  --------------------------
      // control-path for merge  
      //  file prog.aa, line 649
      ;;[merge_stmt_1912_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1912__entry__ |-> (merge_stmt_1912_dead_link)
      merge_stmt_1912__exit__ <-| (merge_stmt_1912_dead_link)
      //---------------------   merge statement  file prog.aa, line 649  --------------------------
      ||[bb_24_xx_xthread12_PhiReq] 
      {
        ;;[phi_stmt_1913] 
        {
          ||[phi_stmt_1913_sources] 
          {
            // sources for 			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp7 )
            ;;[type_cast_1916] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1913_req] 
        }
      }
      bb_24_xx_xthread12 |-> (bb_24_xx_xthread12_PhiReq)
      ||[bb_25_xx_xthread12_PhiReq] 
      {
        ;;[phi_stmt_1913] 
        {
          ||[phi_stmt_1913_sources] 
          {
            // sources for 			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp7 )
            ;;[type_cast_1916] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1913_req] 
        }
      }
      bb_25_xx_xthread12 |-> (bb_25_xx_xthread12_PhiReq)
      ||[bb_26_xx_xthread12_PhiReq] 
      {
        ;;[phi_stmt_1913] 
        {
          ||[phi_stmt_1913_sources] 
          {
            // sources for 			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp7 )
            ;;[type_cast_1916] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1913_req] 
        }
      }
      bb_26_xx_xthread12 |-> (bb_26_xx_xthread12_PhiReq)
      $P [merge_stmt_1912_PhiReqMerge] 
      merge_stmt_1912_PhiReqMerge <-| ( bb_24_xx_xthread12_PhiReq  bb_25_xx_xthread12_PhiReq  bb_26_xx_xthread12_PhiReq )
      ||[merge_stmt_1912_PhiAck] 
      {
        $T [phi_stmt_1913_ack] 
      }
      merge_stmt_1912_PhiReqMerge |-> (merge_stmt_1912_PhiAck)
      merge_stmt_1912__exit__  <-| (merge_stmt_1912_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 649  --------------------------
      // control-path for merge  
      //  file prog.aa, line 659
      //---------------------   merge statement  file prog.aa, line 659  --------------------------
      ||[bb_26_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_1952] 
        {
          ||[phi_stmt_1952_sources] 
          {
            // sources for 			$phi flux_addx_x0911 := 			  ($cast ($uint<64>) phitmp20x_xi15x_xin ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) phitmp7 ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi15x_xin )
            ;;[type_cast_1955] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) phitmp7 )
            ;;[type_cast_1957] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1952_req] 
        }
        ;;[phi_stmt_1958] 
        {
          ||[phi_stmt_1958_sources] 
          {
            // sources for 			$phi iNsTr_113 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_1961] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1958_req] 
        }
      }
      bb_26_fdiv32x_xexit |-> (bb_26_fdiv32x_xexit_PhiReq)
      ||[xx_xthread12_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_1952] 
        {
          ||[phi_stmt_1952_sources] 
          {
            // sources for 			$phi flux_addx_x0911 := 			  ($cast ($uint<64>) phitmp20x_xi15x_xin ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) phitmp7 ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp20x_xi15x_xin )
            ;;[type_cast_1955] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<64>) phitmp7 )
            ;;[type_cast_1957] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1952_req] 
        }
        ;;[phi_stmt_1958] 
        {
          ||[phi_stmt_1958_sources] 
          {
            // sources for 			$phi iNsTr_113 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
            // ($cast ($uint<64>) phitmp21x_xi )
            ;;[type_cast_1961] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1958_req] 
        }
      }
      xx_xthread12_fdiv32x_xexit |-> (xx_xthread12_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1951_PhiReqMerge] 
      merge_stmt_1951_PhiReqMerge <-| ( bb_26_fdiv32x_xexit_PhiReq  xx_xthread12_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1951_PhiAck] 
      {
        $T [phi_stmt_1952_ack] 
        $T [phi_stmt_1958_ack] 
      }
      merge_stmt_1951_PhiReqMerge |-> (merge_stmt_1951_PhiAck)
      merge_stmt_1951__exit__  <-| (merge_stmt_1951_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 659  --------------------------
      bb_0_bb_1 <-| (branch_block_stmt_1166__entry__)
      assign_stmt_1214__entry__ <-| (merge_stmt_1168__exit__)
      assign_stmt_1217__entry__ <-| (assign_stmt_1214__exit__)
      assign_stmt_1220__entry__ <-| (assign_stmt_1217__exit__)
      assign_stmt_1223__entry__ <-| (assign_stmt_1220__exit__)
      assign_stmt_1226__entry__ <-| (assign_stmt_1223__exit__)
      assign_stmt_1231__entry__ <-| (assign_stmt_1226__exit__)
      if_stmt_1232__entry__ <-| (assign_stmt_1231__exit__)
      merge_stmt_1238__entry__ <-| (if_stmt_1232__exit__)
      assign_stmt_1244__entry__ <-| (merge_stmt_1238__exit__)
      bb_2_bb_5 <-| (assign_stmt_1244__exit__)
      assign_stmt_1251__entry__ <-| (merge_stmt_1246__exit__)
      if_stmt_1252__entry__ <-| (assign_stmt_1251__exit__)
      merge_stmt_1258__entry__ <-| (if_stmt_1252__exit__)
      assign_stmt_1264__entry__ <-| (merge_stmt_1258__exit__)
      bb_4_bb_5 <-| (assign_stmt_1264__exit__)
      assign_stmt_1280_to_assign_stmt_1307__entry__ <-| (merge_stmt_1266__exit__)
      if_stmt_1308__entry__ <-| (assign_stmt_1280_to_assign_stmt_1307__exit__)
      merge_stmt_1314__entry__ <-| (if_stmt_1308__exit__)
      assign_stmt_1320__entry__ <-| (merge_stmt_1314__exit__)
      if_stmt_1321__entry__ <-| (assign_stmt_1320__exit__)
      merge_stmt_1327__entry__ <-| (if_stmt_1321__exit__)
      bb_7_bb_8 <-| (merge_stmt_1327__exit__)
      assign_stmt_1346_to_assign_stmt_1357__entry__ <-| (merge_stmt_1329__exit__)
      if_stmt_1358__entry__ <-| (assign_stmt_1346_to_assign_stmt_1357__exit__)
      merge_stmt_1364__entry__ <-| (if_stmt_1358__exit__)
      assign_stmt_1370__entry__ <-| (merge_stmt_1364__exit__)
      if_stmt_1371__entry__ <-| (assign_stmt_1370__exit__)
      merge_stmt_1377__entry__ <-| (if_stmt_1371__exit__)
      assign_stmt_1383_to_assign_stmt_1391__entry__ <-| (merge_stmt_1377__exit__)
      bb_10_bb_11 <-| (assign_stmt_1383_to_assign_stmt_1391__exit__)
      assign_stmt_1408_to_assign_stmt_1414__entry__ <-| (merge_stmt_1393__exit__)
      if_stmt_1415__entry__ <-| (assign_stmt_1408_to_assign_stmt_1414__exit__)
      merge_stmt_1421__entry__ <-| (if_stmt_1415__exit__)
      assign_stmt_1427__entry__ <-| (merge_stmt_1421__exit__)
      if_stmt_1428__entry__ <-| (assign_stmt_1427__exit__)
      merge_stmt_1434__entry__ <-| (if_stmt_1428__exit__)
      assign_stmt_1440_to_assign_stmt_1452__entry__ <-| (merge_stmt_1434__exit__)
      bb_13_bb_17 <-| (assign_stmt_1440_to_assign_stmt_1452__exit__)
      assign_stmt_1460__entry__ <-| (merge_stmt_1454__exit__)
      if_stmt_1461__entry__ <-| (assign_stmt_1460__exit__)
      merge_stmt_1467__entry__ <-| (if_stmt_1461__exit__)
      assign_stmt_1473_to_assign_stmt_1485__entry__ <-| (merge_stmt_1467__exit__)
      bb_15_bb_17 <-| (assign_stmt_1473_to_assign_stmt_1485__exit__)
      assign_stmt_1493_to_assign_stmt_1505__entry__ <-| (merge_stmt_1487__exit__)
      bb_16_bb_17 <-| (assign_stmt_1493_to_assign_stmt_1505__exit__)
      assign_stmt_1524_to_assign_stmt_1567__entry__ <-| (merge_stmt_1507__exit__)
      if_stmt_1568__entry__ <-| (assign_stmt_1524_to_assign_stmt_1567__exit__)
      merge_stmt_1574__entry__ <-| (if_stmt_1568__exit__)
      assign_stmt_1580_to_assign_stmt_1603__entry__ <-| (merge_stmt_1574__exit__)
      bb_18_bb_19 <-| (assign_stmt_1580_to_assign_stmt_1603__exit__)
      assign_stmt_1619_to_assign_stmt_1700__entry__ <-| (merge_stmt_1605__exit__)
      if_stmt_1701__entry__ <-| (assign_stmt_1619_to_assign_stmt_1700__exit__)
      merge_stmt_1707__entry__ <-| (if_stmt_1701__exit__)
      assign_stmt_1712_to_assign_stmt_1753__entry__ <-| (merge_stmt_1707__exit__)
      bb_20_iq_err_calcx_xexit <-| (assign_stmt_1712_to_assign_stmt_1753__exit__)
      assign_stmt_1768_to_assign_stmt_1815__entry__ <-| (merge_stmt_1755__exit__)
      if_stmt_1816__entry__ <-| (assign_stmt_1768_to_assign_stmt_1815__exit__)
      merge_stmt_1822__entry__ <-| (if_stmt_1816__exit__)
      assign_stmt_1828__entry__ <-| (merge_stmt_1822__exit__)
      if_stmt_1829__entry__ <-| (assign_stmt_1828__exit__)
      merge_stmt_1835__entry__ <-| (if_stmt_1829__exit__)
      bb_23_bb_24 <-| (merge_stmt_1835__exit__)
      assign_stmt_1854_to_assign_stmt_1865__entry__ <-| (merge_stmt_1837__exit__)
      if_stmt_1866__entry__ <-| (assign_stmt_1854_to_assign_stmt_1865__exit__)
      merge_stmt_1872__entry__ <-| (if_stmt_1866__exit__)
      assign_stmt_1878__entry__ <-| (merge_stmt_1872__exit__)
      if_stmt_1879__entry__ <-| (assign_stmt_1878__exit__)
      merge_stmt_1885__entry__ <-| (if_stmt_1879__exit__)
      assign_stmt_1889_to_assign_stmt_1905__entry__ <-| (merge_stmt_1885__exit__)
      if_stmt_1906__entry__ <-| (assign_stmt_1889_to_assign_stmt_1905__exit__)
      merge_stmt_1912__entry__ <-| (if_stmt_1906__exit__)
      assign_stmt_1929_to_assign_stmt_1949__entry__ <-| (merge_stmt_1912__exit__)
      xx_xthread12_fdiv32x_xexit <-| (assign_stmt_1929_to_assign_stmt_1949__exit__)
      assign_stmt_1971_to_assign_stmt_1984__entry__ <-| (merge_stmt_1951__exit__)
      assign_stmt_1987__entry__ <-| (assign_stmt_1971_to_assign_stmt_1984__exit__)
      assign_stmt_1990__entry__ <-| (assign_stmt_1987__exit__)
      assign_stmt_1993__entry__ <-| (assign_stmt_1990__exit__)
      assign_stmt_1996__entry__ <-| (assign_stmt_1993__exit__)
      assign_stmt_2002_to_assign_stmt_2014__entry__ <-| (assign_stmt_1996__exit__)
      fdiv32x_xexit_bb_1 <-| (assign_stmt_2002_to_assign_stmt_2014__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 422
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 439
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 444
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 450
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 455
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 467
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 473
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 477
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 486
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 492
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 499
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 507
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 513
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 520
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 526
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 533
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 540
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 555
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 564
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 586
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 599
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 615
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 621
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 625
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 634
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 640
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 649
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 659
    // constant-object-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 417
    // constant-object-declarations for block %vector_control_daemon
    //  file prog.aa, line 412
    // constant-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 417
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 422
    // constant-declarations for phi:  			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 423
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1173_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 424
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1180_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_speed_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_19 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 425
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1187_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_90 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 426
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1194_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi id_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp3 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 427
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1201_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 428
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) )
    $constant $W[type_cast_1208_wire_constant] : $float<8,23> := _b01000100101011110000000000000000// 1.400000e+03
    // if-statement  
    //  file prog.aa, line 437
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 439
    // ($bitcast ($float<8,23>) _f5.000000e+00 )
    $constant $W[type_cast_1242_wire_constant] : $float<8,23> := _b01000000101000000000000000000000// 5.000000e+00
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 444
    // if-statement  
    //  file prog.aa, line 448
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 450
    // ($bitcast ($float<8,23>) _f-5.000000e+00 )
    $constant $W[type_cast_1262_wire_constant] : $float<8,23> := _b11000000101000000000000000000000// -5.000000e+00
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 455
    // constant-declarations for phi:  			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 456
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_1284_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f1.000000e+01 )
    $constant $W[type_cast_1295_wire_constant] : $float<8,23> := _b01000001001000000000000000000000// 1.000000e+01
    // ($bitcast ($float<11,52>) _f-2.000000e+01 )
    $constant $W[type_cast_1305_wire_constant] : $float<11,52> := _b1100000000110100000000000000000000000000000000000000000000000000// -2.000000e+01
    // if-statement  
    //  file prog.aa, line 465
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 467
    // ($bitcast ($float<11,52>) _f2.000000e+01 )
    $constant $W[type_cast_1318_wire_constant] : $float<11,52> := _b0100000000110100000000000000000000000000000000000000000000000000// 2.000000e+01
    // if-statement  
    //  file prog.aa, line 471
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 473
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 477
    // constant-declarations for phi:  			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 478
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) )
    $constant $W[type_cast_1336_wire_constant] : $float<8,23> := _b11000001101000000000000000000000// -2.000000e+01
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) )
    $constant $W[type_cast_1339_wire_constant] : $float<8,23> := _b01000001101000000000000000000000// 2.000000e+01
    // ($bitcast ($float<8,23>) _f5.000000e+00 )
    $constant $W[type_cast_1344_wire_constant] : $float<8,23> := _b01000000101000000000000000000000// 5.000000e+00
    // ($bitcast ($float<8,23>) _f-4.000000e+01 )
    $constant $W[type_cast_1355_wire_constant] : $float<8,23> := _b11000010001000000000000000000000// -4.000000e+01
    // if-statement  
    //  file prog.aa, line 484
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 486
    // ($bitcast ($float<8,23>) _f4.000000e+01 )
    $constant $W[type_cast_1368_wire_constant] : $float<8,23> := _b01000010001000000000000000000000// 4.000000e+01
    // if-statement  
    //  file prog.aa, line 490
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 492
    // ($bitcast ($float<8,23>) _f3.367000e+00 )
    $constant $W[type_cast_1381_wire_constant] : $float<8,23> := _b01000000010101110111110011101110// 3.367000e+00
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 499
    // constant-declarations for phi:  			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
    //  file prog.aa, line 500
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) )
    $constant $W[type_cast_1400_wire_constant] : $int<64> := _b1100000001100000110101011100001010100000000000000000000000000000// -1610612736
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) )
    $constant $W[type_cast_1403_wire_constant] : $int<64> := _b0100000001100000110101011100001010100000000000000000000000000000// -1610612736
    // ($bitcast ($float<11,52>) _f2.000000e+03 )
    $constant $W[type_cast_1412_wire_constant] : $float<11,52> := _b0100000010011111010000000000000000000000000000000000000000000000// 2.000000e+03
    // if-statement  
    //  file prog.aa, line 505
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 507
    // ($bitcast ($float<11,52>) _f2.500000e+03 )
    $constant $W[type_cast_1425_wire_constant] : $float<11,52> := _b0100000010100011100010000000000000000000000000000000000000000000// 2.500000e+03
    // if-statement  
    //  file prog.aa, line 511
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 513
    // ($bitcast ($float<8,23>) _f-2.000000e-04 )
    $constant $W[type_cast_1438_wire_constant] : $float<8,23> := _b10111001010100011011011100010111// -2.000000e-04
    // ($bitcast ($float<8,23>) _f1.400000e+00 )
    $constant $W[type_cast_1444_wire_constant] : $float<8,23> := _b00111111101100110011001100110011// 1.400000e+00
    // ($bitcast ($float<8,23>) _f3.000000e-01 )
    $constant $W[type_cast_1450_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 520
    // ($bitcast ($float<11,52>) _f3.000000e+03 )
    $constant $W[type_cast_1458_wire_constant] : $float<11,52> := _b0100000010100111011100000000000000000000000000000000000000000000// 3.000000e+03
    // if-statement  
    //  file prog.aa, line 524
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 526
    // ($bitcast ($float<8,23>) _f-3.600000e-04 )
    $constant $W[type_cast_1471_wire_constant] : $float<8,23> := _b10111001101111001011111001100010// -3.600000e-04
    // ($bitcast ($float<8,23>) _f1.800000e+00 )
    $constant $W[type_cast_1477_wire_constant] : $float<8,23> := _b00111111111001100110011001100110// 1.800000e+00
    // ($bitcast ($float<8,23>) _f3.000000e-01 )
    $constant $W[type_cast_1483_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 533
    // ($bitcast ($float<8,23>) _f-4.200000e-04 )
    $constant $W[type_cast_1491_wire_constant] : $float<8,23> := _b10111001110111000011001101110010// -4.200000e-04
    // ($bitcast ($float<8,23>) _f1.980000e+00 )
    $constant $W[type_cast_1497_wire_constant] : $float<8,23> := _b00111111111111010111000010100100// 1.980000e+00
    // ($bitcast ($float<8,23>) _f3.000000e-01 )
    $constant $W[type_cast_1503_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 540
    // constant-declarations for phi:  			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
    //  file prog.aa, line 541
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) )
    $constant $W[type_cast_1518_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_1528_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f9.715200e+00 )
    $constant $W[type_cast_1539_wire_constant] : $float<8,23> := _b01000001000110110111000101110110// 9.715200e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1553_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1559_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1565_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 553
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 555
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1578_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1584_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1589_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1601_wire_constant] : $int<64> := _b0111111111110000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 564
    // constant-declarations for phi:  			$phi iNsTr_56 := 			  ($cast ($uint<64>) phitmp20x_xix_xi ) $on bb_18_bb_19			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_17_bb_19 // type of target is $uint<64>
    //  file prog.aa, line 565
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1612_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1617_wire_constant] : $int<64> := _b0011111111100000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1623_wire_constant] : $int<64> := _b0011111111101111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f1.882353e+00 )
    $constant $W[type_cast_1633_wire_constant] : $float<11,52> := _b0011111111111110000111100001111000101101111010000111000010010111// 1.882353e+00
    // ($bitcast ($float<11,52>) _f2.823529e+00 )
    $constant $W[type_cast_1638_wire_constant] : $float<11,52> := _b0100000000000110100101101001011001011111010100100111010111101111// 2.823529e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1649_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1665_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1681_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1693_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 584
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 586
    // ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1716_wire_constant] : $int<64> := _b0000000000001111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f2.000000e+00 )
    $constant $W[type_cast_1721_wire_constant] : $float<11,52> := _b0100000000000000000000000000000000000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1751_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 599
    // constant-declarations for phi:  			$phi iNsTr_83 := 			  ($cast ($uint<64>) phitmp21x_xix_xi ) $on bb_20_iq_err_calcx_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_19_iq_err_calcx_xexit // type of target is $uint<64>
    //  file prog.aa, line 600
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1762_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1772_wire_constant] : $int<64> := _b1000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_1796_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f2.500000e+01 )
    $constant $W[type_cast_1807_wire_constant] : $float<8,23> := _b01000001110010000000000000000000// 2.500000e+01
    // ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $constant $W[type_cast_1813_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // if-statement  
    //  file prog.aa, line 613
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 615
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_1826_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // if-statement  
    //  file prog.aa, line 619
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 621
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 625
    // constant-declarations for phi:  			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
    //  file prog.aa, line 626
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) )
    $constant $W[type_cast_1844_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) )
    $constant $W[type_cast_1847_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ($bitcast ($float<8,23>) _f6.500000e+01 )
    $constant $W[type_cast_1852_wire_constant] : $float<8,23> := _b01000010100000100000000000000000// 6.500000e+01
    // ($bitcast ($float<8,23>) _f-2.000000e+00 )
    $constant $W[type_cast_1863_wire_constant] : $float<8,23> := _b11000000000000000000000000000000// -2.000000e+00
    // if-statement  
    //  file prog.aa, line 632
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 634
    // ($bitcast ($float<8,23>) _f2.000000e+00 )
    $constant $W[type_cast_1876_wire_constant] : $float<8,23> := _b01000000000000000000000000000000// 2.000000e+00
    // if-statement  
    //  file prog.aa, line 638
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 640
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1897_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1903_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 647
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 649
    // constant-declarations for phi:  			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
    //  file prog.aa, line 650
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1919_wire_constant] : $int<64> := _b1100000000000000000000000000000000000000000000000000000000000000// 0
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1922_wire_constant] : $int<64> := _b0100000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1927_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // ($bitcast ($float<11,52>) _f1.235178e+00 )
    $constant $W[type_cast_1937_wire_constant] : $float<11,52> := _b0011111111110011110000110100101000000001101010111101000110101011// 1.235178e+00
    // ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  )
    $constant $W[type_cast_1947_wire_constant] : $int<64> := _b0111111111111111111111111111111111111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 659
    // constant-declarations for phi:  			$phi flux_addx_x0911 := 			  ($cast ($uint<64>) phitmp20x_xi15x_xin ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) phitmp7 ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 660
    // constant-declarations for phi:  			$phi iNsTr_113 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 661
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1964_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1969_wire_constant] : $int<64> := _b1000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($float<8,23>) _f9.995000e-01 )
    $constant $W[type_cast_2000_wire_constant] : $float<8,23> := _b00111111011111111101111100111011// 9.995000e-01
    // ($bitcast ($float<8,23>) _f8.096000e-01 )
    $constant $W[type_cast_2006_wire_constant] : $float<8,23> := _b00111111010011110100000111110010// 8.096000e-01
    // ($bitcast ($float<8,23>) _f5.000000e-04 )
    $constant $W[type_cast_2012_wire_constant] : $float<8,23> := _b00111010000000110001001001101111// 5.000000e-04
    // block %vector_control_daemon%body
    //  file prog.aa, line 417
    // merge-statement  
    //  file prog.aa, line 422
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 423
    // ($cast ($float<8,23>) iNsTr_42 )
    $intermediate $W[type_cast_1175_wire] : $float<8,23>
    // theta_prevx_x0
    $W[theta_prevx_x0_1169] : $float<8,23>
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 424
    // ($cast ($float<8,23>) phitmp1 )
    $intermediate $W[type_cast_1182_wire] : $float<8,23>
    // flux_rotor_prevx_x0
    $W[flux_rotor_prevx_x0_1176] : $float<8,23>
    // 			$phi int_speed_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_19 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 425
    // ($cast ($float<8,23>) iNsTr_19 )
    $intermediate $W[type_cast_1189_wire] : $float<8,23>
    // int_speed_err_temp_2x_x0
    $W[int_speed_err_temp_2x_x0_1183] : $float<8,23>
    // 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_90 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 426
    // ($cast ($float<8,23>) iNsTr_90 )
    $intermediate $W[type_cast_1196_wire] : $float<8,23>
    // int_flux_err_temp_2x_x0
    $W[int_flux_err_temp_2x_x0_1190] : $float<8,23>
    // 			$phi id_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp3 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 427
    // ($cast ($float<8,23>) phitmp3 )
    $intermediate $W[type_cast_1203_wire] : $float<8,23>
    // id_prevx_x0
    $W[id_prevx_x0_1197] : $float<8,23>
    // 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 428
    // ($cast ($float<8,23>) speed_refx_x0 )
    $intermediate $W[type_cast_1210_wire] : $float<8,23>
    // speed_refx_x1
    $W[speed_refx_x1_1204] : $float<8,23>
    // 		iNsTr_2 := in_data1
    //  file prog.aa, line 430
    // iNsTr_2
    $W[iNsTr_2_1214] : $float<8,23>
    // 		iNsTr_4 := in_data2
    //  file prog.aa, line 431
    // iNsTr_4
    $W[iNsTr_4_1217] : $float<8,23>
    // 		iNsTr_6 := in_data3
    //  file prog.aa, line 432
    // iNsTr_6
    $W[iNsTr_6_1220] : $float<8,23>
    // 		iNsTr_8 := in_data4
    //  file prog.aa, line 433
    // iNsTr_8
    $W[iNsTr_8_1223] : $float<8,23>
    // 		iNsTr_10 := in_data5
    //  file prog.aa, line 434
    // iNsTr_10
    $W[iNsTr_10_1226] : $float<8,23>
    // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
    //  file prog.aa, line 436
    // iNsTr_11
    $W[iNsTr_11_1231] : $int<1>
    // if statement  
    //  file prog.aa, line 437
    // 		iNsTr_13 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 441
    // iNsTr_13
    $W[iNsTr_13_1244] : $float<8,23>
    // 		iNsTr_15 := (speed_refx_x1 > iNsTr_8)
    //  file prog.aa, line 447
    // iNsTr_15
    $W[iNsTr_15_1251] : $int<1>
    // if statement  
    //  file prog.aa, line 448
    // 		iNsTr_24 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
    //  file prog.aa, line 452
    // iNsTr_24
    $W[iNsTr_24_1264] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 455
    // 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 456
    // ($cast ($float<8,23>) iNsTr_13 )
    $intermediate $W[type_cast_1270_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_24 )
    $intermediate $W[type_cast_1272_wire] : $float<8,23>
    // ($cast ($float<8,23>) speed_refx_x1 )
    $intermediate $W[type_cast_1274_wire] : $float<8,23>
    // speed_refx_x0
    $W[speed_refx_x0_1267] : $float<8,23>
    // 		iNsTr_17 := (speed_refx_x0 - iNsTr_6)
    //  file prog.aa, line 458
    // iNsTr_17
    $W[iNsTr_17_1280] : $float<8,23>
    // 		iNsTr_18 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 459
    // iNsTr_18
    $W[iNsTr_18_1286] : $float<8,23>
    // 		iNsTr_19 := (iNsTr_18 + int_speed_err_temp_2x_x0)
    //  file prog.aa, line 460
    // iNsTr_19
    $W[iNsTr_19_1291] : $float<8,23>
    // 		iNsTr_20 := (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
    //  file prog.aa, line 461
    // iNsTr_20
    $W[iNsTr_20_1297] : $float<8,23>
    // 		iNsTr_21 := ($cast ($float<11,52>) iNsTr_20 )
    //  file prog.aa, line 462
    // iNsTr_21
    $W[iNsTr_21_1301] : $float<11,52>
    // 		iNsTr_22 := (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
    //  file prog.aa, line 464
    // iNsTr_22
    $W[iNsTr_22_1307] : $int<1>
    // if statement  
    //  file prog.aa, line 465
    // 		iNsTr_30 := (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
    //  file prog.aa, line 470
    // iNsTr_30
    $W[iNsTr_30_1320] : $int<1>
    // if statement  
    //  file prog.aa, line 471
    // merge-statement  
    //  file prog.aa, line 477
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 478
    // ($cast ($float<8,23>) iNsTr_20 )
    $intermediate $W[type_cast_1333_wire] : $float<8,23>
    // int_speed_errx_x0
    $W[int_speed_errx_x0_1330] : $float<8,23>
    // 		iNsTr_26 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 480
    // iNsTr_26
    $W[iNsTr_26_1346] : $float<8,23>
    // 		iNsTr_27 := (int_speed_errx_x0 + iNsTr_26)
    //  file prog.aa, line 481
    // iNsTr_27
    $W[iNsTr_27_1351] : $float<8,23>
    // 		iNsTr_28 := (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
    //  file prog.aa, line 483
    // iNsTr_28
    $W[iNsTr_28_1357] : $int<1>
    // if statement  
    //  file prog.aa, line 484
    // 		iNsTr_35 := (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 489
    // iNsTr_35
    $W[iNsTr_35_1370] : $int<1>
    // if statement  
    //  file prog.aa, line 490
    // 		phitmp4 := (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
    //  file prog.aa, line 494
    // phitmp4
    $W[phitmp4_1383] : $float<8,23>
    // 		phitmp5 := ($cast ($float<11,52>) phitmp4 )
    //  file prog.aa, line 495
    // phitmp5
    $W[phitmp5_1387] : $float<11,52>
    // 		phitmp6 := ($bitcast ($uint<64>) phitmp5 )
    //  file prog.aa, line 496
    // phitmp6
    $W[phitmp6_1391] : $int<64>
    // merge-statement  
    //  file prog.aa, line 499
    // 			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
    //  file prog.aa, line 500
    // ($cast ($uint<64>) phitmp6 )
    $intermediate $W[type_cast_1397_wire] : $int<64>
    // torque_refx_x0
    $W[torque_refx_x0_1394] : $int<64>
    // 		iNsTr_32 := ($cast ($float<11,52>) speed_refx_x0 )
    //  file prog.aa, line 502
    // iNsTr_32
    $W[iNsTr_32_1408] : $float<11,52>
    // 		iNsTr_33 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    //  file prog.aa, line 504
    // iNsTr_33
    $W[iNsTr_33_1414] : $int<1>
    // if statement  
    //  file prog.aa, line 505
    // 		iNsTr_38 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    //  file prog.aa, line 510
    // iNsTr_38
    $W[iNsTr_38_1427] : $int<1>
    // if statement  
    //  file prog.aa, line 511
    // 		iNsTr_52 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    //  file prog.aa, line 515
    // iNsTr_52
    $W[iNsTr_52_1440] : $float<8,23>
    // 		iNsTr_53 := (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    //  file prog.aa, line 516
    // iNsTr_53
    $W[iNsTr_53_1446] : $float<8,23>
    // 		iNsTr_54 := (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 517
    // iNsTr_54
    $W[iNsTr_54_1452] : $float<8,23>
    // 		iNsTr_50 := (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    //  file prog.aa, line 523
    // iNsTr_50
    $W[iNsTr_50_1460] : $int<1>
    // if statement  
    //  file prog.aa, line 524
    // 		iNsTr_79 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    //  file prog.aa, line 528
    // iNsTr_79
    $W[iNsTr_79_1473] : $float<8,23>
    // 		iNsTr_80 := (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    //  file prog.aa, line 529
    // iNsTr_80
    $W[iNsTr_80_1479] : $float<8,23>
    // 		iNsTr_81 := (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 530
    // iNsTr_81
    $W[iNsTr_81_1485] : $float<8,23>
    // 		iNsTr_75 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    //  file prog.aa, line 535
    // iNsTr_75
    $W[iNsTr_75_1493] : $float<8,23>
    // 		iNsTr_76 := (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    //  file prog.aa, line 536
    // iNsTr_76
    $W[iNsTr_76_1499] : $float<8,23>
    // 		iNsTr_77 := (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 537
    // iNsTr_77
    $W[iNsTr_77_1505] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 540
    // 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
    //  file prog.aa, line 541
    // ($cast ($float<8,23>) iNsTr_54 )
    $intermediate $W[type_cast_1511_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_81 )
    $intermediate $W[type_cast_1513_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_77 )
    $intermediate $W[type_cast_1515_wire] : $float<8,23>
    // flux_refx_x0
    $W[flux_refx_x0_1508] : $float<8,23>
    // 		iNsTr_40 := (id_prevx_x0 + flux_rotor_prevx_x0)
    //  file prog.aa, line 543
    // iNsTr_40
    $W[iNsTr_40_1524] : $float<8,23>
    // 		iNsTr_41 := (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 544
    // iNsTr_41
    $W[iNsTr_41_1530] : $float<8,23>
    // 		iNsTr_42 := (iNsTr_41 + theta_prevx_x0)
    //  file prog.aa, line 545
    // iNsTr_42
    $W[iNsTr_42_1535] : $float<8,23>
    // 		iNsTr_43 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    //  file prog.aa, line 546
    // iNsTr_43
    $W[iNsTr_43_1541] : $float<8,23>
    // 		iNsTr_44 := ($cast ($float<11,52>) iNsTr_43 )
    //  file prog.aa, line 547
    // iNsTr_44
    $W[iNsTr_44_1545] : $float<11,52>
    // 		tmp15x_xix_xi := ($bitcast ($uint<64>) iNsTr_44 )
    //  file prog.aa, line 548
    // tmp15x_xix_xi
    $W[tmp15x_xix_xi_1549] : $int<64>
    // 		iNsTr_45 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 549
    // iNsTr_45
    $W[iNsTr_45_1555] : $int<64>
    // 		iNsTr_46 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 550
    // iNsTr_46
    $W[iNsTr_46_1561] : $int<64>
    // 		iNsTr_47 := (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 552
    // iNsTr_47
    $W[iNsTr_47_1567] : $int<1>
    // if statement  
    //  file prog.aa, line 553
    // 		iNsTr_72 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 557
    // iNsTr_72
    $W[iNsTr_72_1580] : $int<64>
    // 		tmp17x_xmaskx_xix_xi := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 558
    // tmp17x_xmaskx_xix_xi
    $W[tmp17x_xmaskx_xix_xi_1586] : $int<64>
    // 		iNsTr_73 := (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
    //  file prog.aa, line 559
    // iNsTr_73
    $W[iNsTr_73_1592] : $int<64>
    // 		phitmpx_xix_xi := (iNsTr_73 + tmp17x_xmaskx_xix_xi)
    //  file prog.aa, line 560
    // phitmpx_xix_xi
    $W[phitmpx_xix_xi_1597] : $int<64>
    // 		phitmp20x_xix_xi := (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 561
    // phitmp20x_xix_xi
    $W[phitmp20x_xix_xi_1603] : $int<64>
    // merge-statement  
    //  file prog.aa, line 564
    // 			$phi iNsTr_56 := 			  ($cast ($uint<64>) phitmp20x_xix_xi ) $on bb_18_bb_19			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_17_bb_19 // type of target is $uint<64>
    //  file prog.aa, line 565
    // ($cast ($uint<64>) phitmp20x_xix_xi )
    $intermediate $W[type_cast_1609_wire] : $int<64>
    // iNsTr_56
    $W[iNsTr_56_1606] : $int<64>
    // 		iNsTr_57 := (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 567
    // iNsTr_57
    $W[iNsTr_57_1619] : $int<64>
    // 		iNsTr_58 := (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 568
    // iNsTr_58
    $W[iNsTr_58_1625] : $int<64>
    // 		tmp11x_xix_xi := ($bitcast ($float<11,52>) iNsTr_58 )
    //  file prog.aa, line 569
    // tmp11x_xix_xi
    $W[tmp11x_xix_xi_1629] : $float<11,52>
    // 		iNsTr_59 := (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 570
    // iNsTr_59
    $W[iNsTr_59_1635] : $float<11,52>
    // 		iNsTr_60 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
    //  file prog.aa, line 571
    // iNsTr_60
    $W[iNsTr_60_1641] : $float<11,52>
    // 		iNsTr_61 := (tmp11x_xix_xi * iNsTr_60)
    //  file prog.aa, line 572
    // iNsTr_61
    $W[iNsTr_61_1646] : $float<11,52>
    // 		iNsTr_62 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
    //  file prog.aa, line 573
    // iNsTr_62
    $W[iNsTr_62_1652] : $float<11,52>
    // 		iNsTr_63 := (iNsTr_60 * iNsTr_62)
    //  file prog.aa, line 574
    // iNsTr_63
    $W[iNsTr_63_1657] : $float<11,52>
    // 		iNsTr_64 := (tmp11x_xix_xi * iNsTr_63)
    //  file prog.aa, line 575
    // iNsTr_64
    $W[iNsTr_64_1662] : $float<11,52>
    // 		iNsTr_65 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
    //  file prog.aa, line 576
    // iNsTr_65
    $W[iNsTr_65_1668] : $float<11,52>
    // 		iNsTr_66 := (iNsTr_63 * iNsTr_65)
    //  file prog.aa, line 577
    // iNsTr_66
    $W[iNsTr_66_1673] : $float<11,52>
    // 		iNsTr_67 := (tmp11x_xix_xi * iNsTr_66)
    //  file prog.aa, line 578
    // iNsTr_67
    $W[iNsTr_67_1678] : $float<11,52>
    // 		iNsTr_68 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
    //  file prog.aa, line 579
    // iNsTr_68
    $W[iNsTr_68_1684] : $float<11,52>
    // 		iNsTr_69 := (iNsTr_66 * iNsTr_68)
    //  file prog.aa, line 580
    // iNsTr_69
    $W[iNsTr_69_1689] : $float<11,52>
    // 		iNsTr_70 := (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 582
    // iNsTr_70
    $W[iNsTr_70_1695] : $int<1>
    // 		orx_xcondx_xix_xi := (iNsTr_47 | iNsTr_70)
    //  file prog.aa, line 583
    // orx_xcondx_xix_xi
    $W[orx_xcondx_xix_xi_1700] : $int<1>
    // if statement  
    //  file prog.aa, line 584
    // 		iNsTr_94 := (tmp11x_xix_xi * iNsTr_69)
    //  file prog.aa, line 588
    // iNsTr_94
    $W[iNsTr_94_1712] : $float<11,52>
    // 		iNsTr_95 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 589
    // iNsTr_95
    $W[iNsTr_95_1718] : $int<64>
    // 		iNsTr_96 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
    //  file prog.aa, line 590
    // iNsTr_96
    $W[iNsTr_96_1724] : $float<11,52>
    // 		iNsTr_97 := (iNsTr_56 | iNsTr_95)
    //  file prog.aa, line 591
    // iNsTr_97
    $W[iNsTr_97_1729] : $int<64>
    // 		iNsTr_98 := (iNsTr_69 * iNsTr_96)
    //  file prog.aa, line 592
    // iNsTr_98
    $W[iNsTr_98_1734] : $float<11,52>
    // 		tmp13x_xix_xi := ($bitcast ($float<11,52>) iNsTr_97 )
    //  file prog.aa, line 593
    // tmp13x_xix_xi
    $W[tmp13x_xix_xi_1738] : $float<11,52>
    // 		iNsTr_99 := (tmp13x_xix_xi * iNsTr_98)
    //  file prog.aa, line 594
    // iNsTr_99
    $W[iNsTr_99_1743] : $float<11,52>
    // 		phitmp19x_xix_xi := ($bitcast ($uint<64>) iNsTr_99 )
    //  file prog.aa, line 595
    // phitmp19x_xix_xi
    $W[phitmp19x_xix_xi_1747] : $int<64>
    // 		phitmp21x_xix_xi := (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 596
    // phitmp21x_xix_xi
    $W[phitmp21x_xix_xi_1753] : $int<64>
    // merge-statement  
    //  file prog.aa, line 599
    // 			$phi iNsTr_83 := 			  ($cast ($uint<64>) phitmp21x_xix_xi ) $on bb_20_iq_err_calcx_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_19_iq_err_calcx_xexit // type of target is $uint<64>
    //  file prog.aa, line 600
    // ($cast ($uint<64>) phitmp21x_xix_xi )
    $intermediate $W[type_cast_1759_wire] : $int<64>
    // iNsTr_83
    $W[iNsTr_83_1756] : $int<64>
    // 		iNsTr_84 := (torque_refx_x0 ^ tmp15x_xix_xi)
    //  file prog.aa, line 602
    // iNsTr_84
    $W[iNsTr_84_1768] : $int<64>
    // 		iNsTr_85 := (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 603
    // iNsTr_85
    $W[iNsTr_85_1774] : $int<64>
    // 		iNsTr_86 := (iNsTr_83 | iNsTr_85)
    //  file prog.aa, line 604
    // iNsTr_86
    $W[iNsTr_86_1779] : $int<64>
    // 		tmp4x_xix_xi := ($bitcast ($float<11,52>) iNsTr_86 )
    //  file prog.aa, line 605
    // tmp4x_xix_xi
    $W[tmp4x_xix_xi_1783] : $float<11,52>
    // 		iNsTr_87 := ($cast ($float<8,23>) tmp4x_xix_xi )
    //  file prog.aa, line 606
    // iNsTr_87
    $W[iNsTr_87_1787] : $float<8,23>
    // 		iNsTr_88 := (flux_refx_x0 - iNsTr_40)
    //  file prog.aa, line 607
    // iNsTr_88
    $W[iNsTr_88_1792] : $float<8,23>
    // 		iNsTr_89 := (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 608
    // iNsTr_89
    $W[iNsTr_89_1798] : $float<8,23>
    // 		iNsTr_90 := (iNsTr_89 + int_flux_err_temp_2x_x0)
    //  file prog.aa, line 609
    // iNsTr_90
    $W[iNsTr_90_1803] : $float<8,23>
    // 		iNsTr_91 := (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
    //  file prog.aa, line 610
    // iNsTr_91
    $W[iNsTr_91_1809] : $float<8,23>
    // 		iNsTr_92 := (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    //  file prog.aa, line 612
    // iNsTr_92
    $W[iNsTr_92_1815] : $int<1>
    // if statement  
    //  file prog.aa, line 613
    // 		iNsTr_105 := (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 618
    // iNsTr_105
    $W[iNsTr_105_1828] : $int<1>
    // if statement  
    //  file prog.aa, line 619
    // merge-statement  
    //  file prog.aa, line 625
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
    //  file prog.aa, line 626
    // ($cast ($float<8,23>) iNsTr_91 )
    $intermediate $W[type_cast_1841_wire] : $float<8,23>
    // int_flux_errx_x0
    $W[int_flux_errx_x0_1838] : $float<8,23>
    // 		iNsTr_101 := (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
    //  file prog.aa, line 628
    // iNsTr_101
    $W[iNsTr_101_1854] : $float<8,23>
    // 		iNsTr_102 := (int_flux_errx_x0 + iNsTr_101)
    //  file prog.aa, line 629
    // iNsTr_102
    $W[iNsTr_102_1859] : $float<8,23>
    // 		iNsTr_103 := (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    //  file prog.aa, line 631
    // iNsTr_103
    $W[iNsTr_103_1865] : $int<1>
    // if statement  
    //  file prog.aa, line 632
    // 		iNsTr_110 := (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    //  file prog.aa, line 637
    // iNsTr_110
    $W[iNsTr_110_1878] : $int<1>
    // if statement  
    //  file prog.aa, line 638
    // 		phitmp := ($cast ($float<11,52>) iNsTr_102 )
    //  file prog.aa, line 642
    // phitmp
    $W[phitmp_1889] : $float<11,52>
    // 		phitmp7 := ($bitcast ($uint<64>) phitmp )
    //  file prog.aa, line 643
    // phitmp7
    $W[phitmp7_1893] : $int<64>
    // 		iNsTr_126 := (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 644
    // iNsTr_126
    $W[iNsTr_126_1899] : $int<64>
    // 		iNsTr_127 := (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 646
    // iNsTr_127
    $W[iNsTr_127_1905] : $int<1>
    // if statement  
    //  file prog.aa, line 647
    // merge-statement  
    //  file prog.aa, line 649
    // 			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
    //  file prog.aa, line 650
    // ($cast ($uint<64>) phitmp7 )
    $intermediate $W[type_cast_1916_wire] : $int<64>
    // phitmp20x_xi15x_xin
    $W[phitmp20x_xi15x_xin_1913] : $int<64>
    // 		iNsTr_107 := (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 652
    // iNsTr_107
    $W[iNsTr_107_1929] : $int<64>
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_107 )
    //  file prog.aa, line 653
    // tmp13x_xi
    $W[tmp13x_xi_1933] : $float<11,52>
    // 		iNsTr_108 := (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
    //  file prog.aa, line 654
    // iNsTr_108
    $W[iNsTr_108_1939] : $float<11,52>
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_108 )
    //  file prog.aa, line 655
    // phitmp19x_xi
    $W[phitmp19x_xi_1943] : $int<64>
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 656
    // phitmp21x_xi
    $W[phitmp21x_xi_1949] : $int<64>
    // merge-statement  
    //  file prog.aa, line 659
    // 			$phi flux_addx_x0911 := 			  ($cast ($uint<64>) phitmp20x_xi15x_xin ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) phitmp7 ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 660
    // ($cast ($uint<64>) phitmp20x_xi15x_xin )
    $intermediate $W[type_cast_1955_wire] : $int<64>
    // ($cast ($uint<64>) phitmp7 )
    $intermediate $W[type_cast_1957_wire] : $int<64>
    // flux_addx_x0911
    $W[flux_addx_x0911_1952] : $int<64>
    // 			$phi iNsTr_113 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 661
    // ($cast ($uint<64>) phitmp21x_xi )
    $intermediate $W[type_cast_1961_wire] : $int<64>
    // iNsTr_113
    $W[iNsTr_113_1958] : $int<64>
    // 		iNsTr_114 := (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 663
    // iNsTr_114
    $W[iNsTr_114_1971] : $int<64>
    // 		iNsTr_115 := (iNsTr_113 | iNsTr_114)
    //  file prog.aa, line 664
    // iNsTr_115
    $W[iNsTr_115_1976] : $int<64>
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_115 )
    //  file prog.aa, line 665
    // tmp4x_xi
    $W[tmp4x_xi_1980] : $float<11,52>
    // 		iNsTr_116 := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 666
    // iNsTr_116
    $W[iNsTr_116_1984] : $float<8,23>
    // 		out_data1 := iNsTr_116
    //  file prog.aa, line 667
    // out_data1
    // 		out_data2 := iNsTr_87
    //  file prog.aa, line 668
    // out_data2
    // 		out_data3 := iNsTr_42
    //  file prog.aa, line 669
    // out_data3
    // 		out_data4 := iNsTr_40
    //  file prog.aa, line 670
    // out_data4
    // 		phitmp1 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    //  file prog.aa, line 671
    // phitmp1
    $W[phitmp1_2002] : $float<8,23>
    // 		phitmp2 := (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 672
    // phitmp2
    $W[phitmp2_2008] : $float<8,23>
    // 		phitmp3 := (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    //  file prog.aa, line 673
    // phitmp3
    $W[phitmp3_2014] : $float<8,23>
    // datapath-instances for block %vector_control_daemon%body
    //  file prog.aa, line 417
    // data-path instances for merge  
    //  file prog.aa, line 422
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 423
    // ($cast ($float<8,23>) iNsTr_42 )
    # := [type_cast_1175_inst] (iNsTr_42_1535) (type_cast_1175_wire) 
    $delay type_cast_1175_inst 1
    $phi [phi_stmt_1169] (type_cast_1173_wire_constant type_cast_1175_wire) ( theta_prevx_x0_1169 )
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 424
    // ($cast ($float<8,23>) phitmp1 )
    # := [type_cast_1182_inst] (phitmp1_2002) (type_cast_1182_wire) 
    $delay type_cast_1182_inst 1
    $phi [phi_stmt_1176] (type_cast_1180_wire_constant type_cast_1182_wire) ( flux_rotor_prevx_x0_1176 )
    // 			$phi int_speed_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_19 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 425
    // ($cast ($float<8,23>) iNsTr_19 )
    # := [type_cast_1189_inst] (iNsTr_19_1291) (type_cast_1189_wire) 
    $delay type_cast_1189_inst 1
    $phi [phi_stmt_1183] (type_cast_1187_wire_constant type_cast_1189_wire) ( int_speed_err_temp_2x_x0_1183 )
    // 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_90 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 426
    // ($cast ($float<8,23>) iNsTr_90 )
    # := [type_cast_1196_inst] (iNsTr_90_1803) (type_cast_1196_wire) 
    $delay type_cast_1196_inst 1
    $phi [phi_stmt_1190] (type_cast_1194_wire_constant type_cast_1196_wire) ( int_flux_err_temp_2x_x0_1190 )
    // 			$phi id_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp3 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 427
    // ($cast ($float<8,23>) phitmp3 )
    # := [type_cast_1203_inst] (phitmp3_2014) (type_cast_1203_wire) 
    $delay type_cast_1203_inst 1
    $phi [phi_stmt_1197] (type_cast_1201_wire_constant type_cast_1203_wire) ( id_prevx_x0_1197 )
    // 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.400000e+03 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 428
    // ($cast ($float<8,23>) speed_refx_x0 )
    # := [type_cast_1210_inst] (speed_refx_x0_1267) (type_cast_1210_wire) 
    $delay type_cast_1210_inst 1
    $phi [phi_stmt_1204] (type_cast_1208_wire_constant type_cast_1210_wire) ( speed_refx_x1_1204 )
    // 		iNsTr_2 := in_data1
    //  file prog.aa, line 430
    // in_data1
    $ioport $in [RPIPE_in_data1_1213_inst] (in_data1) (iNsTr_2_1214) 
    // 		iNsTr_4 := in_data2
    //  file prog.aa, line 431
    // in_data2
    $ioport $in [RPIPE_in_data2_1216_inst] (in_data2) (iNsTr_4_1217) 
    // 		iNsTr_6 := in_data3
    //  file prog.aa, line 432
    // in_data3
    $ioport $in [RPIPE_in_data3_1219_inst] (in_data3) (iNsTr_6_1220) 
    // 		iNsTr_8 := in_data4
    //  file prog.aa, line 433
    // in_data4
    $ioport $in [RPIPE_in_data4_1222_inst] (in_data4) (iNsTr_8_1223) 
    // 		iNsTr_10 := in_data5
    //  file prog.aa, line 434
    // in_data5
    $ioport $in [RPIPE_in_data5_1225_inst] (in_data5) (iNsTr_10_1226) 
    // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
    //  file prog.aa, line 436
    // (speed_refx_x1 < iNsTr_8)
    $S<$S[SLT_f32_u1_1230_inst] (speed_refx_x1_1204 iNsTr_8_1223) (iNsTr_11_1231) 
    $delay SLT_f32_u1_1230_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 437
    ==0? [if_stmt_1232_branch] (iNsTr_11_1231)
    // 		iNsTr_13 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 441
    // (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
    +[ADD_f32_f32_1243_inst] (speed_refx_x1_1204 type_cast_1242_wire_constant) (iNsTr_13_1244) 
    $delay ADD_f32_f32_1243_inst 24
    // 		iNsTr_15 := (speed_refx_x1 > iNsTr_8)
    //  file prog.aa, line 447
    // (speed_refx_x1 > iNsTr_8)
    $S>$S[SGT_f32_u1_1250_inst] (speed_refx_x1_1204 iNsTr_8_1223) (iNsTr_15_1251) 
    $delay SGT_f32_u1_1250_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 448
    ==0? [if_stmt_1252_branch] (iNsTr_15_1251)
    // 		iNsTr_24 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
    //  file prog.aa, line 452
    // (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
    +[ADD_f32_f32_1263_inst] (speed_refx_x1_1204 type_cast_1262_wire_constant) (iNsTr_24_1264) 
    $delay ADD_f32_f32_1263_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 455
    // 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_13 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 456
    // ($cast ($float<8,23>) iNsTr_13 )
    # := [type_cast_1270_inst] (iNsTr_13_1244) (type_cast_1270_wire) 
    $delay type_cast_1270_inst 1
    // ($cast ($float<8,23>) iNsTr_24 )
    # := [type_cast_1272_inst] (iNsTr_24_1264) (type_cast_1272_wire) 
    $delay type_cast_1272_inst 1
    // ($cast ($float<8,23>) speed_refx_x1 )
    # := [type_cast_1274_inst] (speed_refx_x1_1204) (type_cast_1274_wire) 
    $delay type_cast_1274_inst 1
    $phi [phi_stmt_1267] (type_cast_1270_wire type_cast_1272_wire type_cast_1274_wire) ( speed_refx_x0_1267 )
    // 		iNsTr_17 := (speed_refx_x0 - iNsTr_6)
    //  file prog.aa, line 458
    // (speed_refx_x0 - iNsTr_6)
    -[SUB_f32_f32_1279_inst] (speed_refx_x0_1267 iNsTr_6_1220) (iNsTr_17_1280) 
    $delay SUB_f32_f32_1279_inst 24
    // 		iNsTr_18 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 459
    // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_1285_inst] (iNsTr_17_1280 type_cast_1284_wire_constant) (iNsTr_18_1286) 
    $delay MUL_f32_f32_1285_inst 24
    // 		iNsTr_19 := (iNsTr_18 + int_speed_err_temp_2x_x0)
    //  file prog.aa, line 460
    // (iNsTr_18 + int_speed_err_temp_2x_x0)
    +[ADD_f32_f32_1290_inst] (iNsTr_18_1286 int_speed_err_temp_2x_x0_1183) (iNsTr_19_1291) 
    $delay ADD_f32_f32_1290_inst 24
    // 		iNsTr_20 := (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
    //  file prog.aa, line 461
    // (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
    *[MUL_f32_f32_1296_inst] (iNsTr_19_1291 type_cast_1295_wire_constant) (iNsTr_20_1297) 
    $delay MUL_f32_f32_1296_inst 24
    // 		iNsTr_21 := ($cast ($float<11,52>) iNsTr_20 )
    //  file prog.aa, line 462
    // ($cast ($float<11,52>) iNsTr_20 )
    $F:=$F [type_cast_1300_inst] (iNsTr_20_1297) (iNsTr_21_1301)  
    $delay type_cast_1300_inst 1
    // 		iNsTr_22 := (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
    //  file prog.aa, line 464
    // (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
    $S<$S[SLT_f64_u1_1306_inst] (iNsTr_21_1301 type_cast_1305_wire_constant) (iNsTr_22_1307) 
    $delay SLT_f64_u1_1306_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 465
    ==0? [if_stmt_1308_branch] (iNsTr_22_1307)
    // 		iNsTr_30 := (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
    //  file prog.aa, line 470
    // (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
    $S>$S[SGT_f64_u1_1319_inst] (iNsTr_21_1301 type_cast_1318_wire_constant) (iNsTr_30_1320) 
    $delay SGT_f64_u1_1319_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 471
    ==0? [if_stmt_1321_branch] (iNsTr_30_1320)
    // data-path instances for merge  
    //  file prog.aa, line 477
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_20 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 478
    // ($cast ($float<8,23>) iNsTr_20 )
    # := [type_cast_1333_inst] (iNsTr_20_1297) (type_cast_1333_wire) 
    $delay type_cast_1333_inst 1
    $phi [phi_stmt_1330] (type_cast_1333_wire type_cast_1336_wire_constant type_cast_1339_wire_constant) ( int_speed_errx_x0_1330 )
    // 		iNsTr_26 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 480
    // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    *[MUL_f32_f32_1345_inst] (iNsTr_17_1280 type_cast_1344_wire_constant) (iNsTr_26_1346) 
    $delay MUL_f32_f32_1345_inst 24
    // 		iNsTr_27 := (int_speed_errx_x0 + iNsTr_26)
    //  file prog.aa, line 481
    // (int_speed_errx_x0 + iNsTr_26)
    +[ADD_f32_f32_1350_inst] (int_speed_errx_x0_1330 iNsTr_26_1346) (iNsTr_27_1351) 
    $delay ADD_f32_f32_1350_inst 24
    // 		iNsTr_28 := (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
    //  file prog.aa, line 483
    // (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
    $S<$S[SLT_f32_u1_1356_inst] (iNsTr_27_1351 type_cast_1355_wire_constant) (iNsTr_28_1357) 
    $delay SLT_f32_u1_1356_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 484
    ==0? [if_stmt_1358_branch] (iNsTr_28_1357)
    // 		iNsTr_35 := (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 489
    // (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
    $S>$S[SGT_f32_u1_1369_inst] (iNsTr_27_1351 type_cast_1368_wire_constant) (iNsTr_35_1370) 
    $delay SGT_f32_u1_1369_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 490
    ==0? [if_stmt_1371_branch] (iNsTr_35_1370)
    // 		phitmp4 := (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
    //  file prog.aa, line 494
    // (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
    *[MUL_f32_f32_1382_inst] (iNsTr_27_1351 type_cast_1381_wire_constant) (phitmp4_1383) 
    $delay MUL_f32_f32_1382_inst 24
    // 		phitmp5 := ($cast ($float<11,52>) phitmp4 )
    //  file prog.aa, line 495
    // ($cast ($float<11,52>) phitmp4 )
    $F:=$F [type_cast_1386_inst] (phitmp4_1383) (phitmp5_1387)  
    $delay type_cast_1386_inst 1
    // 		phitmp6 := ($bitcast ($uint<64>) phitmp5 )
    //  file prog.aa, line 496
    // ($bitcast ($uint<64>) phitmp5 )
    # := [type_cast_1390_inst] (phitmp5_1387) (phitmp6_1391) 
    $delay type_cast_1390_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 499
    // 			$phi torque_refx_x0 := 			  ($cast ($uint<64>) phitmp6 ) $on bb_10_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_8_bb_11			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000001100000110101011100001010100000000000000000000000000000  ) ) $on bb_9_bb_11 // type of target is $uint<64>
    //  file prog.aa, line 500
    // ($cast ($uint<64>) phitmp6 )
    # := [type_cast_1397_inst] (phitmp6_1391) (type_cast_1397_wire) 
    $delay type_cast_1397_inst 1
    $phi [phi_stmt_1394] (type_cast_1397_wire type_cast_1400_wire_constant type_cast_1403_wire_constant) ( torque_refx_x0_1394 )
    // 		iNsTr_32 := ($cast ($float<11,52>) speed_refx_x0 )
    //  file prog.aa, line 502
    // ($cast ($float<11,52>) speed_refx_x0 )
    $F:=$F [type_cast_1407_inst] (speed_refx_x0_1267) (iNsTr_32_1408)  
    $delay type_cast_1407_inst 1
    // 		iNsTr_33 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    //  file prog.aa, line 504
    // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    $S>$S[SGT_f64_u1_1413_inst] (iNsTr_32_1408 type_cast_1412_wire_constant) (iNsTr_33_1414) 
    $delay SGT_f64_u1_1413_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 505
    ==0? [if_stmt_1415_branch] (iNsTr_33_1414)
    // 		iNsTr_38 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    //  file prog.aa, line 510
    // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    $S>$S[SGT_f64_u1_1426_inst] (iNsTr_32_1408 type_cast_1425_wire_constant) (iNsTr_38_1427) 
    $delay SGT_f64_u1_1426_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 511
    ==0? [if_stmt_1428_branch] (iNsTr_38_1427)
    // 		iNsTr_52 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    //  file prog.aa, line 515
    // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    *[MUL_f32_f32_1439_inst] (speed_refx_x0_1267 type_cast_1438_wire_constant) (iNsTr_52_1440) 
    $delay MUL_f32_f32_1439_inst 24
    // 		iNsTr_53 := (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    //  file prog.aa, line 516
    // (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    +[ADD_f32_f32_1445_inst] (iNsTr_52_1440 type_cast_1444_wire_constant) (iNsTr_53_1446) 
    $delay ADD_f32_f32_1445_inst 24
    // 		iNsTr_54 := (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 517
    // (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    *[MUL_f32_f32_1451_inst] (iNsTr_53_1446 type_cast_1450_wire_constant) (iNsTr_54_1452) 
    $delay MUL_f32_f32_1451_inst 24
    // 		iNsTr_50 := (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    //  file prog.aa, line 523
    // (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    $S>$S[SGT_f64_u1_1459_inst] (iNsTr_32_1408 type_cast_1458_wire_constant) (iNsTr_50_1460) 
    $delay SGT_f64_u1_1459_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 524
    ==0? [if_stmt_1461_branch] (iNsTr_50_1460)
    // 		iNsTr_79 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    //  file prog.aa, line 528
    // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    *[MUL_f32_f32_1472_inst] (speed_refx_x0_1267 type_cast_1471_wire_constant) (iNsTr_79_1473) 
    $delay MUL_f32_f32_1472_inst 24
    // 		iNsTr_80 := (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    //  file prog.aa, line 529
    // (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    +[ADD_f32_f32_1478_inst] (iNsTr_79_1473 type_cast_1477_wire_constant) (iNsTr_80_1479) 
    $delay ADD_f32_f32_1478_inst 24
    // 		iNsTr_81 := (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 530
    // (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    *[MUL_f32_f32_1484_inst] (iNsTr_80_1479 type_cast_1483_wire_constant) (iNsTr_81_1485) 
    $delay MUL_f32_f32_1484_inst 24
    // 		iNsTr_75 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    //  file prog.aa, line 535
    // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    *[MUL_f32_f32_1492_inst] (speed_refx_x0_1267 type_cast_1491_wire_constant) (iNsTr_75_1493) 
    $delay MUL_f32_f32_1492_inst 24
    // 		iNsTr_76 := (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    //  file prog.aa, line 536
    // (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    +[ADD_f32_f32_1498_inst] (iNsTr_75_1493 type_cast_1497_wire_constant) (iNsTr_76_1499) 
    $delay ADD_f32_f32_1498_inst 24
    // 		iNsTr_77 := (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 537
    // (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    *[MUL_f32_f32_1504_inst] (iNsTr_76_1499 type_cast_1503_wire_constant) (iNsTr_77_1505) 
    $delay MUL_f32_f32_1504_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 540
    // 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_54 ) $on bb_13_bb_17			  ($cast ($float<8,23>) iNsTr_81 ) $on bb_15_bb_17			  ($cast ($float<8,23>) iNsTr_77 ) $on bb_16_bb_17			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e-01 ) ) $on bb_11_bb_17 // type of target is $float<8,23>
    //  file prog.aa, line 541
    // ($cast ($float<8,23>) iNsTr_54 )
    # := [type_cast_1511_inst] (iNsTr_54_1452) (type_cast_1511_wire) 
    $delay type_cast_1511_inst 1
    // ($cast ($float<8,23>) iNsTr_81 )
    # := [type_cast_1513_inst] (iNsTr_81_1485) (type_cast_1513_wire) 
    $delay type_cast_1513_inst 1
    // ($cast ($float<8,23>) iNsTr_77 )
    # := [type_cast_1515_inst] (iNsTr_77_1505) (type_cast_1515_wire) 
    $delay type_cast_1515_inst 1
    $phi [phi_stmt_1508] (type_cast_1511_wire type_cast_1513_wire type_cast_1515_wire type_cast_1518_wire_constant) ( flux_refx_x0_1508 )
    // 		iNsTr_40 := (id_prevx_x0 + flux_rotor_prevx_x0)
    //  file prog.aa, line 543
    // (id_prevx_x0 + flux_rotor_prevx_x0)
    +[ADD_f32_f32_1523_inst] (id_prevx_x0_1197 flux_rotor_prevx_x0_1176) (iNsTr_40_1524) 
    $delay ADD_f32_f32_1523_inst 24
    // 		iNsTr_41 := (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 544
    // (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_1529_inst] (iNsTr_10_1226 type_cast_1528_wire_constant) (iNsTr_41_1530) 
    $delay MUL_f32_f32_1529_inst 24
    // 		iNsTr_42 := (iNsTr_41 + theta_prevx_x0)
    //  file prog.aa, line 545
    // (iNsTr_41 + theta_prevx_x0)
    +[ADD_f32_f32_1534_inst] (iNsTr_41_1530 theta_prevx_x0_1169) (iNsTr_42_1535) 
    $delay ADD_f32_f32_1534_inst 24
    // 		iNsTr_43 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    //  file prog.aa, line 546
    // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    *[MUL_f32_f32_1540_inst] (iNsTr_40_1524 type_cast_1539_wire_constant) (iNsTr_43_1541) 
    $delay MUL_f32_f32_1540_inst 24
    // 		iNsTr_44 := ($cast ($float<11,52>) iNsTr_43 )
    //  file prog.aa, line 547
    // ($cast ($float<11,52>) iNsTr_43 )
    $F:=$F [type_cast_1544_inst] (iNsTr_43_1541) (iNsTr_44_1545)  
    $delay type_cast_1544_inst 1
    // 		tmp15x_xix_xi := ($bitcast ($uint<64>) iNsTr_44 )
    //  file prog.aa, line 548
    // ($bitcast ($uint<64>) iNsTr_44 )
    # := [type_cast_1548_inst] (iNsTr_44_1545) (tmp15x_xix_xi_1549) 
    $delay type_cast_1548_inst 1
    // 		iNsTr_45 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 549
    // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1554_inst] (torque_refx_x0_1394 type_cast_1553_wire_constant) (iNsTr_45_1555) 
    $delay AND_u64_u64_1554_inst 1
    // 		iNsTr_46 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 550
    // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1560_inst] (tmp15x_xix_xi_1549 type_cast_1559_wire_constant) (iNsTr_46_1561) 
    $delay AND_u64_u64_1560_inst 1
    // 		iNsTr_47 := (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 552
    // (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_1566_inst] (iNsTr_45_1555 type_cast_1565_wire_constant) (iNsTr_47_1567) 
    $delay EQ_u64_u1_1566_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 553
    ==0? [if_stmt_1568_branch] (iNsTr_47_1567)
    // 		iNsTr_72 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 557
    // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1579_inst] (tmp15x_xix_xi_1549 type_cast_1578_wire_constant) (iNsTr_72_1580) 
    $delay AND_u64_u64_1579_inst 1
    // 		tmp17x_xmaskx_xix_xi := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 558
    // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1585_inst] (torque_refx_x0_1394 type_cast_1584_wire_constant) (tmp17x_xmaskx_xix_xi_1586) 
    $delay AND_u64_u64_1585_inst 1
    // 		iNsTr_73 := (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
    //  file prog.aa, line 559
    // (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
    -[SUB_u64_u64_1591_inst] (type_cast_1589_wire_constant iNsTr_72_1580) (iNsTr_73_1592) 
    $delay SUB_u64_u64_1591_inst 1
    // 		phitmpx_xix_xi := (iNsTr_73 + tmp17x_xmaskx_xix_xi)
    //  file prog.aa, line 560
    // (iNsTr_73 + tmp17x_xmaskx_xix_xi)
    +[ADD_u64_u64_1596_inst] (iNsTr_73_1592 tmp17x_xmaskx_xix_xi_1586) (phitmpx_xix_xi_1597) 
    $delay ADD_u64_u64_1596_inst 1
    // 		phitmp20x_xix_xi := (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 561
    // (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1602_inst] (phitmpx_xix_xi_1597 type_cast_1601_wire_constant) (phitmp20x_xix_xi_1603) 
    $delay AND_u64_u64_1602_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 564
    // 			$phi iNsTr_56 := 			  ($cast ($uint<64>) phitmp20x_xix_xi ) $on bb_18_bb_19			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_17_bb_19 // type of target is $uint<64>
    //  file prog.aa, line 565
    // ($cast ($uint<64>) phitmp20x_xix_xi )
    # := [type_cast_1609_inst] (phitmp20x_xix_xi_1603) (type_cast_1609_wire) 
    $delay type_cast_1609_inst 1
    $phi [phi_stmt_1606] (type_cast_1609_wire type_cast_1612_wire_constant) ( iNsTr_56_1606 )
    // 		iNsTr_57 := (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 567
    // (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
    |[OR_u64_u64_1618_inst] (tmp15x_xix_xi_1549 type_cast_1617_wire_constant) (iNsTr_57_1619) 
    $delay OR_u64_u64_1618_inst 1
    // 		iNsTr_58 := (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 568
    // (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1624_inst] (iNsTr_57_1619 type_cast_1623_wire_constant) (iNsTr_58_1625) 
    $delay AND_u64_u64_1624_inst 1
    // 		tmp11x_xix_xi := ($bitcast ($float<11,52>) iNsTr_58 )
    //  file prog.aa, line 569
    // ($bitcast ($float<11,52>) iNsTr_58 )
    # := [type_cast_1628_inst] (iNsTr_58_1625) (tmp11x_xix_xi_1629) 
    $delay type_cast_1628_inst 1
    // 		iNsTr_59 := (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    //  file prog.aa, line 570
    // (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
    *[MUL_f64_f64_1634_inst] (tmp11x_xix_xi_1629 type_cast_1633_wire_constant) (iNsTr_59_1635) 
    $delay MUL_f64_f64_1634_inst 24
    // 		iNsTr_60 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
    //  file prog.aa, line 571
    // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
    -[SUB_f64_f64_1640_inst] (type_cast_1638_wire_constant iNsTr_59_1635) (iNsTr_60_1641) 
    $delay SUB_f64_f64_1640_inst 24
    // 		iNsTr_61 := (tmp11x_xix_xi * iNsTr_60)
    //  file prog.aa, line 572
    // (tmp11x_xix_xi * iNsTr_60)
    *[MUL_f64_f64_1645_inst] (tmp11x_xix_xi_1629 iNsTr_60_1641) (iNsTr_61_1646) 
    $delay MUL_f64_f64_1645_inst 24
    // 		iNsTr_62 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
    //  file prog.aa, line 573
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
    -[SUB_f64_f64_1651_inst] (type_cast_1649_wire_constant iNsTr_61_1646) (iNsTr_62_1652) 
    $delay SUB_f64_f64_1651_inst 24
    // 		iNsTr_63 := (iNsTr_60 * iNsTr_62)
    //  file prog.aa, line 574
    // (iNsTr_60 * iNsTr_62)
    *[MUL_f64_f64_1656_inst] (iNsTr_60_1641 iNsTr_62_1652) (iNsTr_63_1657) 
    $delay MUL_f64_f64_1656_inst 24
    // 		iNsTr_64 := (tmp11x_xix_xi * iNsTr_63)
    //  file prog.aa, line 575
    // (tmp11x_xix_xi * iNsTr_63)
    *[MUL_f64_f64_1661_inst] (tmp11x_xix_xi_1629 iNsTr_63_1657) (iNsTr_64_1662) 
    $delay MUL_f64_f64_1661_inst 24
    // 		iNsTr_65 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
    //  file prog.aa, line 576
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
    -[SUB_f64_f64_1667_inst] (type_cast_1665_wire_constant iNsTr_64_1662) (iNsTr_65_1668) 
    $delay SUB_f64_f64_1667_inst 24
    // 		iNsTr_66 := (iNsTr_63 * iNsTr_65)
    //  file prog.aa, line 577
    // (iNsTr_63 * iNsTr_65)
    *[MUL_f64_f64_1672_inst] (iNsTr_63_1657 iNsTr_65_1668) (iNsTr_66_1673) 
    $delay MUL_f64_f64_1672_inst 24
    // 		iNsTr_67 := (tmp11x_xix_xi * iNsTr_66)
    //  file prog.aa, line 578
    // (tmp11x_xix_xi * iNsTr_66)
    *[MUL_f64_f64_1677_inst] (tmp11x_xix_xi_1629 iNsTr_66_1673) (iNsTr_67_1678) 
    $delay MUL_f64_f64_1677_inst 24
    // 		iNsTr_68 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
    //  file prog.aa, line 579
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
    -[SUB_f64_f64_1683_inst] (type_cast_1681_wire_constant iNsTr_67_1678) (iNsTr_68_1684) 
    $delay SUB_f64_f64_1683_inst 24
    // 		iNsTr_69 := (iNsTr_66 * iNsTr_68)
    //  file prog.aa, line 580
    // (iNsTr_66 * iNsTr_68)
    *[MUL_f64_f64_1688_inst] (iNsTr_66_1673 iNsTr_68_1684) (iNsTr_69_1689) 
    $delay MUL_f64_f64_1688_inst 24
    // 		iNsTr_70 := (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 582
    // (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_1694_inst] (iNsTr_46_1561 type_cast_1693_wire_constant) (iNsTr_70_1695) 
    $delay EQ_u64_u1_1694_inst 1
    // 		orx_xcondx_xix_xi := (iNsTr_47 | iNsTr_70)
    //  file prog.aa, line 583
    // (iNsTr_47 | iNsTr_70)
    |[OR_u1_u1_1699_inst] (iNsTr_47_1567 iNsTr_70_1695) (orx_xcondx_xix_xi_1700) 
    $delay OR_u1_u1_1699_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 584
    ==0? [if_stmt_1701_branch] (orx_xcondx_xix_xi_1700)
    // 		iNsTr_94 := (tmp11x_xix_xi * iNsTr_69)
    //  file prog.aa, line 588
    // (tmp11x_xix_xi * iNsTr_69)
    *[MUL_f64_f64_1711_inst] (tmp11x_xix_xi_1629 iNsTr_69_1689) (iNsTr_94_1712) 
    $delay MUL_f64_f64_1711_inst 24
    // 		iNsTr_95 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 589
    // (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1717_inst] (torque_refx_x0_1394 type_cast_1716_wire_constant) (iNsTr_95_1718) 
    $delay AND_u64_u64_1717_inst 1
    // 		iNsTr_96 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
    //  file prog.aa, line 590
    // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
    -[SUB_f64_f64_1723_inst] (type_cast_1721_wire_constant iNsTr_94_1712) (iNsTr_96_1724) 
    $delay SUB_f64_f64_1723_inst 24
    // 		iNsTr_97 := (iNsTr_56 | iNsTr_95)
    //  file prog.aa, line 591
    // (iNsTr_56 | iNsTr_95)
    |[OR_u64_u64_1728_inst] (iNsTr_56_1606 iNsTr_95_1718) (iNsTr_97_1729) 
    $delay OR_u64_u64_1728_inst 1
    // 		iNsTr_98 := (iNsTr_69 * iNsTr_96)
    //  file prog.aa, line 592
    // (iNsTr_69 * iNsTr_96)
    *[MUL_f64_f64_1733_inst] (iNsTr_69_1689 iNsTr_96_1724) (iNsTr_98_1734) 
    $delay MUL_f64_f64_1733_inst 24
    // 		tmp13x_xix_xi := ($bitcast ($float<11,52>) iNsTr_97 )
    //  file prog.aa, line 593
    // ($bitcast ($float<11,52>) iNsTr_97 )
    # := [type_cast_1737_inst] (iNsTr_97_1729) (tmp13x_xix_xi_1738) 
    $delay type_cast_1737_inst 1
    // 		iNsTr_99 := (tmp13x_xix_xi * iNsTr_98)
    //  file prog.aa, line 594
    // (tmp13x_xix_xi * iNsTr_98)
    *[MUL_f64_f64_1742_inst] (tmp13x_xix_xi_1738 iNsTr_98_1734) (iNsTr_99_1743) 
    $delay MUL_f64_f64_1742_inst 24
    // 		phitmp19x_xix_xi := ($bitcast ($uint<64>) iNsTr_99 )
    //  file prog.aa, line 595
    // ($bitcast ($uint<64>) iNsTr_99 )
    # := [type_cast_1746_inst] (iNsTr_99_1743) (phitmp19x_xix_xi_1747) 
    $delay type_cast_1746_inst 1
    // 		phitmp21x_xix_xi := (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 596
    // (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1752_inst] (phitmp19x_xix_xi_1747 type_cast_1751_wire_constant) (phitmp21x_xix_xi_1753) 
    $delay AND_u64_u64_1752_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 599
    // 			$phi iNsTr_83 := 			  ($cast ($uint<64>) phitmp21x_xix_xi ) $on bb_20_iq_err_calcx_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_19_iq_err_calcx_xexit // type of target is $uint<64>
    //  file prog.aa, line 600
    // ($cast ($uint<64>) phitmp21x_xix_xi )
    # := [type_cast_1759_inst] (phitmp21x_xix_xi_1753) (type_cast_1759_wire) 
    $delay type_cast_1759_inst 1
    $phi [phi_stmt_1756] (type_cast_1759_wire type_cast_1762_wire_constant) ( iNsTr_83_1756 )
    // 		iNsTr_84 := (torque_refx_x0 ^ tmp15x_xix_xi)
    //  file prog.aa, line 602
    // (torque_refx_x0 ^ tmp15x_xix_xi)
    ^[XOR_u64_u64_1767_inst] (torque_refx_x0_1394 tmp15x_xix_xi_1549) (iNsTr_84_1768) 
    $delay XOR_u64_u64_1767_inst 1
    // 		iNsTr_85 := (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 603
    // (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1773_inst] (iNsTr_84_1768 type_cast_1772_wire_constant) (iNsTr_85_1774) 
    $delay AND_u64_u64_1773_inst 1
    // 		iNsTr_86 := (iNsTr_83 | iNsTr_85)
    //  file prog.aa, line 604
    // (iNsTr_83 | iNsTr_85)
    |[OR_u64_u64_1778_inst] (iNsTr_83_1756 iNsTr_85_1774) (iNsTr_86_1779) 
    $delay OR_u64_u64_1778_inst 1
    // 		tmp4x_xix_xi := ($bitcast ($float<11,52>) iNsTr_86 )
    //  file prog.aa, line 605
    // ($bitcast ($float<11,52>) iNsTr_86 )
    # := [type_cast_1782_inst] (iNsTr_86_1779) (tmp4x_xix_xi_1783) 
    $delay type_cast_1782_inst 1
    // 		iNsTr_87 := ($cast ($float<8,23>) tmp4x_xix_xi )
    //  file prog.aa, line 606
    // ($cast ($float<8,23>) tmp4x_xix_xi )
    $F:=$F [type_cast_1786_inst] (tmp4x_xix_xi_1783) (iNsTr_87_1787)  
    $delay type_cast_1786_inst 1
    // 		iNsTr_88 := (flux_refx_x0 - iNsTr_40)
    //  file prog.aa, line 607
    // (flux_refx_x0 - iNsTr_40)
    -[SUB_f32_f32_1791_inst] (flux_refx_x0_1508 iNsTr_40_1524) (iNsTr_88_1792) 
    $delay SUB_f32_f32_1791_inst 24
    // 		iNsTr_89 := (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 608
    // (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_1797_inst] (iNsTr_88_1792 type_cast_1796_wire_constant) (iNsTr_89_1798) 
    $delay MUL_f32_f32_1797_inst 24
    // 		iNsTr_90 := (iNsTr_89 + int_flux_err_temp_2x_x0)
    //  file prog.aa, line 609
    // (iNsTr_89 + int_flux_err_temp_2x_x0)
    +[ADD_f32_f32_1802_inst] (iNsTr_89_1798 int_flux_err_temp_2x_x0_1190) (iNsTr_90_1803) 
    $delay ADD_f32_f32_1802_inst 24
    // 		iNsTr_91 := (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
    //  file prog.aa, line 610
    // (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
    *[MUL_f32_f32_1808_inst] (iNsTr_90_1803 type_cast_1807_wire_constant) (iNsTr_91_1809) 
    $delay MUL_f32_f32_1808_inst 24
    // 		iNsTr_92 := (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    //  file prog.aa, line 612
    // (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    $S<$S[SLT_f32_u1_1814_inst] (iNsTr_91_1809 type_cast_1813_wire_constant) (iNsTr_92_1815) 
    $delay SLT_f32_u1_1814_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 613
    ==0? [if_stmt_1816_branch] (iNsTr_92_1815)
    // 		iNsTr_105 := (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 618
    // (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    $S>$S[SGT_f32_u1_1827_inst] (iNsTr_91_1809 type_cast_1826_wire_constant) (iNsTr_105_1828) 
    $delay SGT_f32_u1_1827_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 619
    ==0? [if_stmt_1829_branch] (iNsTr_105_1828)
    // data-path instances for merge  
    //  file prog.aa, line 625
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_91 ) $on bb_23_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_24			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_22_bb_24 // type of target is $float<8,23>
    //  file prog.aa, line 626
    // ($cast ($float<8,23>) iNsTr_91 )
    # := [type_cast_1841_inst] (iNsTr_91_1809) (type_cast_1841_wire) 
    $delay type_cast_1841_inst 1
    $phi [phi_stmt_1838] (type_cast_1841_wire type_cast_1844_wire_constant type_cast_1847_wire_constant) ( int_flux_errx_x0_1838 )
    // 		iNsTr_101 := (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
    //  file prog.aa, line 628
    // (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
    *[MUL_f32_f32_1853_inst] (iNsTr_88_1792 type_cast_1852_wire_constant) (iNsTr_101_1854) 
    $delay MUL_f32_f32_1853_inst 24
    // 		iNsTr_102 := (int_flux_errx_x0 + iNsTr_101)
    //  file prog.aa, line 629
    // (int_flux_errx_x0 + iNsTr_101)
    +[ADD_f32_f32_1858_inst] (int_flux_errx_x0_1838 iNsTr_101_1854) (iNsTr_102_1859) 
    $delay ADD_f32_f32_1858_inst 24
    // 		iNsTr_103 := (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    //  file prog.aa, line 631
    // (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    $S<$S[SLT_f32_u1_1864_inst] (iNsTr_102_1859 type_cast_1863_wire_constant) (iNsTr_103_1865) 
    $delay SLT_f32_u1_1864_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 632
    ==0? [if_stmt_1866_branch] (iNsTr_103_1865)
    // 		iNsTr_110 := (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    //  file prog.aa, line 637
    // (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    $S>$S[SGT_f32_u1_1877_inst] (iNsTr_102_1859 type_cast_1876_wire_constant) (iNsTr_110_1878) 
    $delay SGT_f32_u1_1877_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 638
    ==0? [if_stmt_1879_branch] (iNsTr_110_1878)
    // 		phitmp := ($cast ($float<11,52>) iNsTr_102 )
    //  file prog.aa, line 642
    // ($cast ($float<11,52>) iNsTr_102 )
    $F:=$F [type_cast_1888_inst] (iNsTr_102_1859) (phitmp_1889)  
    $delay type_cast_1888_inst 1
    // 		phitmp7 := ($bitcast ($uint<64>) phitmp )
    //  file prog.aa, line 643
    // ($bitcast ($uint<64>) phitmp )
    # := [type_cast_1892_inst] (phitmp_1889) (phitmp7_1893) 
    $delay type_cast_1892_inst 1
    // 		iNsTr_126 := (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 644
    // (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1898_inst] (phitmp7_1893 type_cast_1897_wire_constant) (iNsTr_126_1899) 
    $delay AND_u64_u64_1898_inst 1
    // 		iNsTr_127 := (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 646
    // (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_1904_inst] (iNsTr_126_1899 type_cast_1903_wire_constant) (iNsTr_127_1905) 
    $delay EQ_u64_u1_1904_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 647
    ==0? [if_stmt_1906_branch] (iNsTr_127_1905)
    // data-path instances for merge  
    //  file prog.aa, line 649
    // 			$phi phitmp20x_xi15x_xin := 			  ($cast ($uint<64>) phitmp7 ) $on bb_26_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b1100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_24_xx_xthread12			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0100000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_25_xx_xthread12 // type of target is $uint<64>
    //  file prog.aa, line 650
    // ($cast ($uint<64>) phitmp7 )
    # := [type_cast_1916_inst] (phitmp7_1893) (type_cast_1916_wire) 
    $delay type_cast_1916_inst 1
    $phi [phi_stmt_1913] (type_cast_1916_wire type_cast_1919_wire_constant type_cast_1922_wire_constant) ( phitmp20x_xi15x_xin_1913 )
    // 		iNsTr_107 := (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 652
    // (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1928_inst] (phitmp20x_xi15x_xin_1913 type_cast_1927_wire_constant) (iNsTr_107_1929) 
    $delay AND_u64_u64_1928_inst 1
    // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_107 )
    //  file prog.aa, line 653
    // ($bitcast ($float<11,52>) iNsTr_107 )
    # := [type_cast_1932_inst] (iNsTr_107_1929) (tmp13x_xi_1933) 
    $delay type_cast_1932_inst 1
    // 		iNsTr_108 := (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
    //  file prog.aa, line 654
    // (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
    *[MUL_f64_f64_1938_inst] (tmp13x_xi_1933 type_cast_1937_wire_constant) (iNsTr_108_1939) 
    $delay MUL_f64_f64_1938_inst 24
    // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_108 )
    //  file prog.aa, line 655
    // ($bitcast ($uint<64>) iNsTr_108 )
    # := [type_cast_1942_inst] (iNsTr_108_1939) (phitmp19x_xi_1943) 
    $delay type_cast_1942_inst 1
    // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    //  file prog.aa, line 656
    // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
    &[AND_u64_u64_1948_inst] (phitmp19x_xi_1943 type_cast_1947_wire_constant) (phitmp21x_xi_1949) 
    $delay AND_u64_u64_1948_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 659
    // 			$phi flux_addx_x0911 := 			  ($cast ($uint<64>) phitmp20x_xi15x_xin ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) phitmp7 ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 660
    // ($cast ($uint<64>) phitmp20x_xi15x_xin )
    # := [type_cast_1955_inst] (phitmp20x_xi15x_xin_1913) (type_cast_1955_wire) 
    $delay type_cast_1955_inst 1
    // ($cast ($uint<64>) phitmp7 )
    # := [type_cast_1957_inst] (phitmp7_1893) (type_cast_1957_wire) 
    $delay type_cast_1957_inst 1
    $phi [phi_stmt_1952] (type_cast_1955_wire type_cast_1957_wire) ( flux_addx_x0911_1952 )
    // 			$phi iNsTr_113 := 			  ($cast ($uint<64>) phitmp21x_xi ) $on xx_xthread12_fdiv32x_xexit			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bb_26_fdiv32x_xexit // type of target is $uint<64>
    //  file prog.aa, line 661
    // ($cast ($uint<64>) phitmp21x_xi )
    # := [type_cast_1961_inst] (phitmp21x_xi_1949) (type_cast_1961_wire) 
    $delay type_cast_1961_inst 1
    $phi [phi_stmt_1958] (type_cast_1961_wire type_cast_1964_wire_constant) ( iNsTr_113_1958 )
    // 		iNsTr_114 := (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    //  file prog.aa, line 663
    // (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
    &[AND_u64_u64_1970_inst] (flux_addx_x0911_1952 type_cast_1969_wire_constant) (iNsTr_114_1971) 
    $delay AND_u64_u64_1970_inst 1
    // 		iNsTr_115 := (iNsTr_113 | iNsTr_114)
    //  file prog.aa, line 664
    // (iNsTr_113 | iNsTr_114)
    |[OR_u64_u64_1975_inst] (iNsTr_113_1958 iNsTr_114_1971) (iNsTr_115_1976) 
    $delay OR_u64_u64_1975_inst 1
    // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_115 )
    //  file prog.aa, line 665
    // ($bitcast ($float<11,52>) iNsTr_115 )
    # := [type_cast_1979_inst] (iNsTr_115_1976) (tmp4x_xi_1980) 
    $delay type_cast_1979_inst 1
    // 		iNsTr_116 := ($cast ($float<8,23>) tmp4x_xi )
    //  file prog.aa, line 666
    // ($cast ($float<8,23>) tmp4x_xi )
    $F:=$F [type_cast_1983_inst] (tmp4x_xi_1980) (iNsTr_116_1984)  
    $delay type_cast_1983_inst 1
    // 		out_data1 := iNsTr_116
    //  file prog.aa, line 667
    // out_data1
    $ioport $out [WPIPE_out_data1_1985_inst]  (iNsTr_116_1984) (out_data1) 
    $buffering $in WPIPE_out_data1_1985_inst iNsTr_116_1984 1
    // 		out_data2 := iNsTr_87
    //  file prog.aa, line 668
    // out_data2
    $ioport $out [WPIPE_out_data2_1988_inst]  (iNsTr_87_1787) (out_data2) 
    $buffering $in WPIPE_out_data2_1988_inst iNsTr_87_1787 1
    // 		out_data3 := iNsTr_42
    //  file prog.aa, line 669
    // out_data3
    $ioport $out [WPIPE_out_data3_1991_inst]  (iNsTr_42_1535) (out_data3) 
    $buffering $in WPIPE_out_data3_1991_inst iNsTr_42_1535 1
    // 		out_data4 := iNsTr_40
    //  file prog.aa, line 670
    // out_data4
    $ioport $out [WPIPE_out_data4_1994_inst]  (iNsTr_40_1524) (out_data4) 
    $buffering $in WPIPE_out_data4_1994_inst iNsTr_40_1524 1
    // 		phitmp1 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    //  file prog.aa, line 671
    // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
    *[MUL_f32_f32_2001_inst] (iNsTr_40_1524 type_cast_2000_wire_constant) (phitmp1_2002) 
    $delay MUL_f32_f32_2001_inst 24
    // 		phitmp2 := (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 672
    // (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    *[MUL_f32_f32_2007_inst] (iNsTr_2_1214 type_cast_2006_wire_constant) (phitmp2_2008) 
    $delay MUL_f32_f32_2007_inst 24
    // 		phitmp3 := (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    //  file prog.aa, line 673
    // (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
    *[MUL_f32_f32_2013_inst] (phitmp2_2008 type_cast_2012_wire_constant) (phitmp3_2014) 
    $delay MUL_f32_f32_2013_inst 24
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.aa, line 422
  // ($cast ($float<8,23>) iNsTr_42 )
  type_cast_1175_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_sources/type_cast_1175/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_sources/type_cast_1175/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_sources/type_cast_1175/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_sources/type_cast_1175/SplitProtocol/Update/ca)
  phi_stmt_1169 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1169/phi_stmt_1169_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1169_ack)
  // ($cast ($float<8,23>) phitmp1 )
  type_cast_1182_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_sources/type_cast_1182/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_sources/type_cast_1182/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_sources/type_cast_1182/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_sources/type_cast_1182/SplitProtocol/Update/ca)
  phi_stmt_1176 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1176/phi_stmt_1176_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1176_ack)
  // ($cast ($float<8,23>) iNsTr_19 )
  type_cast_1189_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_sources/type_cast_1189/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_sources/type_cast_1189/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_sources/type_cast_1189/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_sources/type_cast_1189/SplitProtocol/Update/ca)
  phi_stmt_1183 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1183/phi_stmt_1183_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1183_ack)
  // ($cast ($float<8,23>) iNsTr_90 )
  type_cast_1196_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_sources/type_cast_1196/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_sources/type_cast_1196/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_sources/type_cast_1196/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_sources/type_cast_1196/SplitProtocol/Update/ca)
  phi_stmt_1190 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1190/phi_stmt_1190_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1190_ack)
  // ($cast ($float<8,23>) phitmp3 )
  type_cast_1203_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_sources/type_cast_1203/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_sources/type_cast_1203/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_sources/type_cast_1203/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_sources/type_cast_1203/SplitProtocol/Update/ca)
  phi_stmt_1197 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1197/phi_stmt_1197_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1197_ack)
  // ($cast ($float<8,23>) speed_refx_x0 )
  type_cast_1210_inst <=> (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_sources/type_cast_1210/SplitProtocol/Sample/rr branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_sources/type_cast_1210/SplitProtocol/Update/cr) (branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_sources/type_cast_1210/SplitProtocol/Sample/ra branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_sources/type_cast_1210/SplitProtocol/Update/ca)
  phi_stmt_1204 <=> (branch_block_stmt_1166/bb_0_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_req branch_block_stmt_1166/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1204/phi_stmt_1204_req) (branch_block_stmt_1166/merge_stmt_1168_PhiAck/phi_stmt_1204_ack)
  // 		iNsTr_2 := in_data1
  //  file prog.aa, line 430
  // in_data1
  RPIPE_in_data1_1213_inst <=> (branch_block_stmt_1166/assign_stmt_1214/RPIPE_in_data1_1213_Sample/rr branch_block_stmt_1166/assign_stmt_1214/RPIPE_in_data1_1213_Update/cr) (branch_block_stmt_1166/assign_stmt_1214/RPIPE_in_data1_1213_Sample/ra branch_block_stmt_1166/assign_stmt_1214/RPIPE_in_data1_1213_Update/ca)
  // 		iNsTr_4 := in_data2
  //  file prog.aa, line 431
  // in_data2
  RPIPE_in_data2_1216_inst <=> (branch_block_stmt_1166/assign_stmt_1217/RPIPE_in_data2_1216_Sample/rr branch_block_stmt_1166/assign_stmt_1217/RPIPE_in_data2_1216_Update/cr) (branch_block_stmt_1166/assign_stmt_1217/RPIPE_in_data2_1216_Sample/ra branch_block_stmt_1166/assign_stmt_1217/RPIPE_in_data2_1216_Update/ca)
  // 		iNsTr_6 := in_data3
  //  file prog.aa, line 432
  // in_data3
  RPIPE_in_data3_1219_inst <=> (branch_block_stmt_1166/assign_stmt_1220/RPIPE_in_data3_1219_Sample/rr branch_block_stmt_1166/assign_stmt_1220/RPIPE_in_data3_1219_Update/cr) (branch_block_stmt_1166/assign_stmt_1220/RPIPE_in_data3_1219_Sample/ra branch_block_stmt_1166/assign_stmt_1220/RPIPE_in_data3_1219_Update/ca)
  // 		iNsTr_8 := in_data4
  //  file prog.aa, line 433
  // in_data4
  RPIPE_in_data4_1222_inst <=> (branch_block_stmt_1166/assign_stmt_1223/RPIPE_in_data4_1222_Sample/rr branch_block_stmt_1166/assign_stmt_1223/RPIPE_in_data4_1222_Update/cr) (branch_block_stmt_1166/assign_stmt_1223/RPIPE_in_data4_1222_Sample/ra branch_block_stmt_1166/assign_stmt_1223/RPIPE_in_data4_1222_Update/ca)
  // 		iNsTr_10 := in_data5
  //  file prog.aa, line 434
  // in_data5
  RPIPE_in_data5_1225_inst <=> (branch_block_stmt_1166/assign_stmt_1226/RPIPE_in_data5_1225_Sample/rr branch_block_stmt_1166/assign_stmt_1226/RPIPE_in_data5_1225_Update/cr) (branch_block_stmt_1166/assign_stmt_1226/RPIPE_in_data5_1225_Sample/ra branch_block_stmt_1166/assign_stmt_1226/RPIPE_in_data5_1225_Update/ca)
  // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
  //  file prog.aa, line 436
  // (speed_refx_x1 < iNsTr_8)
  SLT_f32_u1_1230_inst <=> (branch_block_stmt_1166/assign_stmt_1231/SLT_f32_u1_1230_Sample/rr branch_block_stmt_1166/assign_stmt_1231/SLT_f32_u1_1230_Update/cr) (branch_block_stmt_1166/assign_stmt_1231/SLT_f32_u1_1230_Sample/ra branch_block_stmt_1166/assign_stmt_1231/SLT_f32_u1_1230_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 437
  if_stmt_1232_branch <=> (branch_block_stmt_1166/if_stmt_1232_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1232_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1232_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 439
  // 		iNsTr_13 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
  //  file prog.aa, line 441
  // (speed_refx_x1 + ($bitcast ($float<8,23>) _f5.000000e+00 ))
  ADD_f32_f32_1243_inst <=> (branch_block_stmt_1166/assign_stmt_1244/ADD_f32_f32_1243_Sample/rr branch_block_stmt_1166/assign_stmt_1244/ADD_f32_f32_1243_Update/cr) (branch_block_stmt_1166/assign_stmt_1244/ADD_f32_f32_1243_Sample/ra branch_block_stmt_1166/assign_stmt_1244/ADD_f32_f32_1243_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 444
  // 		iNsTr_15 := (speed_refx_x1 > iNsTr_8)
  //  file prog.aa, line 447
  // (speed_refx_x1 > iNsTr_8)
  SGT_f32_u1_1250_inst <=> (branch_block_stmt_1166/assign_stmt_1251/SGT_f32_u1_1250_Sample/rr branch_block_stmt_1166/assign_stmt_1251/SGT_f32_u1_1250_Update/cr) (branch_block_stmt_1166/assign_stmt_1251/SGT_f32_u1_1250_Sample/ra branch_block_stmt_1166/assign_stmt_1251/SGT_f32_u1_1250_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 448
  if_stmt_1252_branch <=> (branch_block_stmt_1166/if_stmt_1252_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1252_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1252_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 450
  // 		iNsTr_24 := (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
  //  file prog.aa, line 452
  // (speed_refx_x1 + ($bitcast ($float<8,23>) _f-5.000000e+00 ))
  ADD_f32_f32_1263_inst <=> (branch_block_stmt_1166/assign_stmt_1264/ADD_f32_f32_1263_Sample/rr branch_block_stmt_1166/assign_stmt_1264/ADD_f32_f32_1263_Update/cr) (branch_block_stmt_1166/assign_stmt_1264/ADD_f32_f32_1263_Sample/ra branch_block_stmt_1166/assign_stmt_1264/ADD_f32_f32_1263_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 455
  // ($cast ($float<8,23>) iNsTr_13 )
  type_cast_1270_inst <=> (branch_block_stmt_1166/bb_2_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1270/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_2_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1270/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_2_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1270/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_2_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1270/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_24 )
  type_cast_1272_inst <=> (branch_block_stmt_1166/bb_4_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1272/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_4_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1272/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_4_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1272/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_4_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1272/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) speed_refx_x1 )
  type_cast_1274_inst <=> (branch_block_stmt_1166/bb_3_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1274/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_3_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1274/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_3_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1274/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_3_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_sources/type_cast_1274/SplitProtocol/Update/ca)
  phi_stmt_1267 <=> (branch_block_stmt_1166/bb_2_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_req branch_block_stmt_1166/bb_4_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_req branch_block_stmt_1166/bb_3_bb_5_PhiReq/phi_stmt_1267/phi_stmt_1267_req) (branch_block_stmt_1166/merge_stmt_1266_PhiAck/phi_stmt_1267_ack)
  // 		iNsTr_17 := (speed_refx_x0 - iNsTr_6)
  //  file prog.aa, line 458
  // (speed_refx_x0 - iNsTr_6)
  SUB_f32_f32_1279_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SUB_f32_f32_1279_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SUB_f32_f32_1279_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SUB_f32_f32_1279_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SUB_f32_f32_1279_Update/ca)
  // 		iNsTr_18 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 459
  // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_1285_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1285_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1285_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1285_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1285_Update/ca)
  // 		iNsTr_19 := (iNsTr_18 + int_speed_err_temp_2x_x0)
  //  file prog.aa, line 460
  // (iNsTr_18 + int_speed_err_temp_2x_x0)
  ADD_f32_f32_1290_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/ADD_f32_f32_1290_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/ADD_f32_f32_1290_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/ADD_f32_f32_1290_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/ADD_f32_f32_1290_Update/ca)
  // 		iNsTr_20 := (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
  //  file prog.aa, line 461
  // (iNsTr_19 * ($bitcast ($float<8,23>) _f1.000000e+01 ))
  MUL_f32_f32_1296_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1296_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1296_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1296_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/MUL_f32_f32_1296_Update/ca)
  // 		iNsTr_21 := ($cast ($float<11,52>) iNsTr_20 )
  //  file prog.aa, line 462
  // ($cast ($float<11,52>) iNsTr_20 )
  type_cast_1300_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/type_cast_1300_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/type_cast_1300_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/type_cast_1300_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/type_cast_1300_Update/ca)
  // 		iNsTr_22 := (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
  //  file prog.aa, line 464
  // (iNsTr_21 < ($bitcast ($float<11,52>) _f-2.000000e+01 ))
  SLT_f64_u1_1306_inst <=> (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SLT_f64_u1_1306_Sample/rr branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SLT_f64_u1_1306_Update/cr) (branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SLT_f64_u1_1306_Sample/ra branch_block_stmt_1166/assign_stmt_1280_to_assign_stmt_1307/SLT_f64_u1_1306_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 465
  if_stmt_1308_branch <=> (branch_block_stmt_1166/if_stmt_1308_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1308_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1308_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 467
  // 		iNsTr_30 := (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
  //  file prog.aa, line 470
  // (iNsTr_21 > ($bitcast ($float<11,52>) _f2.000000e+01 ))
  SGT_f64_u1_1319_inst <=> (branch_block_stmt_1166/assign_stmt_1320/SGT_f64_u1_1319_Sample/rr branch_block_stmt_1166/assign_stmt_1320/SGT_f64_u1_1319_Update/cr) (branch_block_stmt_1166/assign_stmt_1320/SGT_f64_u1_1319_Sample/ra branch_block_stmt_1166/assign_stmt_1320/SGT_f64_u1_1319_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 471
  if_stmt_1321_branch <=> (branch_block_stmt_1166/if_stmt_1321_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1321_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1321_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 473
  // CP-DP links for merge  
  //  file prog.aa, line 477
  // ($cast ($float<8,23>) iNsTr_20 )
  type_cast_1333_inst <=> (branch_block_stmt_1166/bb_7_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_sources/type_cast_1333/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_7_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_sources/type_cast_1333/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_7_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_sources/type_cast_1333/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_7_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_sources/type_cast_1333/SplitProtocol/Update/ca)
  phi_stmt_1330 <=> (branch_block_stmt_1166/bb_7_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_req branch_block_stmt_1166/bb_5_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_req branch_block_stmt_1166/bb_6_bb_8_PhiReq/phi_stmt_1330/phi_stmt_1330_req) (branch_block_stmt_1166/merge_stmt_1329_PhiAck/phi_stmt_1330_ack)
  // 		iNsTr_26 := (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
  //  file prog.aa, line 480
  // (iNsTr_17 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
  MUL_f32_f32_1345_inst <=> (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/MUL_f32_f32_1345_Sample/rr branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/MUL_f32_f32_1345_Update/cr) (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/MUL_f32_f32_1345_Sample/ra branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/MUL_f32_f32_1345_Update/ca)
  // 		iNsTr_27 := (int_speed_errx_x0 + iNsTr_26)
  //  file prog.aa, line 481
  // (int_speed_errx_x0 + iNsTr_26)
  ADD_f32_f32_1350_inst <=> (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/ADD_f32_f32_1350_Sample/rr branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/ADD_f32_f32_1350_Update/cr) (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/ADD_f32_f32_1350_Sample/ra branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/ADD_f32_f32_1350_Update/ca)
  // 		iNsTr_28 := (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
  //  file prog.aa, line 483
  // (iNsTr_27 < ($bitcast ($float<8,23>) _f-4.000000e+01 ))
  SLT_f32_u1_1356_inst <=> (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/SLT_f32_u1_1356_Sample/rr branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/SLT_f32_u1_1356_Update/cr) (branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/SLT_f32_u1_1356_Sample/ra branch_block_stmt_1166/assign_stmt_1346_to_assign_stmt_1357/SLT_f32_u1_1356_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 484
  if_stmt_1358_branch <=> (branch_block_stmt_1166/if_stmt_1358_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1358_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1358_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 486
  // 		iNsTr_35 := (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
  //  file prog.aa, line 489
  // (iNsTr_27 > ($bitcast ($float<8,23>) _f4.000000e+01 ))
  SGT_f32_u1_1369_inst <=> (branch_block_stmt_1166/assign_stmt_1370/SGT_f32_u1_1369_Sample/rr branch_block_stmt_1166/assign_stmt_1370/SGT_f32_u1_1369_Update/cr) (branch_block_stmt_1166/assign_stmt_1370/SGT_f32_u1_1369_Sample/ra branch_block_stmt_1166/assign_stmt_1370/SGT_f32_u1_1369_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 490
  if_stmt_1371_branch <=> (branch_block_stmt_1166/if_stmt_1371_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1371_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1371_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 492
  // 		phitmp4 := (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
  //  file prog.aa, line 494
  // (iNsTr_27 * ($bitcast ($float<8,23>) _f3.367000e+00 ))
  MUL_f32_f32_1382_inst <=> (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/MUL_f32_f32_1382_Sample/rr branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/MUL_f32_f32_1382_Update/cr) (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/MUL_f32_f32_1382_Sample/ra branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/MUL_f32_f32_1382_Update/ca)
  // 		phitmp5 := ($cast ($float<11,52>) phitmp4 )
  //  file prog.aa, line 495
  // ($cast ($float<11,52>) phitmp4 )
  type_cast_1386_inst <=> (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1386_Sample/rr branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1386_Update/cr) (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1386_Sample/ra branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1386_Update/ca)
  // 		phitmp6 := ($bitcast ($uint<64>) phitmp5 )
  //  file prog.aa, line 496
  // ($bitcast ($uint<64>) phitmp5 )
  type_cast_1390_inst <=> (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1390_Sample/rr branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1390_Update/cr) (branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1390_Sample/ra branch_block_stmt_1166/assign_stmt_1383_to_assign_stmt_1391/type_cast_1390_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 499
  // ($cast ($uint<64>) phitmp6 )
  type_cast_1397_inst <=> (branch_block_stmt_1166/bb_10_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_sources/type_cast_1397/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_10_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_sources/type_cast_1397/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_10_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_sources/type_cast_1397/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_10_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_sources/type_cast_1397/SplitProtocol/Update/ca)
  phi_stmt_1394 <=> (branch_block_stmt_1166/bb_10_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_req branch_block_stmt_1166/bb_8_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_req branch_block_stmt_1166/bb_9_bb_11_PhiReq/phi_stmt_1394/phi_stmt_1394_req) (branch_block_stmt_1166/merge_stmt_1393_PhiAck/phi_stmt_1394_ack)
  // 		iNsTr_32 := ($cast ($float<11,52>) speed_refx_x0 )
  //  file prog.aa, line 502
  // ($cast ($float<11,52>) speed_refx_x0 )
  type_cast_1407_inst <=> (branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/type_cast_1407_Sample/rr branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/type_cast_1407_Update/cr) (branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/type_cast_1407_Sample/ra branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/type_cast_1407_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
  //  file prog.aa, line 504
  // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
  SGT_f64_u1_1413_inst <=> (branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/SGT_f64_u1_1413_Sample/rr branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/SGT_f64_u1_1413_Update/cr) (branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/SGT_f64_u1_1413_Sample/ra branch_block_stmt_1166/assign_stmt_1408_to_assign_stmt_1414/SGT_f64_u1_1413_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 505
  if_stmt_1415_branch <=> (branch_block_stmt_1166/if_stmt_1415_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1415_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1415_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 507
  // 		iNsTr_38 := (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
  //  file prog.aa, line 510
  // (iNsTr_32 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
  SGT_f64_u1_1426_inst <=> (branch_block_stmt_1166/assign_stmt_1427/SGT_f64_u1_1426_Sample/rr branch_block_stmt_1166/assign_stmt_1427/SGT_f64_u1_1426_Update/cr) (branch_block_stmt_1166/assign_stmt_1427/SGT_f64_u1_1426_Sample/ra branch_block_stmt_1166/assign_stmt_1427/SGT_f64_u1_1426_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 511
  if_stmt_1428_branch <=> (branch_block_stmt_1166/if_stmt_1428_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1428_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1428_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 513
  // 		iNsTr_52 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
  //  file prog.aa, line 515
  // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
  MUL_f32_f32_1439_inst <=> (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1439_Sample/rr branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1439_Update/cr) (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1439_Sample/ra branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1439_Update/ca)
  // 		iNsTr_53 := (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
  //  file prog.aa, line 516
  // (iNsTr_52 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
  ADD_f32_f32_1445_inst <=> (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/ADD_f32_f32_1445_Sample/rr branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/ADD_f32_f32_1445_Update/cr) (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/ADD_f32_f32_1445_Sample/ra branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/ADD_f32_f32_1445_Update/ca)
  // 		iNsTr_54 := (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  //  file prog.aa, line 517
  // (iNsTr_53 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  MUL_f32_f32_1451_inst <=> (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1451_Sample/rr branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1451_Update/cr) (branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1451_Sample/ra branch_block_stmt_1166/assign_stmt_1440_to_assign_stmt_1452/MUL_f32_f32_1451_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 520
  // 		iNsTr_50 := (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
  //  file prog.aa, line 523
  // (iNsTr_32 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
  SGT_f64_u1_1459_inst <=> (branch_block_stmt_1166/assign_stmt_1460/SGT_f64_u1_1459_Sample/rr branch_block_stmt_1166/assign_stmt_1460/SGT_f64_u1_1459_Update/cr) (branch_block_stmt_1166/assign_stmt_1460/SGT_f64_u1_1459_Sample/ra branch_block_stmt_1166/assign_stmt_1460/SGT_f64_u1_1459_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 524
  if_stmt_1461_branch <=> (branch_block_stmt_1166/if_stmt_1461_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1461_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1461_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 526
  // 		iNsTr_79 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
  //  file prog.aa, line 528
  // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
  MUL_f32_f32_1472_inst <=> (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1472_Sample/rr branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1472_Update/cr) (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1472_Sample/ra branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1472_Update/ca)
  // 		iNsTr_80 := (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
  //  file prog.aa, line 529
  // (iNsTr_79 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
  ADD_f32_f32_1478_inst <=> (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/ADD_f32_f32_1478_Sample/rr branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/ADD_f32_f32_1478_Update/cr) (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/ADD_f32_f32_1478_Sample/ra branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/ADD_f32_f32_1478_Update/ca)
  // 		iNsTr_81 := (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  //  file prog.aa, line 530
  // (iNsTr_80 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  MUL_f32_f32_1484_inst <=> (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1484_Sample/rr branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1484_Update/cr) (branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1484_Sample/ra branch_block_stmt_1166/assign_stmt_1473_to_assign_stmt_1485/MUL_f32_f32_1484_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 533
  // 		iNsTr_75 := (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
  //  file prog.aa, line 535
  // (speed_refx_x0 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
  MUL_f32_f32_1492_inst <=> (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1492_Sample/rr branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1492_Update/cr) (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1492_Sample/ra branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1492_Update/ca)
  // 		iNsTr_76 := (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
  //  file prog.aa, line 536
  // (iNsTr_75 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
  ADD_f32_f32_1498_inst <=> (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/ADD_f32_f32_1498_Sample/rr branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/ADD_f32_f32_1498_Update/cr) (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/ADD_f32_f32_1498_Sample/ra branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/ADD_f32_f32_1498_Update/ca)
  // 		iNsTr_77 := (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  //  file prog.aa, line 537
  // (iNsTr_76 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  MUL_f32_f32_1504_inst <=> (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1504_Sample/rr branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1504_Update/cr) (branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1504_Sample/ra branch_block_stmt_1166/assign_stmt_1493_to_assign_stmt_1505/MUL_f32_f32_1504_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 540
  // ($cast ($float<8,23>) iNsTr_54 )
  type_cast_1511_inst <=> (branch_block_stmt_1166/bb_13_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1511/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_13_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1511/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_13_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1511/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_13_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1511/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_81 )
  type_cast_1513_inst <=> (branch_block_stmt_1166/bb_15_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1513/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_15_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1513/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_15_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1513/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_15_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1513/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_77 )
  type_cast_1515_inst <=> (branch_block_stmt_1166/bb_16_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1515/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_16_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1515/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_16_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1515/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_16_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_sources/type_cast_1515/SplitProtocol/Update/ca)
  phi_stmt_1508 <=> (branch_block_stmt_1166/bb_13_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_req branch_block_stmt_1166/bb_15_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_req branch_block_stmt_1166/bb_16_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_req branch_block_stmt_1166/bb_11_bb_17_PhiReq/phi_stmt_1508/phi_stmt_1508_req) (branch_block_stmt_1166/merge_stmt_1507_PhiAck/phi_stmt_1508_ack)
  // 		iNsTr_40 := (id_prevx_x0 + flux_rotor_prevx_x0)
  //  file prog.aa, line 543
  // (id_prevx_x0 + flux_rotor_prevx_x0)
  ADD_f32_f32_1523_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1523_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1523_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1523_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1523_Update/ca)
  // 		iNsTr_41 := (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 544
  // (iNsTr_10 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_1529_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1529_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1529_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1529_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1529_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 + theta_prevx_x0)
  //  file prog.aa, line 545
  // (iNsTr_41 + theta_prevx_x0)
  ADD_f32_f32_1534_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1534_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1534_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1534_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/ADD_f32_f32_1534_Update/ca)
  // 		iNsTr_43 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
  //  file prog.aa, line 546
  // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
  MUL_f32_f32_1540_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1540_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1540_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1540_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/MUL_f32_f32_1540_Update/ca)
  // 		iNsTr_44 := ($cast ($float<11,52>) iNsTr_43 )
  //  file prog.aa, line 547
  // ($cast ($float<11,52>) iNsTr_43 )
  type_cast_1544_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1544_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1544_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1544_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1544_Update/ca)
  // 		tmp15x_xix_xi := ($bitcast ($uint<64>) iNsTr_44 )
  //  file prog.aa, line 548
  // ($bitcast ($uint<64>) iNsTr_44 )
  type_cast_1548_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1548_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1548_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1548_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/type_cast_1548_Update/ca)
  // 		iNsTr_45 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 549
  // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1554_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1554_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1554_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1554_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1554_Update/ca)
  // 		iNsTr_46 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 550
  // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1560_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1560_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1560_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1560_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/AND_u64_u64_1560_Update/ca)
  // 		iNsTr_47 := (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 552
  // (iNsTr_45 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_1566_inst <=> (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/EQ_u64_u1_1566_Sample/rr branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/EQ_u64_u1_1566_Update/cr) (branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/EQ_u64_u1_1566_Sample/ra branch_block_stmt_1166/assign_stmt_1524_to_assign_stmt_1567/EQ_u64_u1_1566_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 553
  if_stmt_1568_branch <=> (branch_block_stmt_1166/if_stmt_1568_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1568_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1568_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 555
  // 		iNsTr_72 := (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 557
  // (tmp15x_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1579_inst <=> (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1579_Sample/rr branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1579_Update/cr) (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1579_Sample/ra branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1579_Update/ca)
  // 		tmp17x_xmaskx_xix_xi := (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 558
  // (torque_refx_x0 & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1585_inst <=> (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1585_Sample/rr branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1585_Update/cr) (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1585_Sample/ra branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1585_Update/ca)
  // 		iNsTr_73 := (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
  //  file prog.aa, line 559
  // (($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ) - iNsTr_72)
  SUB_u64_u64_1591_inst <=> (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/SUB_u64_u64_1591_Sample/rr branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/SUB_u64_u64_1591_Update/cr) (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/SUB_u64_u64_1591_Sample/ra branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/SUB_u64_u64_1591_Update/ca)
  // 		phitmpx_xix_xi := (iNsTr_73 + tmp17x_xmaskx_xix_xi)
  //  file prog.aa, line 560
  // (iNsTr_73 + tmp17x_xmaskx_xix_xi)
  ADD_u64_u64_1596_inst <=> (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/ADD_u64_u64_1596_Sample/rr branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/ADD_u64_u64_1596_Update/cr) (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/ADD_u64_u64_1596_Sample/ra branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/ADD_u64_u64_1596_Update/ca)
  // 		phitmp20x_xix_xi := (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 561
  // (phitmpx_xix_xi & ($bitcast ($uint<64>) _b0111111111110000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1602_inst <=> (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1602_Sample/rr branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1602_Update/cr) (branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1602_Sample/ra branch_block_stmt_1166/assign_stmt_1580_to_assign_stmt_1603/AND_u64_u64_1602_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 564
  // ($cast ($uint<64>) phitmp20x_xix_xi )
  type_cast_1609_inst <=> (branch_block_stmt_1166/bb_18_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/type_cast_1609/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_18_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/type_cast_1609/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_18_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/type_cast_1609/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_18_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_sources/type_cast_1609/SplitProtocol/Update/ca)
  phi_stmt_1606 <=> (branch_block_stmt_1166/bb_18_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_req branch_block_stmt_1166/bb_17_bb_19_PhiReq/phi_stmt_1606/phi_stmt_1606_req) (branch_block_stmt_1166/merge_stmt_1605_PhiAck/phi_stmt_1606_ack)
  // 		iNsTr_57 := (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 567
  // (tmp15x_xix_xi | ($bitcast ($uint<64>) _b0011111111100000000000000000000000000000000000000000000000000000  ))
  OR_u64_u64_1618_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u64_u64_1618_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u64_u64_1618_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u64_u64_1618_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u64_u64_1618_Update/ca)
  // 		iNsTr_58 := (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 568
  // (iNsTr_57 & ($bitcast ($uint<64>) _b0011111111101111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1624_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/AND_u64_u64_1624_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/AND_u64_u64_1624_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/AND_u64_u64_1624_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/AND_u64_u64_1624_Update/ca)
  // 		tmp11x_xix_xi := ($bitcast ($float<11,52>) iNsTr_58 )
  //  file prog.aa, line 569
  // ($bitcast ($float<11,52>) iNsTr_58 )
  type_cast_1628_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/type_cast_1628_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/type_cast_1628_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/type_cast_1628_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/type_cast_1628_Update/ca)
  // 		iNsTr_59 := (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  //  file prog.aa, line 570
  // (tmp11x_xix_xi * ($bitcast ($float<11,52>) _f1.882353e+00 ))
  MUL_f64_f64_1634_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1634_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1634_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1634_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1634_Update/ca)
  // 		iNsTr_60 := (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
  //  file prog.aa, line 571
  // (($bitcast ($float<11,52>) _f2.823529e+00 ) - iNsTr_59)
  SUB_f64_f64_1640_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1640_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1640_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1640_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1640_Update/ca)
  // 		iNsTr_61 := (tmp11x_xix_xi * iNsTr_60)
  //  file prog.aa, line 572
  // (tmp11x_xix_xi * iNsTr_60)
  MUL_f64_f64_1645_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1645_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1645_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1645_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1645_Update/ca)
  // 		iNsTr_62 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
  //  file prog.aa, line 573
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_61)
  SUB_f64_f64_1651_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1651_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1651_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1651_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1651_Update/ca)
  // 		iNsTr_63 := (iNsTr_60 * iNsTr_62)
  //  file prog.aa, line 574
  // (iNsTr_60 * iNsTr_62)
  MUL_f64_f64_1656_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1656_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1656_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1656_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1656_Update/ca)
  // 		iNsTr_64 := (tmp11x_xix_xi * iNsTr_63)
  //  file prog.aa, line 575
  // (tmp11x_xix_xi * iNsTr_63)
  MUL_f64_f64_1661_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1661_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1661_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1661_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1661_Update/ca)
  // 		iNsTr_65 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
  //  file prog.aa, line 576
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_64)
  SUB_f64_f64_1667_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1667_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1667_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1667_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1667_Update/ca)
  // 		iNsTr_66 := (iNsTr_63 * iNsTr_65)
  //  file prog.aa, line 577
  // (iNsTr_63 * iNsTr_65)
  MUL_f64_f64_1672_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1672_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1672_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1672_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1672_Update/ca)
  // 		iNsTr_67 := (tmp11x_xix_xi * iNsTr_66)
  //  file prog.aa, line 578
  // (tmp11x_xix_xi * iNsTr_66)
  MUL_f64_f64_1677_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1677_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1677_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1677_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1677_Update/ca)
  // 		iNsTr_68 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
  //  file prog.aa, line 579
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_67)
  SUB_f64_f64_1683_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1683_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1683_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1683_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/SUB_f64_f64_1683_Update/ca)
  // 		iNsTr_69 := (iNsTr_66 * iNsTr_68)
  //  file prog.aa, line 580
  // (iNsTr_66 * iNsTr_68)
  MUL_f64_f64_1688_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1688_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1688_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1688_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/MUL_f64_f64_1688_Update/ca)
  // 		iNsTr_70 := (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 582
  // (iNsTr_46 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_1694_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/EQ_u64_u1_1694_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/EQ_u64_u1_1694_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/EQ_u64_u1_1694_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/EQ_u64_u1_1694_Update/ca)
  // 		orx_xcondx_xix_xi := (iNsTr_47 | iNsTr_70)
  //  file prog.aa, line 583
  // (iNsTr_47 | iNsTr_70)
  OR_u1_u1_1699_inst <=> (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u1_u1_1699_Sample/rr branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u1_u1_1699_Update/cr) (branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u1_u1_1699_Sample/ra branch_block_stmt_1166/assign_stmt_1619_to_assign_stmt_1700/OR_u1_u1_1699_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 584
  if_stmt_1701_branch <=> (branch_block_stmt_1166/if_stmt_1701_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1701_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1701_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 586
  // 		iNsTr_94 := (tmp11x_xix_xi * iNsTr_69)
  //  file prog.aa, line 588
  // (tmp11x_xix_xi * iNsTr_69)
  MUL_f64_f64_1711_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1711_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1711_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1711_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1711_Update/ca)
  // 		iNsTr_95 := (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 589
  // (torque_refx_x0 & ($bitcast ($uint<64>) _b0000000000001111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1717_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1717_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1717_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1717_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1717_Update/ca)
  // 		iNsTr_96 := (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
  //  file prog.aa, line 590
  // (($bitcast ($float<11,52>) _f2.000000e+00 ) - iNsTr_94)
  SUB_f64_f64_1723_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/SUB_f64_f64_1723_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/SUB_f64_f64_1723_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/SUB_f64_f64_1723_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/SUB_f64_f64_1723_Update/ca)
  // 		iNsTr_97 := (iNsTr_56 | iNsTr_95)
  //  file prog.aa, line 591
  // (iNsTr_56 | iNsTr_95)
  OR_u64_u64_1728_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/OR_u64_u64_1728_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/OR_u64_u64_1728_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/OR_u64_u64_1728_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/OR_u64_u64_1728_Update/ca)
  // 		iNsTr_98 := (iNsTr_69 * iNsTr_96)
  //  file prog.aa, line 592
  // (iNsTr_69 * iNsTr_96)
  MUL_f64_f64_1733_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1733_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1733_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1733_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1733_Update/ca)
  // 		tmp13x_xix_xi := ($bitcast ($float<11,52>) iNsTr_97 )
  //  file prog.aa, line 593
  // ($bitcast ($float<11,52>) iNsTr_97 )
  type_cast_1737_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1737_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1737_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1737_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1737_Update/ca)
  // 		iNsTr_99 := (tmp13x_xix_xi * iNsTr_98)
  //  file prog.aa, line 594
  // (tmp13x_xix_xi * iNsTr_98)
  MUL_f64_f64_1742_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1742_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1742_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1742_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/MUL_f64_f64_1742_Update/ca)
  // 		phitmp19x_xix_xi := ($bitcast ($uint<64>) iNsTr_99 )
  //  file prog.aa, line 595
  // ($bitcast ($uint<64>) iNsTr_99 )
  type_cast_1746_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1746_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1746_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1746_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/type_cast_1746_Update/ca)
  // 		phitmp21x_xix_xi := (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 596
  // (phitmp19x_xix_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1752_inst <=> (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1752_Sample/rr branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1752_Update/cr) (branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1752_Sample/ra branch_block_stmt_1166/assign_stmt_1712_to_assign_stmt_1753/AND_u64_u64_1752_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 599
  // ($cast ($uint<64>) phitmp21x_xix_xi )
  type_cast_1759_inst <=> (branch_block_stmt_1166/bb_20_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_sources/type_cast_1759/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_20_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_sources/type_cast_1759/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_20_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_sources/type_cast_1759/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_20_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_sources/type_cast_1759/SplitProtocol/Update/ca)
  phi_stmt_1756 <=> (branch_block_stmt_1166/bb_20_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_req branch_block_stmt_1166/bb_19_iq_err_calcx_xexit_PhiReq/phi_stmt_1756/phi_stmt_1756_req) (branch_block_stmt_1166/merge_stmt_1755_PhiAck/phi_stmt_1756_ack)
  // 		iNsTr_84 := (torque_refx_x0 ^ tmp15x_xix_xi)
  //  file prog.aa, line 602
  // (torque_refx_x0 ^ tmp15x_xix_xi)
  XOR_u64_u64_1767_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/XOR_u64_u64_1767_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/XOR_u64_u64_1767_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/XOR_u64_u64_1767_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/XOR_u64_u64_1767_Update/ca)
  // 		iNsTr_85 := (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 603
  // (iNsTr_84 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1773_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/AND_u64_u64_1773_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/AND_u64_u64_1773_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/AND_u64_u64_1773_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/AND_u64_u64_1773_Update/ca)
  // 		iNsTr_86 := (iNsTr_83 | iNsTr_85)
  //  file prog.aa, line 604
  // (iNsTr_83 | iNsTr_85)
  OR_u64_u64_1778_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/OR_u64_u64_1778_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/OR_u64_u64_1778_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/OR_u64_u64_1778_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/OR_u64_u64_1778_Update/ca)
  // 		tmp4x_xix_xi := ($bitcast ($float<11,52>) iNsTr_86 )
  //  file prog.aa, line 605
  // ($bitcast ($float<11,52>) iNsTr_86 )
  type_cast_1782_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1782_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1782_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1782_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1782_Update/ca)
  // 		iNsTr_87 := ($cast ($float<8,23>) tmp4x_xix_xi )
  //  file prog.aa, line 606
  // ($cast ($float<8,23>) tmp4x_xix_xi )
  type_cast_1786_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1786_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1786_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1786_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/type_cast_1786_Update/ca)
  // 		iNsTr_88 := (flux_refx_x0 - iNsTr_40)
  //  file prog.aa, line 607
  // (flux_refx_x0 - iNsTr_40)
  SUB_f32_f32_1791_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SUB_f32_f32_1791_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SUB_f32_f32_1791_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SUB_f32_f32_1791_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SUB_f32_f32_1791_Update/ca)
  // 		iNsTr_89 := (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 608
  // (iNsTr_88 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_1797_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1797_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1797_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1797_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1797_Update/ca)
  // 		iNsTr_90 := (iNsTr_89 + int_flux_err_temp_2x_x0)
  //  file prog.aa, line 609
  // (iNsTr_89 + int_flux_err_temp_2x_x0)
  ADD_f32_f32_1802_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/ADD_f32_f32_1802_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/ADD_f32_f32_1802_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/ADD_f32_f32_1802_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/ADD_f32_f32_1802_Update/ca)
  // 		iNsTr_91 := (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
  //  file prog.aa, line 610
  // (iNsTr_90 * ($bitcast ($float<8,23>) _f2.500000e+01 ))
  MUL_f32_f32_1808_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1808_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1808_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1808_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/MUL_f32_f32_1808_Update/ca)
  // 		iNsTr_92 := (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
  //  file prog.aa, line 612
  // (iNsTr_91 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
  SLT_f32_u1_1814_inst <=> (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SLT_f32_u1_1814_Sample/rr branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SLT_f32_u1_1814_Update/cr) (branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SLT_f32_u1_1814_Sample/ra branch_block_stmt_1166/assign_stmt_1768_to_assign_stmt_1815/SLT_f32_u1_1814_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 613
  if_stmt_1816_branch <=> (branch_block_stmt_1166/if_stmt_1816_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1816_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1816_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 615
  // 		iNsTr_105 := (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
  //  file prog.aa, line 618
  // (iNsTr_91 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
  SGT_f32_u1_1827_inst <=> (branch_block_stmt_1166/assign_stmt_1828/SGT_f32_u1_1827_Sample/rr branch_block_stmt_1166/assign_stmt_1828/SGT_f32_u1_1827_Update/cr) (branch_block_stmt_1166/assign_stmt_1828/SGT_f32_u1_1827_Sample/ra branch_block_stmt_1166/assign_stmt_1828/SGT_f32_u1_1827_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 619
  if_stmt_1829_branch <=> (branch_block_stmt_1166/if_stmt_1829_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1829_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1829_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 621
  // CP-DP links for merge  
  //  file prog.aa, line 625
  // ($cast ($float<8,23>) iNsTr_91 )
  type_cast_1841_inst <=> (branch_block_stmt_1166/bb_23_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_sources/type_cast_1841/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_23_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_sources/type_cast_1841/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_23_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_sources/type_cast_1841/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_23_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_sources/type_cast_1841/SplitProtocol/Update/ca)
  phi_stmt_1838 <=> (branch_block_stmt_1166/bb_23_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_req branch_block_stmt_1166/iq_err_calcx_xexit_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_req branch_block_stmt_1166/bb_22_bb_24_PhiReq/phi_stmt_1838/phi_stmt_1838_req) (branch_block_stmt_1166/merge_stmt_1837_PhiAck/phi_stmt_1838_ack)
  // 		iNsTr_101 := (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
  //  file prog.aa, line 628
  // (iNsTr_88 * ($bitcast ($float<8,23>) _f6.500000e+01 ))
  MUL_f32_f32_1853_inst <=> (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/MUL_f32_f32_1853_Sample/rr branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/MUL_f32_f32_1853_Update/cr) (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/MUL_f32_f32_1853_Sample/ra branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/MUL_f32_f32_1853_Update/ca)
  // 		iNsTr_102 := (int_flux_errx_x0 + iNsTr_101)
  //  file prog.aa, line 629
  // (int_flux_errx_x0 + iNsTr_101)
  ADD_f32_f32_1858_inst <=> (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/ADD_f32_f32_1858_Sample/rr branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/ADD_f32_f32_1858_Update/cr) (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/ADD_f32_f32_1858_Sample/ra branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/ADD_f32_f32_1858_Update/ca)
  // 		iNsTr_103 := (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
  //  file prog.aa, line 631
  // (iNsTr_102 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
  SLT_f32_u1_1864_inst <=> (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/SLT_f32_u1_1864_Sample/rr branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/SLT_f32_u1_1864_Update/cr) (branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/SLT_f32_u1_1864_Sample/ra branch_block_stmt_1166/assign_stmt_1854_to_assign_stmt_1865/SLT_f32_u1_1864_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 632
  if_stmt_1866_branch <=> (branch_block_stmt_1166/if_stmt_1866_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1866_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1866_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 634
  // 		iNsTr_110 := (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
  //  file prog.aa, line 637
  // (iNsTr_102 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
  SGT_f32_u1_1877_inst <=> (branch_block_stmt_1166/assign_stmt_1878/SGT_f32_u1_1877_Sample/rr branch_block_stmt_1166/assign_stmt_1878/SGT_f32_u1_1877_Update/cr) (branch_block_stmt_1166/assign_stmt_1878/SGT_f32_u1_1877_Sample/ra branch_block_stmt_1166/assign_stmt_1878/SGT_f32_u1_1877_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 638
  if_stmt_1879_branch <=> (branch_block_stmt_1166/if_stmt_1879_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1879_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1879_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 640
  // 		phitmp := ($cast ($float<11,52>) iNsTr_102 )
  //  file prog.aa, line 642
  // ($cast ($float<11,52>) iNsTr_102 )
  type_cast_1888_inst <=> (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1888_Sample/rr branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1888_Update/cr) (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1888_Sample/ra branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1888_Update/ca)
  // 		phitmp7 := ($bitcast ($uint<64>) phitmp )
  //  file prog.aa, line 643
  // ($bitcast ($uint<64>) phitmp )
  type_cast_1892_inst <=> (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1892_Sample/rr branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1892_Update/cr) (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1892_Sample/ra branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/type_cast_1892_Update/ca)
  // 		iNsTr_126 := (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 644
  // (phitmp7 & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1898_inst <=> (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/AND_u64_u64_1898_Sample/rr branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/AND_u64_u64_1898_Update/cr) (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/AND_u64_u64_1898_Sample/ra branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/AND_u64_u64_1898_Update/ca)
  // 		iNsTr_127 := (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 646
  // (iNsTr_126 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  EQ_u64_u1_1904_inst <=> (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/EQ_u64_u1_1904_Sample/rr branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/EQ_u64_u1_1904_Update/cr) (branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/EQ_u64_u1_1904_Sample/ra branch_block_stmt_1166/assign_stmt_1889_to_assign_stmt_1905/EQ_u64_u1_1904_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 647
  if_stmt_1906_branch <=> (branch_block_stmt_1166/if_stmt_1906_eval_test/branch_req) (branch_block_stmt_1166/if_stmt_1906_else_link/else_choice_transition branch_block_stmt_1166/if_stmt_1906_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 649
  // ($cast ($uint<64>) phitmp7 )
  type_cast_1916_inst <=> (branch_block_stmt_1166/bb_26_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_sources/type_cast_1916/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_26_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_sources/type_cast_1916/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_26_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_sources/type_cast_1916/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_26_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_sources/type_cast_1916/SplitProtocol/Update/ca)
  phi_stmt_1913 <=> (branch_block_stmt_1166/bb_26_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_req branch_block_stmt_1166/bb_24_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_req branch_block_stmt_1166/bb_25_xx_xthread12_PhiReq/phi_stmt_1913/phi_stmt_1913_req) (branch_block_stmt_1166/merge_stmt_1912_PhiAck/phi_stmt_1913_ack)
  // 		iNsTr_107 := (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 652
  // (phitmp20x_xi15x_xin & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1928_inst <=> (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1928_Sample/rr branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1928_Update/cr) (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1928_Sample/ra branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1928_Update/ca)
  // 		tmp13x_xi := ($bitcast ($float<11,52>) iNsTr_107 )
  //  file prog.aa, line 653
  // ($bitcast ($float<11,52>) iNsTr_107 )
  type_cast_1932_inst <=> (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1932_Sample/rr branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1932_Update/cr) (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1932_Sample/ra branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1932_Update/ca)
  // 		iNsTr_108 := (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
  //  file prog.aa, line 654
  // (tmp13x_xi * ($bitcast ($float<11,52>) _f1.235178e+00 ))
  MUL_f64_f64_1938_inst <=> (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/MUL_f64_f64_1938_Sample/rr branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/MUL_f64_f64_1938_Update/cr) (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/MUL_f64_f64_1938_Sample/ra branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/MUL_f64_f64_1938_Update/ca)
  // 		phitmp19x_xi := ($bitcast ($uint<64>) iNsTr_108 )
  //  file prog.aa, line 655
  // ($bitcast ($uint<64>) iNsTr_108 )
  type_cast_1942_inst <=> (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1942_Sample/rr branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1942_Update/cr) (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1942_Sample/ra branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/type_cast_1942_Update/ca)
  // 		phitmp21x_xi := (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  //  file prog.aa, line 656
  // (phitmp19x_xi & ($bitcast ($uint<64>) _b0111111111111111111111111111111111111111111111111111111111111111  ))
  AND_u64_u64_1948_inst <=> (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1948_Sample/rr branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1948_Update/cr) (branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1948_Sample/ra branch_block_stmt_1166/assign_stmt_1929_to_assign_stmt_1949/AND_u64_u64_1948_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 659
  // ($cast ($uint<64>) phitmp20x_xi15x_xin )
  type_cast_1955_inst <=> (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1955/SplitProtocol/Sample/rr branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1955/SplitProtocol/Update/cr) (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1955/SplitProtocol/Sample/ra branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1955/SplitProtocol/Update/ca)
  // ($cast ($uint<64>) phitmp7 )
  type_cast_1957_inst <=> (branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1957/SplitProtocol/Sample/rr branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1957/SplitProtocol/Update/cr) (branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1957/SplitProtocol/Sample/ra branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_sources/type_cast_1957/SplitProtocol/Update/ca)
  phi_stmt_1952 <=> (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_req branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1952/phi_stmt_1952_req) (branch_block_stmt_1166/merge_stmt_1951_PhiAck/phi_stmt_1952_ack)
  // ($cast ($uint<64>) phitmp21x_xi )
  type_cast_1961_inst <=> (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_sources/type_cast_1961/SplitProtocol/Sample/rr branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_sources/type_cast_1961/SplitProtocol/Update/cr) (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_sources/type_cast_1961/SplitProtocol/Sample/ra branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_sources/type_cast_1961/SplitProtocol/Update/ca)
  phi_stmt_1958 <=> (branch_block_stmt_1166/xx_xthread12_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_req branch_block_stmt_1166/bb_26_fdiv32x_xexit_PhiReq/phi_stmt_1958/phi_stmt_1958_req) (branch_block_stmt_1166/merge_stmt_1951_PhiAck/phi_stmt_1958_ack)
  // 		iNsTr_114 := (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  //  file prog.aa, line 663
  // (flux_addx_x0911 & ($bitcast ($uint<64>) _b1000000000000000000000000000000000000000000000000000000000000000  ))
  AND_u64_u64_1970_inst <=> (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/AND_u64_u64_1970_Sample/rr branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/AND_u64_u64_1970_Update/cr) (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/AND_u64_u64_1970_Sample/ra branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/AND_u64_u64_1970_Update/ca)
  // 		iNsTr_115 := (iNsTr_113 | iNsTr_114)
  //  file prog.aa, line 664
  // (iNsTr_113 | iNsTr_114)
  OR_u64_u64_1975_inst <=> (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/OR_u64_u64_1975_Sample/rr branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/OR_u64_u64_1975_Update/cr) (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/OR_u64_u64_1975_Sample/ra branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/OR_u64_u64_1975_Update/ca)
  // 		tmp4x_xi := ($bitcast ($float<11,52>) iNsTr_115 )
  //  file prog.aa, line 665
  // ($bitcast ($float<11,52>) iNsTr_115 )
  type_cast_1979_inst <=> (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1979_Sample/rr branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1979_Update/cr) (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1979_Sample/ra branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1979_Update/ca)
  // 		iNsTr_116 := ($cast ($float<8,23>) tmp4x_xi )
  //  file prog.aa, line 666
  // ($cast ($float<8,23>) tmp4x_xi )
  type_cast_1983_inst <=> (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1983_Sample/rr branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1983_Update/cr) (branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1983_Sample/ra branch_block_stmt_1166/assign_stmt_1971_to_assign_stmt_1984/type_cast_1983_Update/ca)
  // 		out_data1 := iNsTr_116
  //  file prog.aa, line 667
  // out_data1
  WPIPE_out_data1_1985_inst <=> (branch_block_stmt_1166/assign_stmt_1987/WPIPE_out_data1_1985_Sample/req branch_block_stmt_1166/assign_stmt_1987/WPIPE_out_data1_1985_Update/req) (branch_block_stmt_1166/assign_stmt_1987/WPIPE_out_data1_1985_Sample/ack branch_block_stmt_1166/assign_stmt_1987/WPIPE_out_data1_1985_Update/ack)
  // 		out_data2 := iNsTr_87
  //  file prog.aa, line 668
  // out_data2
  WPIPE_out_data2_1988_inst <=> (branch_block_stmt_1166/assign_stmt_1990/WPIPE_out_data2_1988_Sample/req branch_block_stmt_1166/assign_stmt_1990/WPIPE_out_data2_1988_Update/req) (branch_block_stmt_1166/assign_stmt_1990/WPIPE_out_data2_1988_Sample/ack branch_block_stmt_1166/assign_stmt_1990/WPIPE_out_data2_1988_Update/ack)
  // 		out_data3 := iNsTr_42
  //  file prog.aa, line 669
  // out_data3
  WPIPE_out_data3_1991_inst <=> (branch_block_stmt_1166/assign_stmt_1993/WPIPE_out_data3_1991_Sample/req branch_block_stmt_1166/assign_stmt_1993/WPIPE_out_data3_1991_Update/req) (branch_block_stmt_1166/assign_stmt_1993/WPIPE_out_data3_1991_Sample/ack branch_block_stmt_1166/assign_stmt_1993/WPIPE_out_data3_1991_Update/ack)
  // 		out_data4 := iNsTr_40
  //  file prog.aa, line 670
  // out_data4
  WPIPE_out_data4_1994_inst <=> (branch_block_stmt_1166/assign_stmt_1996/WPIPE_out_data4_1994_Sample/req branch_block_stmt_1166/assign_stmt_1996/WPIPE_out_data4_1994_Update/req) (branch_block_stmt_1166/assign_stmt_1996/WPIPE_out_data4_1994_Sample/ack branch_block_stmt_1166/assign_stmt_1996/WPIPE_out_data4_1994_Update/ack)
  // 		phitmp1 := (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
  //  file prog.aa, line 671
  // (iNsTr_40 * ($bitcast ($float<8,23>) _f9.995000e-01 ))
  MUL_f32_f32_2001_inst <=> (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2001_Sample/rr branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2001_Update/cr) (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2001_Sample/ra branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2001_Update/ca)
  // 		phitmp2 := (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  //  file prog.aa, line 672
  // (iNsTr_2 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  MUL_f32_f32_2007_inst <=> (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2007_Sample/rr branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2007_Update/cr) (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2007_Sample/ra branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2007_Update/ca)
  // 		phitmp3 := (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
  //  file prog.aa, line 673
  // (phitmp2 * ($bitcast ($float<8,23>) _f5.000000e-04 ))
  MUL_f32_f32_2013_inst <=> (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2013_Sample/rr branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2013_Update/cr) (branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2013_Sample/ra branch_block_stmt_1166/assign_stmt_2002_to_assign_stmt_2014/MUL_f32_f32_2013_Update/ca)
}
